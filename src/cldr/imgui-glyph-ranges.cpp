// generated by get_translation_characters.py; example:
//   ./build-scripts/get_translation_characters.py en ar cs da de el es fr hu id is it ja ko nb nl pl pt ru sr tr uk_UA zh_Hans zh_Hant > src/cldr/imgui-glyph-ranges.cpp

// NOLINTBEGIN(cata-static-declarations,readability-function-size)
static void AddGlyphRangesFromCLDRForEN(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    for(int i = 0; i < 23; ++i) {
        b->AddChar(0x25 + i);
    }
    for(int i = 0; i < 29; ++i) {
        b->AddChar(0x3f + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 26; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0xa7);
    for(int i = 0; i < 16; ++i) {
        b->AddChar(0xc0 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xd1 + i);
    }
    b->AddChar(0xd6);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xd8 + i);
    }
    for(int i = 0; i < 16; ++i) {
        b->AddChar(0xe0 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xf1 + i);
    }
    b->AddChar(0xf6);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xf8 + i);
    }
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xff + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x112 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x12a + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x14c + i);
    }
    b->AddChar(0x152);
    b->AddChar(0x153);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x16a + i);
    }
    b->AddChar(0x178);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2014);
    b->AddChar(0x2018);
    b->AddChar(0x2019);
    b->AddChar(0x201c);
    b->AddChar(0x201d);
    b->AddChar(0x2020);
    b->AddChar(0x2021);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
    b->AddChar(0x2032);
    b->AddChar(0x2033);
}

static void AddGlyphRangesFromCLDRForAR(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x25);
    b->AddChar(0x27);
    b->AddChar(0x28);
    b->AddChar(0x29);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x2b + i);
    }
    for(int i = 0; i < 11; ++i) {
        b->AddChar(0x30 + i);
    }
    b->AddChar(0x5b);
    b->AddChar(0x5d);
    b->AddChar(0xab);
    b->AddChar(0xbb);
    b->AddChar(0x609);
    b->AddChar(0x60c);
    b->AddChar(0x61b);
    b->AddChar(0x61c);
    b->AddChar(0x61f);
    for(int i = 0; i < 26; ++i) {
        b->AddChar(0x621 + i);
    }
    for(int i = 0; i < 19; ++i) {
        b->AddChar(0x640 + i);
    }
    for(int i = 0; i < 13; ++i) {
        b->AddChar(0x660 + i);
    }
    b->AddChar(0x66f);
    b->AddChar(0x670);
    b->AddChar(0x67e);
    b->AddChar(0x686);
    b->AddChar(0x698);
    b->AddChar(0x69c);
    b->AddChar(0x6a2);
    b->AddChar(0x6a4);
    b->AddChar(0x6a5);
    b->AddChar(0x6a7);
    b->AddChar(0x6a8);
    b->AddChar(0x6a9);
    b->AddChar(0x6af);
    b->AddChar(0x6cc);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x200c + i);
    }
    b->AddChar(0x2013);
    b->AddChar(0x2014);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
}

static void AddGlyphRangesFromCLDRForCS(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x25);
    b->AddChar(0x26);
    for(int i = 0; i < 20; ++i) {
        b->AddChar(0x28 + i);
    }
    for(int i = 0; i < 29; ++i) {
        b->AddChar(0x3f + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 26; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0xa0);
    b->AddChar(0xa7);
    for(int i = 0; i < 16; ++i) {
        b->AddChar(0xc0 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xd1 + i);
    }
    b->AddChar(0xd6);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0xd8 + i);
    }
    for(int i = 0; i < 16; ++i) {
        b->AddChar(0xe0 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xf1 + i);
    }
    b->AddChar(0xf6);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0xf8 + i);
    }
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xff + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x10c + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x112 + i);
    }
    b->AddChar(0x11a);
    b->AddChar(0x11b);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x12a + i);
    }
    b->AddChar(0x13d);
    b->AddChar(0x13e);
    b->AddChar(0x141);
    b->AddChar(0x142);
    b->AddChar(0x147);
    b->AddChar(0x148);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x14c + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x152 + i);
    }
    b->AddChar(0x158);
    b->AddChar(0x159);
    b->AddChar(0x160);
    b->AddChar(0x161);
    b->AddChar(0x164);
    b->AddChar(0x165);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0x16a + i);
    }
    b->AddChar(0x178);
    b->AddChar(0x17d);
    b->AddChar(0x17e);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2018);
    b->AddChar(0x201a);
    b->AddChar(0x201c);
    b->AddChar(0x201e);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
}

static void AddGlyphRangesFromCLDRForDA(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    for(int i = 0; i < 23; ++i) {
        b->AddChar(0x25 + i);
    }
    for(int i = 0; i < 29; ++i) {
        b->AddChar(0x3f + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 26; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0xa7);
    b->AddChar(0xc0);
    b->AddChar(0xc1);
    b->AddChar(0xc2);
    for(int i = 0; i < 8; ++i) {
        b->AddChar(0xc4 + i);
    }
    b->AddChar(0xcd);
    b->AddChar(0xce);
    b->AddChar(0xcf);
    b->AddChar(0xd1);
    b->AddChar(0xd3);
    b->AddChar(0xd4);
    b->AddChar(0xd6);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xd8 + i);
    }
    b->AddChar(0xe0);
    b->AddChar(0xe1);
    b->AddChar(0xe2);
    for(int i = 0; i < 8; ++i) {
        b->AddChar(0xe4 + i);
    }
    b->AddChar(0xed);
    b->AddChar(0xee);
    b->AddChar(0xef);
    b->AddChar(0xf1);
    b->AddChar(0xf3);
    b->AddChar(0xf4);
    b->AddChar(0xf6);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xf8 + i);
    }
    b->AddChar(0xff);
    b->AddChar(0x152);
    b->AddChar(0x153);
    b->AddChar(0x178);
    b->AddChar(0x1fe);
    b->AddChar(0x1ff);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2018);
    b->AddChar(0x2019);
    b->AddChar(0x201c);
    b->AddChar(0x201d);
    b->AddChar(0x2020);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
    b->AddChar(0x2032);
    b->AddChar(0x2033);
}

static void AddGlyphRangesFromCLDRForDE(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    for(int i = 0; i < 23; ++i) {
        b->AddChar(0x25 + i);
    }
    for(int i = 0; i < 29; ++i) {
        b->AddChar(0x3f + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 27; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0x7d);
    b->AddChar(0xa7);
    b->AddChar(0xab);
    b->AddChar(0xbb);
    for(int i = 0; i < 16; ++i) {
        b->AddChar(0xc0 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xd1 + i);
    }
    b->AddChar(0xd6);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xd8 + i);
    }
    for(int i = 0; i < 17; ++i) {
        b->AddChar(0xdf + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xf1 + i);
    }
    b->AddChar(0xf6);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xf8 + i);
    }
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xff + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x112 + i);
    }
    b->AddChar(0x11e);
    b->AddChar(0x11f);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x12a + i);
    }
    b->AddChar(0x130);
    b->AddChar(0x131);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x14c + i);
    }
    b->AddChar(0x152);
    b->AddChar(0x153);
    b->AddChar(0x15e);
    b->AddChar(0x15f);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x16a + i);
    }
    b->AddChar(0x178);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2014);
    b->AddChar(0x2018);
    b->AddChar(0x201a);
    b->AddChar(0x201c);
    b->AddChar(0x201e);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
}

static void AddGlyphRangesFromCLDRForEL(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x25);
    b->AddChar(0x26);
    for(int i = 0; i < 20; ++i) {
        b->AddChar(0x28 + i);
    }
    b->AddChar(0x40);
    b->AddChar(0x5b);
    b->AddChar(0x5c);
    b->AddChar(0x5d);
    b->AddChar(0xa7);
    b->AddChar(0xab);
    b->AddChar(0xbb);
    b->AddChar(0x300);
    b->AddChar(0x301);
    b->AddChar(0x308);
    b->AddChar(0x313);
    b->AddChar(0x342);
    b->AddChar(0x386);
    b->AddChar(0x388);
    b->AddChar(0x389);
    b->AddChar(0x38a);
    b->AddChar(0x38c);
    for(int i = 0; i < 20; ++i) {
        b->AddChar(0x38e + i);
    }
    for(int i = 0; i < 44; ++i) {
        b->AddChar(0x3a3 + i);
    }
    for(int i = 0; i < 22; ++i) {
        b->AddChar(0x1f00 + i);
    }
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0x1f18 + i);
    }
    for(int i = 0; i < 32; ++i) {
        b->AddChar(0x1f20 + i);
    }
    b->AddChar(0x1f42);
    b->AddChar(0x1f43);
    b->AddChar(0x1f44);
    b->AddChar(0x1f4a);
    b->AddChar(0x1f4b);
    b->AddChar(0x1f4c);
    for(int i = 0; i < 8; ++i) {
        b->AddChar(0x1f50 + i);
    }
    b->AddChar(0x1f59);
    b->AddChar(0x1f5b);
    b->AddChar(0x1f5d);
    b->AddChar(0x1f5f);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0x1f62 + i);
    }
    for(int i = 0; i < 7; ++i) {
        b->AddChar(0x1f6a + i);
    }
    b->AddChar(0x1f72);
    b->AddChar(0x1f74);
    b->AddChar(0x1f76);
    b->AddChar(0x1f78);
    b->AddChar(0x1f7a);
    b->AddChar(0x1f7c);
    b->AddChar(0x1fb6);
    b->AddChar(0x1fba);
    b->AddChar(0x1fc6);
    b->AddChar(0x1fc8);
    b->AddChar(0x1fca);
    b->AddChar(0x1fd2);
    b->AddChar(0x1fd6);
    b->AddChar(0x1fd7);
    b->AddChar(0x1fda);
    b->AddChar(0x1fe2);
    b->AddChar(0x1fe6);
    b->AddChar(0x1fe7);
    b->AddChar(0x1fea);
    b->AddChar(0x1ff6);
    b->AddChar(0x1ff8);
    b->AddChar(0x1ffa);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2014);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
}

static void AddGlyphRangesFromCLDRForES(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    for(int i = 0; i < 23; ++i) {
        b->AddChar(0x25 + i);
    }
    for(int i = 0; i < 31; ++i) {
        b->AddChar(0x3f + i);
    }
    for(int i = 0; i < 26; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0xa1);
    b->AddChar(0xa7);
    b->AddChar(0xaa);
    b->AddChar(0xab);
    b->AddChar(0xba);
    b->AddChar(0xbb);
    for(int i = 0; i < 17; ++i) {
        b->AddChar(0xbf + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xd1 + i);
    }
    b->AddChar(0xd6);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0xd8 + i);
    }
    for(int i = 0; i < 16; ++i) {
        b->AddChar(0xe0 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xf1 + i);
    }
    b->AddChar(0xf6);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0xf8 + i);
    }
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xff + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x112 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x12a + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x14c + i);
    }
    b->AddChar(0x152);
    b->AddChar(0x153);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x16a + i);
    }
    b->AddChar(0x178);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2014);
    b->AddChar(0x2018);
    b->AddChar(0x2019);
    b->AddChar(0x201c);
    b->AddChar(0x201d);
    b->AddChar(0x2020);
    b->AddChar(0x2021);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
    b->AddChar(0x2032);
    b->AddChar(0x2033);
}

static void AddGlyphRangesFromCLDRForFR(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    b->AddChar(0x25);
    b->AddChar(0x26);
    for(int i = 0; i < 20; ++i) {
        b->AddChar(0x28 + i);
    }
    for(int i = 0; i < 29; ++i) {
        b->AddChar(0x3f + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 26; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0xa7);
    b->AddChar(0xab);
    b->AddChar(0xb2);
    b->AddChar(0xb3);
    b->AddChar(0xbb);
    for(int i = 0; i < 16; ++i) {
        b->AddChar(0xc0 + i);
    }
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0xd1 + i);
    }
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xd8 + i);
    }
    for(int i = 0; i < 17; ++i) {
        b->AddChar(0xdf + i);
    }
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0xf1 + i);
    }
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xf8 + i);
    }
    b->AddChar(0xff);
    b->AddChar(0x100);
    b->AddChar(0x101);
    b->AddChar(0x106);
    b->AddChar(0x107);
    b->AddChar(0x112);
    b->AddChar(0x113);
    b->AddChar(0x12a);
    b->AddChar(0x12b);
    b->AddChar(0x132);
    b->AddChar(0x133);
    b->AddChar(0x152);
    b->AddChar(0x153);
    b->AddChar(0x158);
    b->AddChar(0x159);
    b->AddChar(0x160);
    b->AddChar(0x161);
    b->AddChar(0x178);
    b->AddChar(0x17f);
    b->AddChar(0x1d3);
    b->AddChar(0x1d4);
    b->AddChar(0x2b3);
    b->AddChar(0x2e2);
    b->AddChar(0x1d48);
    b->AddChar(0x1d49);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2014);
    b->AddChar(0x2019);
    b->AddChar(0x201c);
    b->AddChar(0x201d);
    b->AddChar(0x2020);
    b->AddChar(0x2021);
    b->AddChar(0x2026);
    b->AddChar(0x202f);
    b->AddChar(0x2030);
    b->AddChar(0x2212);
}

static void AddGlyphRangesFromCLDRForHU(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    for(int i = 0; i < 23; ++i) {
        b->AddChar(0x25 + i);
    }
    for(int i = 0; i < 29; ++i) {
        b->AddChar(0x3f + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 27; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0x7d);
    b->AddChar(0x7e);
    b->AddChar(0xa0);
    b->AddChar(0xa7);
    b->AddChar(0xab);
    b->AddChar(0xbb);
    for(int i = 0; i < 16; ++i) {
        b->AddChar(0xc0 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xd1 + i);
    }
    b->AddChar(0xd6);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xd8 + i);
    }
    for(int i = 0; i < 16; ++i) {
        b->AddChar(0xe0 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xf1 + i);
    }
    b->AddChar(0xf6);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xf8 + i);
    }
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xff + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x112 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x12a + i);
    }
    for(int i = 0; i < 8; ++i) {
        b->AddChar(0x14c + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x16a + i);
    }
    b->AddChar(0x170);
    b->AddChar(0x171);
    b->AddChar(0x178);
    b->AddChar(0x2013);
    b->AddChar(0x2019);
    b->AddChar(0x201d);
    b->AddChar(0x201e);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
    b->AddChar(0x2052);
    b->AddChar(0x27e8);
    b->AddChar(0x27e9);
}

static void AddGlyphRangesFromCLDRForID(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x25);
    b->AddChar(0x27);
    b->AddChar(0x28);
    b->AddChar(0x29);
    for(int i = 0; i < 17; ++i) {
        b->AddChar(0x2b + i);
    }
    b->AddChar(0x3f);
    for(int i = 0; i < 27; ++i) {
        b->AddChar(0x41 + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 26; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0xc5);
    b->AddChar(0xe5);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2014);
    b->AddChar(0x2018);
    b->AddChar(0x2019);
    b->AddChar(0x201c);
    b->AddChar(0x201d);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
}

static void AddGlyphRangesFromCLDRForIS(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    for(int i = 0; i < 23; ++i) {
        b->AddChar(0x25 + i);
    }
    for(int i = 0; i < 29; ++i) {
        b->AddChar(0x3f + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 26; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0xa7);
    b->AddChar(0xc1);
    b->AddChar(0xc6);
    b->AddChar(0xc9);
    b->AddChar(0xcd);
    b->AddChar(0xd0);
    b->AddChar(0xd3);
    b->AddChar(0xd6);
    b->AddChar(0xda);
    b->AddChar(0xdd);
    b->AddChar(0xde);
    b->AddChar(0xe1);
    b->AddChar(0xe6);
    b->AddChar(0xe9);
    b->AddChar(0xed);
    b->AddChar(0xf0);
    b->AddChar(0xf3);
    b->AddChar(0xf6);
    b->AddChar(0xfa);
    b->AddChar(0xfd);
    b->AddChar(0xfe);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2014);
    b->AddChar(0x2018);
    b->AddChar(0x201a);
    b->AddChar(0x201c);
    b->AddChar(0x201e);
    b->AddChar(0x2020);
    b->AddChar(0x2021);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
    b->AddChar(0x2032);
    b->AddChar(0x2033);
}

static void AddGlyphRangesFromCLDRForIT(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x25);
    b->AddChar(0x27);
    b->AddChar(0x28);
    b->AddChar(0x29);
    for(int i = 0; i < 17; ++i) {
        b->AddChar(0x2b + i);
    }
    for(int i = 0; i < 29; ++i) {
        b->AddChar(0x3f + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 27; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0x7d);
    b->AddChar(0xaa);
    b->AddChar(0xab);
    b->AddChar(0xba);
    b->AddChar(0xbb);
    for(int i = 0; i < 16; ++i) {
        b->AddChar(0xc0 + i);
    }
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0xd1 + i);
    }
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xd8 + i);
    }
    for(int i = 0; i < 17; ++i) {
        b->AddChar(0xdf + i);
    }
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0xf1 + i);
    }
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xf8 + i);
    }
    b->AddChar(0xff);
    b->AddChar(0x152);
    b->AddChar(0x153);
    b->AddChar(0x178);
    b->AddChar(0x2014);
    b->AddChar(0x2019);
    b->AddChar(0x201c);
    b->AddChar(0x201d);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
}

static void AddGlyphRangesFromCLDRForJA(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    b->AddChar(0x25);
    b->AddChar(0x26);
    for(int i = 0; i < 20; ++i) {
        b->AddChar(0x28 + i);
    }
    b->AddChar(0x3f);
    b->AddChar(0x40);
    b->AddChar(0x5b);
    b->AddChar(0x5d);
    b->AddChar(0x5f);
    b->AddChar(0x7b);
    b->AddChar(0x7d);
    b->AddChar(0xa7);
    b->AddChar(0xb6);
    b->AddChar(0x2010);
    b->AddChar(0x2014);
    b->AddChar(0x2015);
    b->AddChar(0x2016);
    b->AddChar(0x2018);
    b->AddChar(0x2019);
    b->AddChar(0x201c);
    b->AddChar(0x201d);
    b->AddChar(0x2020);
    b->AddChar(0x2021);
    b->AddChar(0x2025);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
    b->AddChar(0x2032);
    b->AddChar(0x2033);
    b->AddChar(0x203b);
    b->AddChar(0x203e);
    b->AddChar(0x3001);
    b->AddChar(0x3002);
    b->AddChar(0x3003);
    b->AddChar(0x3005);
    for(int i = 0; i < 10; ++i) {
        b->AddChar(0x3008 + i);
    }
    b->AddChar(0x3014);
    b->AddChar(0x3015);
    b->AddChar(0x301c);
    for(int i = 0; i < 83; ++i) {
        b->AddChar(0x3041 + i);
    }
    b->AddChar(0x309d);
    b->AddChar(0x309e);
    for(int i = 0; i < 86; ++i) {
        b->AddChar(0x30a1 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x30fb + i);
    }
    b->AddChar(0x4e00);
    b->AddChar(0x4e01);
    b->AddChar(0x4e03);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x4e07 + i);
    }
    b->AddChar(0x4e0d);
    b->AddChar(0x4e0e);
    b->AddChar(0x4e11);
    b->AddChar(0x4e14);
    b->AddChar(0x4e16);
    b->AddChar(0x4e18);
    b->AddChar(0x4e19);
    b->AddChar(0x4e21);
    b->AddChar(0x4e26);
    b->AddChar(0x4e2d);
    b->AddChar(0x4e38);
    b->AddChar(0x4e39);
    b->AddChar(0x4e3b);
    b->AddChar(0x4e45);
    b->AddChar(0x4e4f);
    b->AddChar(0x4e57);
    b->AddChar(0x4e59);
    b->AddChar(0x4e5d);
    b->AddChar(0x4e71);
    b->AddChar(0x4e73);
    b->AddChar(0x4e7e);
    b->AddChar(0x4e80);
    b->AddChar(0x4e86);
    b->AddChar(0x4e88);
    b->AddChar(0x4e89);
    b->AddChar(0x4e8b);
    b->AddChar(0x4e8c);
    b->AddChar(0x4e92);
    b->AddChar(0x4e94);
    b->AddChar(0x4e95);
    b->AddChar(0x4e9c);
    b->AddChar(0x4ea1);
    b->AddChar(0x4ea4);
    b->AddChar(0x4ea5);
    b->AddChar(0x4ea8);
    b->AddChar(0x4eab);
    b->AddChar(0x4eac);
    b->AddChar(0x4ead);
    b->AddChar(0x4eba);
    b->AddChar(0x4ec1);
    b->AddChar(0x4eca);
    b->AddChar(0x4ecb);
    b->AddChar(0x4ecf);
    b->AddChar(0x4ed5);
    b->AddChar(0x4ed6);
    b->AddChar(0x4ed8);
    b->AddChar(0x4ed9);
    b->AddChar(0x4ee3);
    b->AddChar(0x4ee4);
    b->AddChar(0x4ee5);
    b->AddChar(0x4eee);
    b->AddChar(0x4ef0);
    b->AddChar(0x4ef2);
    b->AddChar(0x4ef6);
    b->AddChar(0x4efb);
    b->AddChar(0x4f01);
    b->AddChar(0x4f0f);
    b->AddChar(0x4f10);
    b->AddChar(0x4f11);
    b->AddChar(0x4f1a);
    b->AddChar(0x4f1d);
    b->AddChar(0x4f2f);
    b->AddChar(0x4f34);
    b->AddChar(0x4f38);
    b->AddChar(0x4f3a);
    b->AddChar(0x4f3c);
    b->AddChar(0x4f46);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x4f4d + i);
    }
    b->AddChar(0x4f53);
    b->AddChar(0x4f55);
    b->AddChar(0x4f59);
    b->AddChar(0x4f5c);
    b->AddChar(0x4f73);
    b->AddChar(0x4f75);
    b->AddChar(0x4f7f);
    b->AddChar(0x4f8b);
    b->AddChar(0x4f8d);
    b->AddChar(0x4f9b);
    b->AddChar(0x4f9d);
    b->AddChar(0x4fa1);
    b->AddChar(0x4fae);
    b->AddChar(0x4faf);
    b->AddChar(0x4fb5);
    b->AddChar(0x4fbf);
    b->AddChar(0x4fc2);
    b->AddChar(0x4fc3);
    b->AddChar(0x4fca);
    b->AddChar(0x4fd7);
    b->AddChar(0x4fdd);
    b->AddChar(0x4fe1);
    b->AddChar(0x4fee);
    b->AddChar(0x4ff3);
    b->AddChar(0x4ff5);
    b->AddChar(0x4ff8);
    b->AddChar(0x4ffa);
    b->AddChar(0x5009);
    b->AddChar(0x500b);
    b->AddChar(0x500d);
    b->AddChar(0x5012);
    b->AddChar(0x5019);
    b->AddChar(0x501f);
    b->AddChar(0x5023);
    b->AddChar(0x5024);
    b->AddChar(0x502b);
    b->AddChar(0x5039);
    b->AddChar(0x5049);
    b->AddChar(0x504f);
    b->AddChar(0x505c);
    b->AddChar(0x5065);
    b->AddChar(0x5074);
    b->AddChar(0x5075);
    b->AddChar(0x5076);
    b->AddChar(0x507d);
    b->AddChar(0x508d);
    b->AddChar(0x5091);
    b->AddChar(0x5098);
    b->AddChar(0x5099);
    b->AddChar(0x50ac);
    b->AddChar(0x50b5);
    b->AddChar(0x50b7);
    b->AddChar(0x50be);
    b->AddChar(0x50cd);
    b->AddChar(0x50cf);
    b->AddChar(0x50d5);
    b->AddChar(0x50da);
    b->AddChar(0x50e7);
    b->AddChar(0x5100);
    b->AddChar(0x5104);
    b->AddChar(0x5112);
    b->AddChar(0x511f);
    b->AddChar(0x512a);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x5143 + i);
    }
    b->AddChar(0x5148);
    b->AddChar(0x5149);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x514b + i);
    }
    b->AddChar(0x5150);
    b->AddChar(0x515a);
    b->AddChar(0x5165);
    b->AddChar(0x5168);
    b->AddChar(0x516b);
    b->AddChar(0x516c);
    b->AddChar(0x516d);
    b->AddChar(0x5171);
    b->AddChar(0x5175);
    b->AddChar(0x5177);
    b->AddChar(0x5178);
    b->AddChar(0x517c);
    b->AddChar(0x5185);
    b->AddChar(0x5186);
    b->AddChar(0x518a);
    b->AddChar(0x518d);
    b->AddChar(0x5192);
    b->AddChar(0x5197);
    b->AddChar(0x5199);
    b->AddChar(0x51a0);
    b->AddChar(0x51ac);
    b->AddChar(0x51b7);
    b->AddChar(0x51c6);
    b->AddChar(0x51cd);
    b->AddChar(0x51dd);
    b->AddChar(0x51e1);
    b->AddChar(0x51e6);
    b->AddChar(0x51f6);
    b->AddChar(0x51f8);
    b->AddChar(0x51f9);
    b->AddChar(0x51fa);
    b->AddChar(0x5200);
    b->AddChar(0x5203);
    b->AddChar(0x5206);
    b->AddChar(0x5207);
    b->AddChar(0x5208);
    b->AddChar(0x520a);
    b->AddChar(0x5211);
    b->AddChar(0x5217);
    b->AddChar(0x521d);
    b->AddChar(0x5224);
    b->AddChar(0x5225);
    b->AddChar(0x5229);
    b->AddChar(0x5230);
    b->AddChar(0x5236);
    b->AddChar(0x5237);
    b->AddChar(0x5238);
    b->AddChar(0x523a);
    b->AddChar(0x523b);
    b->AddChar(0x5247);
    b->AddChar(0x524a);
    b->AddChar(0x524d);
    b->AddChar(0x5256);
    b->AddChar(0x525b);
    b->AddChar(0x5263);
    b->AddChar(0x5264);
    b->AddChar(0x5265);
    b->AddChar(0x526f);
    b->AddChar(0x5270);
    b->AddChar(0x5272);
    b->AddChar(0x5275);
    b->AddChar(0x5287);
    b->AddChar(0x529b);
    b->AddChar(0x529f);
    b->AddChar(0x52a0);
    b->AddChar(0x52a3);
    b->AddChar(0x52a9);
    b->AddChar(0x52aa);
    b->AddChar(0x52b1);
    b->AddChar(0x52b4);
    b->AddChar(0x52b9);
    b->AddChar(0x52be);
    b->AddChar(0x52c5);
    b->AddChar(0x52c7);
    b->AddChar(0x52c9);
    b->AddChar(0x52d5);
    b->AddChar(0x52d8);
    b->AddChar(0x52d9);
    b->AddChar(0x52dd);
    b->AddChar(0x52df);
    b->AddChar(0x52e2);
    b->AddChar(0x52e4);
    b->AddChar(0x52e7);
    b->AddChar(0x52f2);
    b->AddChar(0x5305);
    b->AddChar(0x5316);
    b->AddChar(0x5317);
    b->AddChar(0x5320);
    b->AddChar(0x5339);
    b->AddChar(0x533a);
    b->AddChar(0x533b);
    b->AddChar(0x533f);
    b->AddChar(0x5341);
    b->AddChar(0x5343);
    b->AddChar(0x5347);
    b->AddChar(0x5348);
    b->AddChar(0x534a);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x5351 + i);
    }
    b->AddChar(0x5357);
    b->AddChar(0x5358);
    b->AddChar(0x535a);
    b->AddChar(0x5360);
    b->AddChar(0x536f);
    b->AddChar(0x5370);
    b->AddChar(0x5371);
    b->AddChar(0x5373);
    b->AddChar(0x5374);
    b->AddChar(0x5375);
    b->AddChar(0x5378);
    b->AddChar(0x5384);
    b->AddChar(0x5398);
    b->AddChar(0x539a);
    b->AddChar(0x539f);
    b->AddChar(0x53b3);
    b->AddChar(0x53bb);
    b->AddChar(0x53c2);
    b->AddChar(0x53c8);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x53ca + i);
    }
    b->AddChar(0x53d4);
    b->AddChar(0x53d6);
    b->AddChar(0x53d7);
    b->AddChar(0x53d9);
    b->AddChar(0x53e3);
    b->AddChar(0x53e4);
    b->AddChar(0x53e5);
    b->AddChar(0x53eb);
    b->AddChar(0x53ec);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x53ef + i);
    }
    b->AddChar(0x53f7);
    b->AddChar(0x53f8);
    b->AddChar(0x5404);
    b->AddChar(0x5408);
    b->AddChar(0x5409);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0x540c + i);
    }
    b->AddChar(0x541b);
    b->AddChar(0x541f);
    b->AddChar(0x5426);
    b->AddChar(0x542b);
    b->AddChar(0x5438);
    b->AddChar(0x5439);
    b->AddChar(0x5448);
    b->AddChar(0x5449);
    b->AddChar(0x544a);
    b->AddChar(0x5468);
    b->AddChar(0x5473);
    b->AddChar(0x547c);
    b->AddChar(0x547d);
    b->AddChar(0x548c);
    b->AddChar(0x54b2);
    b->AddChar(0x54c0);
    b->AddChar(0x54c1);
    b->AddChar(0x54e1);
    b->AddChar(0x54f2);
    b->AddChar(0x5506);
    b->AddChar(0x5507);
    b->AddChar(0x5510);
    b->AddChar(0x552f);
    b->AddChar(0x5531);
    b->AddChar(0x5546);
    b->AddChar(0x554f);
    b->AddChar(0x5553);
    b->AddChar(0x5584);
    b->AddChar(0x559a);
    b->AddChar(0x559c);
    b->AddChar(0x559d);
    b->AddChar(0x55aa);
    b->AddChar(0x55ab);
    b->AddChar(0x55b6);
    b->AddChar(0x55e3);
    b->AddChar(0x5606);
    b->AddChar(0x5609);
    b->AddChar(0x5631);
    b->AddChar(0x5668);
    b->AddChar(0x5674);
    b->AddChar(0x5687);
    b->AddChar(0x56da);
    b->AddChar(0x56db);
    b->AddChar(0x56de);
    b->AddChar(0x56e0);
    b->AddChar(0x56e3);
    b->AddChar(0x56f0);
    b->AddChar(0x56f2);
    b->AddChar(0x56f3);
    b->AddChar(0x56fa);
    b->AddChar(0x56fd);
    b->AddChar(0x570f);
    b->AddChar(0x5712);
    b->AddChar(0x571f);
    b->AddChar(0x5727);
    b->AddChar(0x5728);
    b->AddChar(0x5730);
    b->AddChar(0x5742);
    b->AddChar(0x5747);
    b->AddChar(0x574a);
    b->AddChar(0x5751);
    b->AddChar(0x576a);
    b->AddChar(0x5782);
    b->AddChar(0x578b);
    b->AddChar(0x57a3);
    b->AddChar(0x57cb);
    b->AddChar(0x57ce);
    b->AddChar(0x57df);
    b->AddChar(0x57f7);
    b->AddChar(0x57f9);
    b->AddChar(0x57fa);
    b->AddChar(0x57fc);
    b->AddChar(0x5800);
    b->AddChar(0x5802);
    b->AddChar(0x5805);
    b->AddChar(0x5815);
    b->AddChar(0x5824);
    b->AddChar(0x582a);
    b->AddChar(0x5831);
    b->AddChar(0x5834);
    b->AddChar(0x5840);
    b->AddChar(0x5841);
    b->AddChar(0x584a);
    b->AddChar(0x5851);
    b->AddChar(0x5854);
    b->AddChar(0x5857);
    b->AddChar(0x585a);
    b->AddChar(0x5869);
    b->AddChar(0x586b);
    b->AddChar(0x587e);
    b->AddChar(0x5883);
    b->AddChar(0x5893);
    b->AddChar(0x5897);
    b->AddChar(0x589c);
    b->AddChar(0x58a8);
    b->AddChar(0x58b3);
    b->AddChar(0x58be);
    b->AddChar(0x58c1);
    b->AddChar(0x58c7);
    b->AddChar(0x58ca);
    b->AddChar(0x58cc);
    b->AddChar(0x58eb);
    b->AddChar(0x58ec);
    b->AddChar(0x58ee);
    b->AddChar(0x58f0);
    b->AddChar(0x58f1);
    b->AddChar(0x58f2);
    b->AddChar(0x5909);
    b->AddChar(0x590f);
    b->AddChar(0x5915);
    b->AddChar(0x5916);
    b->AddChar(0x591a);
    b->AddChar(0x591c);
    b->AddChar(0x5922);
    b->AddChar(0x5927);
    b->AddChar(0x5929);
    b->AddChar(0x592a);
    b->AddChar(0x592b);
    b->AddChar(0x592e);
    b->AddChar(0x5931);
    b->AddChar(0x5947);
    b->AddChar(0x5948);
    b->AddChar(0x5949);
    b->AddChar(0x594f);
    b->AddChar(0x5951);
    b->AddChar(0x5954);
    b->AddChar(0x5965);
    b->AddChar(0x5968);
    b->AddChar(0x596a);
    b->AddChar(0x596e);
    b->AddChar(0x5973);
    b->AddChar(0x5974);
    b->AddChar(0x597d);
    b->AddChar(0x5982);
    b->AddChar(0x5983);
    b->AddChar(0x5984);
    b->AddChar(0x598a);
    b->AddChar(0x5999);
    b->AddChar(0x59a5);
    b->AddChar(0x59a8);
    b->AddChar(0x59b9);
    b->AddChar(0x59bb);
    b->AddChar(0x59c9);
    b->AddChar(0x59cb);
    b->AddChar(0x59d3);
    b->AddChar(0x59d4);
    b->AddChar(0x59eb);
    b->AddChar(0x59fb);
    b->AddChar(0x59ff);
    b->AddChar(0x5a01);
    b->AddChar(0x5a18);
    b->AddChar(0x5a20);
    b->AddChar(0x5a2f);
    b->AddChar(0x5a46);
    b->AddChar(0x5a5a);
    b->AddChar(0x5a66);
    b->AddChar(0x5a7f);
    b->AddChar(0x5a92);
    b->AddChar(0x5ac1);
    b->AddChar(0x5acc);
    b->AddChar(0x5ae1);
    b->AddChar(0x5b22);
    b->AddChar(0x5b50);
    b->AddChar(0x5b54);
    b->AddChar(0x5b57);
    b->AddChar(0x5b58);
    b->AddChar(0x5b5d);
    b->AddChar(0x5b63);
    b->AddChar(0x5b64);
    b->AddChar(0x5b66);
    b->AddChar(0x5b6b);
    b->AddChar(0x5b85);
    b->AddChar(0x5b87);
    b->AddChar(0x5b88);
    b->AddChar(0x5b89);
    b->AddChar(0x5b8c);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x5b97 + i);
    }
    b->AddChar(0x5b9c);
    b->AddChar(0x5b9d);
    b->AddChar(0x5b9f);
    b->AddChar(0x5ba2);
    b->AddChar(0x5ba3);
    b->AddChar(0x5ba4);
    b->AddChar(0x5bae);
    b->AddChar(0x5bb0);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x5bb3 + i);
    }
    b->AddChar(0x5bb9);
    b->AddChar(0x5bbf);
    b->AddChar(0x5bc2);
    b->AddChar(0x5bc4);
    b->AddChar(0x5bc5);
    b->AddChar(0x5bc6);
    b->AddChar(0x5bcc);
    b->AddChar(0x5bd2);
    b->AddChar(0x5bdb);
    b->AddChar(0x5bdd);
    b->AddChar(0x5bdf);
    b->AddChar(0x5be1);
    b->AddChar(0x5be7);
    b->AddChar(0x5be9);
    b->AddChar(0x5bee);
    b->AddChar(0x5bf8);
    b->AddChar(0x5bfa);
    b->AddChar(0x5bfe);
    b->AddChar(0x5bff);
    b->AddChar(0x5c01);
    b->AddChar(0x5c02);
    b->AddChar(0x5c04);
    b->AddChar(0x5c06);
    b->AddChar(0x5c09);
    b->AddChar(0x5c0a);
    b->AddChar(0x5c0b);
    b->AddChar(0x5c0e);
    b->AddChar(0x5c0f);
    b->AddChar(0x5c11);
    b->AddChar(0x5c1a);
    b->AddChar(0x5c31);
    b->AddChar(0x5c3a);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x5c3c + i);
    }
    b->AddChar(0x5c45);
    b->AddChar(0x5c48);
    b->AddChar(0x5c4a);
    b->AddChar(0x5c4b);
    b->AddChar(0x5c55);
    b->AddChar(0x5c5e);
    b->AddChar(0x5c64);
    b->AddChar(0x5c65);
    b->AddChar(0x5c6f);
    b->AddChar(0x5c71);
    b->AddChar(0x5c90);
    b->AddChar(0x5ca1);
    b->AddChar(0x5ca9);
    b->AddChar(0x5cac);
    b->AddChar(0x5cb3);
    b->AddChar(0x5cb8);
    b->AddChar(0x5ce0);
    b->AddChar(0x5ce1);
    b->AddChar(0x5cf0);
    b->AddChar(0x5cf6);
    b->AddChar(0x5d07);
    b->AddChar(0x5d0e);
    b->AddChar(0x5d29);
    b->AddChar(0x5ddd);
    b->AddChar(0x5dde);
    b->AddChar(0x5de1);
    b->AddChar(0x5de3);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x5de5 + i);
    }
    b->AddChar(0x5dee);
    b->AddChar(0x5df1);
    b->AddChar(0x5df3);
    b->AddChar(0x5dfb);
    b->AddChar(0x5e02);
    b->AddChar(0x5e03);
    b->AddChar(0x5e06);
    b->AddChar(0x5e0c);
    b->AddChar(0x5e1d);
    b->AddChar(0x5e25);
    b->AddChar(0x5e2b);
    b->AddChar(0x5e2d);
    b->AddChar(0x5e2f);
    b->AddChar(0x5e30);
    b->AddChar(0x5e33);
    b->AddChar(0x5e38);
    b->AddChar(0x5e3d);
    b->AddChar(0x5e45);
    b->AddChar(0x5e55);
    b->AddChar(0x5e63);
    b->AddChar(0x5e72);
    b->AddChar(0x5e73);
    b->AddChar(0x5e74);
    b->AddChar(0x5e78);
    b->AddChar(0x5e79);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x5e7b + i);
    }
    b->AddChar(0x5e81);
    b->AddChar(0x5e83);
    b->AddChar(0x5e8a);
    b->AddChar(0x5e8f);
    b->AddChar(0x5e95);
    b->AddChar(0x5e97);
    b->AddChar(0x5e9a);
    b->AddChar(0x5e9c);
    b->AddChar(0x5ea6);
    b->AddChar(0x5ea7);
    b->AddChar(0x5eab);
    b->AddChar(0x5ead);
    b->AddChar(0x5eb6);
    b->AddChar(0x5eb7);
    b->AddChar(0x5eb8);
    b->AddChar(0x5ec3);
    b->AddChar(0x5ec9);
    b->AddChar(0x5eca);
    b->AddChar(0x5ef6);
    b->AddChar(0x5ef7);
    b->AddChar(0x5efa);
    b->AddChar(0x5f01);
    b->AddChar(0x5f0a);
    b->AddChar(0x5f0f);
    b->AddChar(0x5f10);
    b->AddChar(0x5f13);
    b->AddChar(0x5f14);
    b->AddChar(0x5f15);
    b->AddChar(0x5f18);
    b->AddChar(0x5f1f);
    b->AddChar(0x5f26);
    b->AddChar(0x5f27);
    b->AddChar(0x5f31);
    b->AddChar(0x5f35);
    b->AddChar(0x5f37);
    b->AddChar(0x5f3e);
    b->AddChar(0x5f53);
    b->AddChar(0x5f62);
    b->AddChar(0x5f69);
    b->AddChar(0x5f6b);
    b->AddChar(0x5f70);
    b->AddChar(0x5f71);
    b->AddChar(0x5f79);
    b->AddChar(0x5f7c);
    b->AddChar(0x5f80);
    b->AddChar(0x5f81);
    b->AddChar(0x5f84);
    b->AddChar(0x5f85);
    b->AddChar(0x5f8b);
    b->AddChar(0x5f8c);
    b->AddChar(0x5f90);
    b->AddChar(0x5f92);
    b->AddChar(0x5f93);
    b->AddChar(0x5f97);
    b->AddChar(0x5fa1);
    b->AddChar(0x5fa9);
    b->AddChar(0x5faa);
    b->AddChar(0x5fae);
    b->AddChar(0x5fb3);
    b->AddChar(0x5fb4);
    b->AddChar(0x5fb9);
    b->AddChar(0x5fc3);
    b->AddChar(0x5fc5);
    b->AddChar(0x5fcc);
    b->AddChar(0x5fcd);
    b->AddChar(0x5fd7);
    b->AddChar(0x5fd8);
    b->AddChar(0x5fd9);
    b->AddChar(0x5fdc);
    b->AddChar(0x5fe0);
    b->AddChar(0x5feb);
    b->AddChar(0x5ff5);
    b->AddChar(0x6012);
    b->AddChar(0x6016);
    b->AddChar(0x601d);
    b->AddChar(0x6020);
    b->AddChar(0x6025);
    b->AddChar(0x6027);
    b->AddChar(0x602a);
    b->AddChar(0x604b);
    b->AddChar(0x6050);
    b->AddChar(0x6052);
    b->AddChar(0x6065);
    b->AddChar(0x6068);
    b->AddChar(0x6069);
    b->AddChar(0x606d);
    b->AddChar(0x606f);
    b->AddChar(0x6075);
    b->AddChar(0x6094);
    b->AddChar(0x609f);
    b->AddChar(0x60a0);
    b->AddChar(0x60a3);
    b->AddChar(0x60a6);
    b->AddChar(0x60a9);
    b->AddChar(0x60aa);
    b->AddChar(0x60b2);
    b->AddChar(0x60bc);
    b->AddChar(0x60c5);
    b->AddChar(0x60d1);
    b->AddChar(0x60dc);
    b->AddChar(0x60e8);
    b->AddChar(0x60f0);
    b->AddChar(0x60f3);
    b->AddChar(0x6101);
    b->AddChar(0x6109);
    b->AddChar(0x610f);
    b->AddChar(0x611a);
    b->AddChar(0x611b);
    b->AddChar(0x611f);
    b->AddChar(0x6148);
    b->AddChar(0x614b);
    b->AddChar(0x614c);
    b->AddChar(0x614e);
    b->AddChar(0x6155);
    b->AddChar(0x6162);
    b->AddChar(0x6163);
    b->AddChar(0x6168);
    b->AddChar(0x616e);
    b->AddChar(0x6170);
    b->AddChar(0x6176);
    b->AddChar(0x6182);
    b->AddChar(0x618e);
    b->AddChar(0x61a4);
    b->AddChar(0x61a9);
    b->AddChar(0x61b2);
    b->AddChar(0x61b6);
    b->AddChar(0x61be);
    b->AddChar(0x61c7);
    b->AddChar(0x61d0);
    b->AddChar(0x61f2);
    b->AddChar(0x61f8);
    b->AddChar(0x620a);
    b->AddChar(0x620c);
    b->AddChar(0x6210);
    b->AddChar(0x6211);
    b->AddChar(0x6212);
    b->AddChar(0x6226);
    b->AddChar(0x622f);
    b->AddChar(0x6238);
    b->AddChar(0x623b);
    b->AddChar(0x623f);
    b->AddChar(0x6240);
    b->AddChar(0x6247);
    b->AddChar(0x6249);
    b->AddChar(0x624b);
    b->AddChar(0x624d);
    b->AddChar(0x6253);
    b->AddChar(0x6255);
    b->AddChar(0x6271);
    b->AddChar(0x6276);
    b->AddChar(0x6279);
    b->AddChar(0x627f);
    b->AddChar(0x6280);
    b->AddChar(0x6284);
    b->AddChar(0x628a);
    b->AddChar(0x6291);
    b->AddChar(0x6295);
    b->AddChar(0x6297);
    b->AddChar(0x6298);
    b->AddChar(0x629c);
    b->AddChar(0x629e);
    b->AddChar(0x62ab);
    b->AddChar(0x62b1);
    b->AddChar(0x62b5);
    b->AddChar(0x62b9);
    b->AddChar(0x62bc);
    b->AddChar(0x62bd);
    b->AddChar(0x62c5);
    b->AddChar(0x62cd);
    b->AddChar(0x62d0);
    b->AddChar(0x62d2);
    b->AddChar(0x62d3);
    b->AddChar(0x62d8);
    b->AddChar(0x62d9);
    b->AddChar(0x62db);
    b->AddChar(0x62dd);
    b->AddChar(0x62e0);
    b->AddChar(0x62e1);
    b->AddChar(0x62ec);
    b->AddChar(0x62f7);
    b->AddChar(0x62fc);
    b->AddChar(0x62fe);
    b->AddChar(0x6301);
    b->AddChar(0x6307);
    b->AddChar(0x6311);
    b->AddChar(0x6319);
    b->AddChar(0x631f);
    b->AddChar(0x632f);
    b->AddChar(0x633f);
    b->AddChar(0x6355);
    b->AddChar(0x635c);
    b->AddChar(0x6368);
    b->AddChar(0x636e);
    b->AddChar(0x6383);
    b->AddChar(0x6388);
    b->AddChar(0x638c);
    b->AddChar(0x6392);
    b->AddChar(0x6398);
    b->AddChar(0x639b);
    b->AddChar(0x63a1);
    b->AddChar(0x63a2);
    b->AddChar(0x63a5);
    b->AddChar(0x63a7);
    b->AddChar(0x63a8);
    b->AddChar(0x63aa);
    b->AddChar(0x63b2);
    b->AddChar(0x63cf);
    b->AddChar(0x63d0);
    b->AddChar(0x63da);
    b->AddChar(0x63db);
    b->AddChar(0x63e1);
    b->AddChar(0x63ee);
    b->AddChar(0x63f4);
    b->AddChar(0x63fa);
    b->AddChar(0x640d);
    b->AddChar(0x642c);
    b->AddChar(0x642d);
    b->AddChar(0x643a);
    b->AddChar(0x643e);
    b->AddChar(0x6442);
    b->AddChar(0x6458);
    b->AddChar(0x6469);
    b->AddChar(0x6483);
    b->AddChar(0x64a4);
    b->AddChar(0x64ae);
    b->AddChar(0x64b2);
    b->AddChar(0x64c1);
    b->AddChar(0x64cd);
    b->AddChar(0x64e6);
    b->AddChar(0x64ec);
    b->AddChar(0x652f);
    b->AddChar(0x6539);
    b->AddChar(0x653b);
    b->AddChar(0x653e);
    b->AddChar(0x653f);
    b->AddChar(0x6545);
    b->AddChar(0x654f);
    b->AddChar(0x6551);
    b->AddChar(0x6557);
    b->AddChar(0x6559);
    b->AddChar(0x6562);
    b->AddChar(0x6563);
    b->AddChar(0x656c);
    b->AddChar(0x6570);
    b->AddChar(0x6574);
    b->AddChar(0x6575);
    b->AddChar(0x6577);
    b->AddChar(0x6587);
    b->AddChar(0x6589);
    b->AddChar(0x658e);
    b->AddChar(0x6597);
    b->AddChar(0x6599);
    b->AddChar(0x659c);
    b->AddChar(0x65a4);
    b->AddChar(0x65a5);
    b->AddChar(0x65ad);
    b->AddChar(0x65b0);
    b->AddChar(0x65b9);
    b->AddChar(0x65bd);
    b->AddChar(0x65c5);
    b->AddChar(0x65cb);
    b->AddChar(0x65cf);
    b->AddChar(0x65d7);
    b->AddChar(0x65e2);
    b->AddChar(0x65e5);
    b->AddChar(0x65e7);
    b->AddChar(0x65e8);
    b->AddChar(0x65e9);
    b->AddChar(0x65ec);
    b->AddChar(0x6606);
    b->AddChar(0x6607);
    b->AddChar(0x660c);
    b->AddChar(0x660e);
    b->AddChar(0x6613);
    b->AddChar(0x6614);
    b->AddChar(0x661f);
    b->AddChar(0x6620);
    b->AddChar(0x6625);
    b->AddChar(0x6628);
    b->AddChar(0x662d);
    b->AddChar(0x662f);
    b->AddChar(0x663c);
    b->AddChar(0x6642);
    b->AddChar(0x6669);
    b->AddChar(0x666e);
    b->AddChar(0x666f);
    b->AddChar(0x6674);
    b->AddChar(0x6676);
    b->AddChar(0x6681);
    b->AddChar(0x6687);
    b->AddChar(0x6691);
    b->AddChar(0x6696);
    b->AddChar(0x6697);
    b->AddChar(0x66a6);
    b->AddChar(0x66ab);
    b->AddChar(0x66ae);
    b->AddChar(0x66b4);
    b->AddChar(0x66c7);
    b->AddChar(0x66dc);
    b->AddChar(0x66f2);
    b->AddChar(0x66f4);
    b->AddChar(0x66f8);
    b->AddChar(0x66f9);
    b->AddChar(0x66ff);
    b->AddChar(0x6700);
    b->AddChar(0x6708);
    b->AddChar(0x6709);
    b->AddChar(0x670d);
    b->AddChar(0x6715);
    b->AddChar(0x6717);
    b->AddChar(0x671b);
    b->AddChar(0x671d);
    b->AddChar(0x671f);
    b->AddChar(0x6728);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x672a + i);
    }
    b->AddChar(0x6731);
    b->AddChar(0x6734);
    b->AddChar(0x673a);
    b->AddChar(0x673d);
    b->AddChar(0x6749);
    b->AddChar(0x6750);
    b->AddChar(0x6751);
    b->AddChar(0x675f);
    b->AddChar(0x6761);
    b->AddChar(0x6765);
    b->AddChar(0x676f);
    b->AddChar(0x6771);
    b->AddChar(0x677e);
    b->AddChar(0x677f);
    b->AddChar(0x6790);
    b->AddChar(0x6797);
    b->AddChar(0x679a);
    b->AddChar(0x679c);
    b->AddChar(0x679d);
    b->AddChar(0x67a0);
    b->AddChar(0x67a2);
    b->AddChar(0x67af);
    b->AddChar(0x67b6);
    b->AddChar(0x67c4);
    b->AddChar(0x67d0);
    b->AddChar(0x67d3);
    b->AddChar(0x67d4);
    b->AddChar(0x67f1);
    b->AddChar(0x67f3);
    b->AddChar(0x67fb);
    b->AddChar(0x6804);
    b->AddChar(0x6813);
    b->AddChar(0x6821);
    b->AddChar(0x682a);
    b->AddChar(0x6838);
    b->AddChar(0x6839);
    b->AddChar(0x683c);
    b->AddChar(0x683d);
    b->AddChar(0x6843);
    b->AddChar(0x6848);
    b->AddChar(0x6851);
    b->AddChar(0x685c);
    b->AddChar(0x685f);
    b->AddChar(0x6885);
    b->AddChar(0x68b0);
    b->AddChar(0x68c4);
    b->AddChar(0x68cb);
    b->AddChar(0x68d2);
    b->AddChar(0x68da);
    b->AddChar(0x68df);
    b->AddChar(0x68ee);
    b->AddChar(0x68fa);
    b->AddChar(0x690d);
    b->AddChar(0x691c);
    b->AddChar(0x6954);
    b->AddChar(0x696d);
    b->AddChar(0x6975);
    b->AddChar(0x697c);
    b->AddChar(0x697d);
    b->AddChar(0x6982);
    b->AddChar(0x69cb);
    b->AddChar(0x69d8);
    b->AddChar(0x69fd);
    b->AddChar(0x6a19);
    b->AddChar(0x6a21);
    b->AddChar(0x6a29);
    b->AddChar(0x6a2a);
    b->AddChar(0x6a39);
    b->AddChar(0x6a4b);
    b->AddChar(0x6a5f);
    b->AddChar(0x6b04);
    b->AddChar(0x6b20);
    b->AddChar(0x6b21);
    b->AddChar(0x6b27);
    b->AddChar(0x6b32);
    b->AddChar(0x6b3a);
    b->AddChar(0x6b3e);
    b->AddChar(0x6b4c);
    b->AddChar(0x6b53);
    b->AddChar(0x6b62);
    b->AddChar(0x6b63);
    b->AddChar(0x6b66);
    b->AddChar(0x6b69);
    b->AddChar(0x6b6f);
    b->AddChar(0x6b73);
    b->AddChar(0x6b74);
    b->AddChar(0x6b7b);
    b->AddChar(0x6b89);
    b->AddChar(0x6b8a);
    b->AddChar(0x6b8b);
    b->AddChar(0x6b96);
    b->AddChar(0x6bb4);
    b->AddChar(0x6bb5);
    b->AddChar(0x6bba);
    b->AddChar(0x6bbb);
    b->AddChar(0x6bbf);
    b->AddChar(0x6bcd);
    b->AddChar(0x6bce);
    b->AddChar(0x6bd2);
    b->AddChar(0x6bd4);
    b->AddChar(0x6bdb);
    b->AddChar(0x6c0f);
    b->AddChar(0x6c11);
    b->AddChar(0x6c17);
    b->AddChar(0x6c34);
    b->AddChar(0x6c37);
    b->AddChar(0x6c38);
    b->AddChar(0x6c41);
    b->AddChar(0x6c42);
    b->AddChar(0x6c4e);
    b->AddChar(0x6c57);
    b->AddChar(0x6c5a);
    b->AddChar(0x6c5f);
    b->AddChar(0x6c60);
    b->AddChar(0x6c7a);
    b->AddChar(0x6c7d);
    b->AddChar(0x6c88);
    b->AddChar(0x6c96);
    b->AddChar(0x6ca1);
    b->AddChar(0x6ca2);
    b->AddChar(0x6cb3);
    b->AddChar(0x6cb8);
    b->AddChar(0x6cb9);
    b->AddChar(0x6cbb);
    b->AddChar(0x6cbc);
    b->AddChar(0x6cbf);
    b->AddChar(0x6cc1);
    b->AddChar(0x6cc9);
    b->AddChar(0x6cca);
    b->AddChar(0x6ccc);
    b->AddChar(0x6cd5);
    b->AddChar(0x6ce1);
    b->AddChar(0x6ce2);
    b->AddChar(0x6ce3);
    b->AddChar(0x6ce5);
    b->AddChar(0x6ce8);
    b->AddChar(0x6cf0);
    b->AddChar(0x6cf3);
    b->AddChar(0x6d0b);
    b->AddChar(0x6d17);
    b->AddChar(0x6d1e);
    b->AddChar(0x6d25);
    b->AddChar(0x6d2a);
    b->AddChar(0x6d3b);
    b->AddChar(0x6d3e);
    b->AddChar(0x6d41);
    b->AddChar(0x6d44);
    b->AddChar(0x6d45);
    b->AddChar(0x6d5c);
    b->AddChar(0x6d66);
    b->AddChar(0x6d6a);
    b->AddChar(0x6d6e);
    b->AddChar(0x6d74);
    b->AddChar(0x6d77);
    b->AddChar(0x6d78);
    b->AddChar(0x6d88);
    b->AddChar(0x6d99);
    b->AddChar(0x6daf);
    b->AddChar(0x6db2);
    b->AddChar(0x6dbc);
    b->AddChar(0x6dd1);
    b->AddChar(0x6de1);
    b->AddChar(0x6df1);
    b->AddChar(0x6df7);
    b->AddChar(0x6dfb);
    b->AddChar(0x6e05);
    b->AddChar(0x6e07);
    b->AddChar(0x6e08);
    b->AddChar(0x6e09);
    b->AddChar(0x6e0b);
    b->AddChar(0x6e13);
    b->AddChar(0x6e1b);
    b->AddChar(0x6e21);
    b->AddChar(0x6e26);
    b->AddChar(0x6e29);
    b->AddChar(0x6e2c);
    b->AddChar(0x6e2f);
    b->AddChar(0x6e56);
    b->AddChar(0x6e6f);
    b->AddChar(0x6e7e);
    b->AddChar(0x6e7f);
    b->AddChar(0x6e80);
    b->AddChar(0x6e90);
    b->AddChar(0x6e96);
    b->AddChar(0x6e9d);
    b->AddChar(0x6eb6);
    b->AddChar(0x6ec5);
    b->AddChar(0x6ecb);
    b->AddChar(0x6ed1);
    b->AddChar(0x6edd);
    b->AddChar(0x6ede);
    b->AddChar(0x6ef4);
    b->AddChar(0x6f01);
    b->AddChar(0x6f02);
    b->AddChar(0x6f06);
    b->AddChar(0x6f0f);
    b->AddChar(0x6f14);
    b->AddChar(0x6f20);
    b->AddChar(0x6f22);
    b->AddChar(0x6f2b);
    b->AddChar(0x6f2c);
    b->AddChar(0x6f38);
    b->AddChar(0x6f54);
    b->AddChar(0x6f5c);
    b->AddChar(0x6f5f);
    b->AddChar(0x6f64);
    b->AddChar(0x6f6e);
    b->AddChar(0x6f84);
    b->AddChar(0x6fc0);
    b->AddChar(0x6fc1);
    b->AddChar(0x6fc3);
    b->AddChar(0x6feb);
    b->AddChar(0x6fef);
    b->AddChar(0x702c);
    b->AddChar(0x706b);
    b->AddChar(0x706f);
    b->AddChar(0x7070);
    b->AddChar(0x707d);
    b->AddChar(0x7089);
    b->AddChar(0x708a);
    b->AddChar(0x708e);
    b->AddChar(0x70ad);
    b->AddChar(0x70b9);
    b->AddChar(0x70ba);
    b->AddChar(0x70c8);
    b->AddChar(0x7121);
    b->AddChar(0x7126);
    b->AddChar(0x7136);
    b->AddChar(0x713c);
    b->AddChar(0x7159);
    b->AddChar(0x7167);
    b->AddChar(0x7169);
    b->AddChar(0x716e);
    b->AddChar(0x719f);
    b->AddChar(0x71b1);
    b->AddChar(0x71c3);
    b->AddChar(0x71e5);
    b->AddChar(0x7206);
    b->AddChar(0x7235);
    b->AddChar(0x7236);
    b->AddChar(0x7247);
    b->AddChar(0x7248);
    b->AddChar(0x7259);
    b->AddChar(0x725b);
    b->AddChar(0x7267);
    b->AddChar(0x7269);
    b->AddChar(0x7272);
    b->AddChar(0x7279);
    b->AddChar(0x72a0);
    b->AddChar(0x72ac);
    b->AddChar(0x72af);
    b->AddChar(0x72b6);
    b->AddChar(0x72c2);
    b->AddChar(0x72e9);
    b->AddChar(0x72ec);
    b->AddChar(0x72ed);
    b->AddChar(0x731b);
    b->AddChar(0x731f);
    b->AddChar(0x732a);
    b->AddChar(0x732b);
    b->AddChar(0x732e);
    b->AddChar(0x7336);
    b->AddChar(0x733f);
    b->AddChar(0x7344);
    b->AddChar(0x7363);
    b->AddChar(0x7372);
    b->AddChar(0x7384);
    b->AddChar(0x7387);
    b->AddChar(0x7389);
    b->AddChar(0x738b);
    b->AddChar(0x73cd);
    b->AddChar(0x73e0);
    b->AddChar(0x73ed);
    b->AddChar(0x73fe);
    b->AddChar(0x7403);
    b->AddChar(0x7406);
    b->AddChar(0x7434);
    b->AddChar(0x74b0);
    b->AddChar(0x74bd);
    b->AddChar(0x74f6);
    b->AddChar(0x7518);
    b->AddChar(0x751a);
    b->AddChar(0x751f);
    b->AddChar(0x7523);
    b->AddChar(0x7528);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x7530 + i);
    }
    b->AddChar(0x7537);
    b->AddChar(0x753a);
    b->AddChar(0x753b);
    b->AddChar(0x754c);
    b->AddChar(0x7551);
    b->AddChar(0x7554);
    b->AddChar(0x7559);
    b->AddChar(0x755c);
    b->AddChar(0x755d);
    b->AddChar(0x7565);
    b->AddChar(0x756a);
    b->AddChar(0x7570);
    b->AddChar(0x7573);
    b->AddChar(0x758e);
    b->AddChar(0x7591);
    b->AddChar(0x75ab);
    b->AddChar(0x75b2);
    b->AddChar(0x75be);
    b->AddChar(0x75c5);
    b->AddChar(0x75c7);
    b->AddChar(0x75d8);
    b->AddChar(0x75db);
    b->AddChar(0x75e2);
    b->AddChar(0x75f4);
    b->AddChar(0x7642);
    b->AddChar(0x7652);
    b->AddChar(0x7656);
    b->AddChar(0x7678);
    b->AddChar(0x767a);
    b->AddChar(0x767b);
    b->AddChar(0x767d);
    b->AddChar(0x767e);
    b->AddChar(0x7684);
    b->AddChar(0x7686);
    b->AddChar(0x7687);
    b->AddChar(0x76ae);
    b->AddChar(0x76bf);
    b->AddChar(0x76c6);
    b->AddChar(0x76ca);
    b->AddChar(0x76d7);
    b->AddChar(0x76db);
    b->AddChar(0x76df);
    b->AddChar(0x76e3);
    b->AddChar(0x76e4);
    b->AddChar(0x76ee);
    b->AddChar(0x76f2);
    b->AddChar(0x76f4);
    b->AddChar(0x76f8);
    b->AddChar(0x76fe);
    b->AddChar(0x7701);
    b->AddChar(0x770b);
    b->AddChar(0x770c);
    b->AddChar(0x771f);
    b->AddChar(0x7720);
    b->AddChar(0x773a);
    b->AddChar(0x773c);
    b->AddChar(0x7740);
    b->AddChar(0x7761);
    b->AddChar(0x7763);
    b->AddChar(0x77ac);
    b->AddChar(0x77db);
    b->AddChar(0x77e2);
    b->AddChar(0x77e5);
    b->AddChar(0x77ed);
    b->AddChar(0x77ef);
    b->AddChar(0x77f3);
    b->AddChar(0x7802);
    b->AddChar(0x7814);
    b->AddChar(0x7815);
    b->AddChar(0x7832);
    b->AddChar(0x7834);
    b->AddChar(0x785d);
    b->AddChar(0x786b);
    b->AddChar(0x786c);
    b->AddChar(0x7881);
    b->AddChar(0x7891);
    b->AddChar(0x78ba);
    b->AddChar(0x78c1);
    b->AddChar(0x78e8);
    b->AddChar(0x7901);
    b->AddChar(0x790e);
    b->AddChar(0x793a);
    b->AddChar(0x793c);
    b->AddChar(0x793e);
    b->AddChar(0x7948);
    b->AddChar(0x7949);
    b->AddChar(0x7956);
    b->AddChar(0x795a);
    b->AddChar(0x795d);
    b->AddChar(0x795e);
    b->AddChar(0x7965);
    b->AddChar(0x7968);
    b->AddChar(0x796d);
    b->AddChar(0x7981);
    b->AddChar(0x7984);
    b->AddChar(0x7985);
    b->AddChar(0x798d);
    b->AddChar(0x798e);
    b->AddChar(0x798f);
    b->AddChar(0x79c0);
    b->AddChar(0x79c1);
    b->AddChar(0x79cb);
    b->AddChar(0x79d1);
    b->AddChar(0x79d2);
    b->AddChar(0x79d8);
    b->AddChar(0x79df);
    b->AddChar(0x79e9);
    b->AddChar(0x79f0);
    b->AddChar(0x79fb);
    b->AddChar(0x7a0b);
    b->AddChar(0x7a0e);
    b->AddChar(0x7a1a);
    b->AddChar(0x7a2e);
    b->AddChar(0x7a32);
    b->AddChar(0x7a3c);
    b->AddChar(0x7a3f);
    b->AddChar(0x7a40);
    b->AddChar(0x7a42);
    b->AddChar(0x7a4d);
    b->AddChar(0x7a4f);
    b->AddChar(0x7a6b);
    b->AddChar(0x7a74);
    b->AddChar(0x7a76);
    b->AddChar(0x7a7a);
    b->AddChar(0x7a81);
    b->AddChar(0x7a83);
    b->AddChar(0x7a92);
    b->AddChar(0x7a93);
    b->AddChar(0x7aae);
    b->AddChar(0x7aaf);
    b->AddChar(0x7acb);
    b->AddChar(0x7adc);
    b->AddChar(0x7ae0);
    b->AddChar(0x7ae5);
    b->AddChar(0x7aef);
    b->AddChar(0x7af6);
    b->AddChar(0x7af9);
    b->AddChar(0x7b11);
    b->AddChar(0x7b1b);
    b->AddChar(0x7b26);
    b->AddChar(0x7b2c);
    b->AddChar(0x7b46);
    b->AddChar(0x7b49);
    b->AddChar(0x7b4b);
    b->AddChar(0x7b52);
    b->AddChar(0x7b54);
    b->AddChar(0x7b56);
    b->AddChar(0x7b87);
    b->AddChar(0x7b97);
    b->AddChar(0x7ba1);
    b->AddChar(0x7bb1);
    b->AddChar(0x7bc0);
    b->AddChar(0x7bc4);
    b->AddChar(0x7bc9);
    b->AddChar(0x7be4);
    b->AddChar(0x7c21);
    b->AddChar(0x7c3f);
    b->AddChar(0x7c4d);
    b->AddChar(0x7c73);
    b->AddChar(0x7c89);
    b->AddChar(0x7c8b);
    b->AddChar(0x7c92);
    b->AddChar(0x7c97);
    b->AddChar(0x7c98);
    b->AddChar(0x7c9b);
    b->AddChar(0x7ca7);
    b->AddChar(0x7cbe);
    b->AddChar(0x7cd6);
    b->AddChar(0x7ce7);
    b->AddChar(0x7cf8);
    b->AddChar(0x7cfb);
    b->AddChar(0x7cfe);
    b->AddChar(0x7d00);
    b->AddChar(0x7d04);
    b->AddChar(0x7d05);
    b->AddChar(0x7d0b);
    b->AddChar(0x7d0d);
    b->AddChar(0x7d14);
    b->AddChar(0x7d19);
    b->AddChar(0x7d1a);
    b->AddChar(0x7d1b);
    b->AddChar(0x7d20);
    b->AddChar(0x7d21);
    b->AddChar(0x7d22);
    b->AddChar(0x7d2b);
    b->AddChar(0x7d2f);
    b->AddChar(0x7d30);
    b->AddChar(0x7d33);
    b->AddChar(0x7d39);
    b->AddChar(0x7d3a);
    b->AddChar(0x7d42);
    b->AddChar(0x7d44);
    b->AddChar(0x7d4c);
    b->AddChar(0x7d50);
    b->AddChar(0x7d5e);
    b->AddChar(0x7d61);
    b->AddChar(0x7d66);
    b->AddChar(0x7d71);
    b->AddChar(0x7d75);
    b->AddChar(0x7d76);
    b->AddChar(0x7d79);
    b->AddChar(0x7d99);
    b->AddChar(0x7d9a);
    b->AddChar(0x7dad);
    b->AddChar(0x7db1);
    b->AddChar(0x7db2);
    b->AddChar(0x7dbf);
    b->AddChar(0x7dca);
    b->AddChar(0x7dcf);
    b->AddChar(0x7dd1);
    b->AddChar(0x7dd2);
    b->AddChar(0x7dda);
    b->AddChar(0x7de0);
    b->AddChar(0x7de8);
    b->AddChar(0x7de9);
    b->AddChar(0x7def);
    b->AddChar(0x7df4);
    b->AddChar(0x7e01);
    b->AddChar(0x7e04);
    b->AddChar(0x7e1b);
    b->AddChar(0x7e26);
    b->AddChar(0x7e2b);
    b->AddChar(0x7e2e);
    b->AddChar(0x7e3e);
    b->AddChar(0x7e41);
    b->AddChar(0x7e4a);
    b->AddChar(0x7e54);
    b->AddChar(0x7e55);
    b->AddChar(0x7e6d);
    b->AddChar(0x7e70);
    b->AddChar(0x7f36);
    b->AddChar(0x7f6a);
    b->AddChar(0x7f6e);
    b->AddChar(0x7f70);
    b->AddChar(0x7f72);
    b->AddChar(0x7f77);
    b->AddChar(0x7f85);
    b->AddChar(0x7f8a);
    b->AddChar(0x7f8e);
    b->AddChar(0x7fa4);
    b->AddChar(0x7fa9);
    b->AddChar(0x7fbd);
    b->AddChar(0x7fc1);
    b->AddChar(0x7fcc);
    b->AddChar(0x7fd2);
    b->AddChar(0x7ffb);
    b->AddChar(0x7ffc);
    b->AddChar(0x8001);
    b->AddChar(0x8003);
    b->AddChar(0x8005);
    b->AddChar(0x8010);
    b->AddChar(0x8015);
    b->AddChar(0x8017);
    b->AddChar(0x8033);
    b->AddChar(0x8056);
    b->AddChar(0x805e);
    b->AddChar(0x8074);
    b->AddChar(0x8077);
    b->AddChar(0x8089);
    b->AddChar(0x808c);
    b->AddChar(0x8096);
    b->AddChar(0x809d);
    b->AddChar(0x80a2);
    b->AddChar(0x80a5);
    b->AddChar(0x80a9);
    b->AddChar(0x80aa);
    b->AddChar(0x80af);
    b->AddChar(0x80b2);
    b->AddChar(0x80ba);
    b->AddChar(0x80c3);
    b->AddChar(0x80c6);
    b->AddChar(0x80cc);
    b->AddChar(0x80ce);
    b->AddChar(0x80de);
    b->AddChar(0x80f4);
    b->AddChar(0x80f8);
    b->AddChar(0x80fd);
    b->AddChar(0x8102);
    b->AddChar(0x8105);
    b->AddChar(0x8108);
    b->AddChar(0x811a);
    b->AddChar(0x8131);
    b->AddChar(0x8133);
    b->AddChar(0x8150);
    b->AddChar(0x8155);
    b->AddChar(0x8170);
    b->AddChar(0x8178);
    b->AddChar(0x8179);
    b->AddChar(0x819a);
    b->AddChar(0x819c);
    b->AddChar(0x81a8);
    b->AddChar(0x81d3);
    b->AddChar(0x81e3);
    b->AddChar(0x81e8);
    b->AddChar(0x81ea);
    b->AddChar(0x81ed);
    b->AddChar(0x81f3);
    b->AddChar(0x81f4);
    b->AddChar(0x8208);
    b->AddChar(0x820c);
    b->AddChar(0x820e);
    b->AddChar(0x8217);
    b->AddChar(0x821e);
    b->AddChar(0x821f);
    b->AddChar(0x822a);
    b->AddChar(0x822c);
    b->AddChar(0x8236);
    b->AddChar(0x8239);
    b->AddChar(0x8247);
    b->AddChar(0x8266);
    b->AddChar(0x826f);
    b->AddChar(0x8272);
    b->AddChar(0x828b);
    b->AddChar(0x829d);
    b->AddChar(0x82b1);
    b->AddChar(0x82b3);
    b->AddChar(0x82b8);
    b->AddChar(0x82bd);
    b->AddChar(0x82d7);
    b->AddChar(0x82e5);
    b->AddChar(0x82e6);
    b->AddChar(0x82f1);
    b->AddChar(0x8302);
    b->AddChar(0x830e);
    b->AddChar(0x8336);
    b->AddChar(0x8349);
    b->AddChar(0x8352);
    b->AddChar(0x8358);
    b->AddChar(0x8377);
    b->AddChar(0x83ca);
    b->AddChar(0x83cc);
    b->AddChar(0x83d3);
    b->AddChar(0x83dc);
    b->AddChar(0x83ef);
    b->AddChar(0x843d);
    b->AddChar(0x8449);
    b->AddChar(0x8457);
    b->AddChar(0x846c);
    b->AddChar(0x84b8);
    b->AddChar(0x84c4);
    b->AddChar(0x8535);
    b->AddChar(0x8584);
    b->AddChar(0x85a6);
    b->AddChar(0x85aa);
    b->AddChar(0x85ab);
    b->AddChar(0x85ac);
    b->AddChar(0x85e4);
    b->AddChar(0x85e9);
    b->AddChar(0x85fb);
    b->AddChar(0x864e);
    b->AddChar(0x8650);
    b->AddChar(0x865a);
    b->AddChar(0x865c);
    b->AddChar(0x865e);
    b->AddChar(0x866b);
    b->AddChar(0x868a);
    b->AddChar(0x8695);
    b->AddChar(0x86c7);
    b->AddChar(0x86cd);
    b->AddChar(0x86ee);
    b->AddChar(0x878d);
    b->AddChar(0x8840);
    b->AddChar(0x8846);
    b->AddChar(0x884c);
    b->AddChar(0x8853);
    b->AddChar(0x8857);
    b->AddChar(0x885b);
    b->AddChar(0x885d);
    b->AddChar(0x8861);
    b->AddChar(0x8863);
    b->AddChar(0x8868);
    b->AddChar(0x8870);
    b->AddChar(0x8877);
    b->AddChar(0x888b);
    b->AddChar(0x88ab);
    b->AddChar(0x88c1);
    b->AddChar(0x88c2);
    b->AddChar(0x88c5);
    b->AddChar(0x88cf);
    b->AddChar(0x88d5);
    b->AddChar(0x88dc);
    b->AddChar(0x88f8);
    b->AddChar(0x88fd);
    b->AddChar(0x8907);
    b->AddChar(0x8910);
    b->AddChar(0x8912);
    b->AddChar(0x895f);
    b->AddChar(0x8972);
    b->AddChar(0x897f);
    b->AddChar(0x8981);
    b->AddChar(0x8986);
    b->AddChar(0x8987);
    b->AddChar(0x898b);
    b->AddChar(0x898f);
    b->AddChar(0x8996);
    b->AddChar(0x899a);
    b->AddChar(0x89a7);
    b->AddChar(0x89aa);
    b->AddChar(0x89b3);
    b->AddChar(0x89d2);
    b->AddChar(0x89e3);
    b->AddChar(0x89e6);
    b->AddChar(0x8a00);
    b->AddChar(0x8a02);
    b->AddChar(0x8a08);
    b->AddChar(0x8a0e);
    b->AddChar(0x8a13);
    b->AddChar(0x8a17);
    b->AddChar(0x8a18);
    b->AddChar(0x8a1f);
    b->AddChar(0x8a2a);
    b->AddChar(0x8a2d);
    b->AddChar(0x8a31);
    b->AddChar(0x8a33);
    b->AddChar(0x8a34);
    b->AddChar(0x8a3a);
    b->AddChar(0x8a3c);
    b->AddChar(0x8a50);
    b->AddChar(0x8a54);
    b->AddChar(0x8a55);
    b->AddChar(0x8a5e);
    b->AddChar(0x8a60);
    b->AddChar(0x8a66);
    b->AddChar(0x8a69);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x8a70 + i);
    }
    b->AddChar(0x8a87);
    b->AddChar(0x8a89);
    b->AddChar(0x8a8c);
    b->AddChar(0x8a8d);
    b->AddChar(0x8a93);
    b->AddChar(0x8a95);
    b->AddChar(0x8a98);
    b->AddChar(0x8a9e);
    b->AddChar(0x8aa0);
    b->AddChar(0x8aa4);
    b->AddChar(0x8aac);
    b->AddChar(0x8aad);
    b->AddChar(0x8ab0);
    b->AddChar(0x8ab2);
    b->AddChar(0x8abf);
    b->AddChar(0x8ac7);
    b->AddChar(0x8acb);
    b->AddChar(0x8ad6);
    b->AddChar(0x8aed);
    b->AddChar(0x8aee);
    b->AddChar(0x8af8);
    b->AddChar(0x8afe);
    b->AddChar(0x8b00);
    b->AddChar(0x8b01);
    b->AddChar(0x8b04);
    b->AddChar(0x8b19);
    b->AddChar(0x8b1b);
    b->AddChar(0x8b1d);
    b->AddChar(0x8b21);
    b->AddChar(0x8b39);
    b->AddChar(0x8b58);
    b->AddChar(0x8b5c);
    b->AddChar(0x8b66);
    b->AddChar(0x8b70);
    b->AddChar(0x8b72);
    b->AddChar(0x8b77);
    b->AddChar(0x8c37);
    b->AddChar(0x8c46);
    b->AddChar(0x8c4a);
    b->AddChar(0x8c5a);
    b->AddChar(0x8c61);
    b->AddChar(0x8c6a);
    b->AddChar(0x8c9d);
    b->AddChar(0x8c9e);
    b->AddChar(0x8ca0);
    b->AddChar(0x8ca1);
    b->AddChar(0x8ca2);
    b->AddChar(0x8ca7);
    b->AddChar(0x8ca8);
    b->AddChar(0x8ca9);
    b->AddChar(0x8cab);
    b->AddChar(0x8cac);
    b->AddChar(0x8caf);
    b->AddChar(0x8cb4);
    b->AddChar(0x8cb7);
    b->AddChar(0x8cb8);
    b->AddChar(0x8cbb);
    b->AddChar(0x8cbf);
    b->AddChar(0x8cc0);
    b->AddChar(0x8cc3);
    b->AddChar(0x8cc4);
    b->AddChar(0x8cc7);
    b->AddChar(0x8cca);
    b->AddChar(0x8cd3);
    b->AddChar(0x8cdb);
    b->AddChar(0x8cdc);
    b->AddChar(0x8cde);
    b->AddChar(0x8ce0);
    b->AddChar(0x8ce2);
    b->AddChar(0x8ce6);
    b->AddChar(0x8cea);
    b->AddChar(0x8cfc);
    b->AddChar(0x8d08);
    b->AddChar(0x8d64);
    b->AddChar(0x8d66);
    b->AddChar(0x8d70);
    b->AddChar(0x8d74);
    b->AddChar(0x8d77);
    b->AddChar(0x8d85);
    b->AddChar(0x8d8a);
    b->AddChar(0x8da3);
    b->AddChar(0x8db3);
    b->AddChar(0x8ddd);
    b->AddChar(0x8de1);
    b->AddChar(0x8def);
    b->AddChar(0x8df3);
    b->AddChar(0x8df5);
    b->AddChar(0x8e0a);
    b->AddChar(0x8e0f);
    b->AddChar(0x8e8d);
    b->AddChar(0x8eab);
    b->AddChar(0x8eca);
    b->AddChar(0x8ecc);
    b->AddChar(0x8ecd);
    b->AddChar(0x8ed2);
    b->AddChar(0x8edf);
    b->AddChar(0x8ee2);
    b->AddChar(0x8ef8);
    b->AddChar(0x8efd);
    b->AddChar(0x8f03);
    b->AddChar(0x8f09);
    b->AddChar(0x8f1d);
    b->AddChar(0x8f29);
    b->AddChar(0x8f2a);
    b->AddChar(0x8f38);
    b->AddChar(0x8f44);
    b->AddChar(0x8f9b);
    b->AddChar(0x8f9e);
    b->AddChar(0x8fb0);
    b->AddChar(0x8fb1);
    b->AddChar(0x8fb2);
    b->AddChar(0x8fba);
    b->AddChar(0x8fbc);
    b->AddChar(0x8fc5);
    b->AddChar(0x8fce);
    b->AddChar(0x8fd1);
    b->AddChar(0x8fd4);
    b->AddChar(0x8feb);
    b->AddChar(0x8fed);
    b->AddChar(0x8ff0);
    b->AddChar(0x8ff7);
    b->AddChar(0x8ffd);
    b->AddChar(0x9000);
    b->AddChar(0x9001);
    b->AddChar(0x9003);
    b->AddChar(0x9006);
    b->AddChar(0x900f);
    b->AddChar(0x9010);
    b->AddChar(0x9013);
    b->AddChar(0x9014);
    b->AddChar(0x901a);
    b->AddChar(0x901d);
    b->AddChar(0x901f);
    b->AddChar(0x9020);
    b->AddChar(0x9023);
    b->AddChar(0x902e);
    b->AddChar(0x9031);
    b->AddChar(0x9032);
    b->AddChar(0x9038);
    b->AddChar(0x9042);
    b->AddChar(0x9045);
    b->AddChar(0x9047);
    b->AddChar(0x904a);
    b->AddChar(0x904b);
    b->AddChar(0x904d);
    b->AddChar(0x904e);
    b->AddChar(0x9053);
    b->AddChar(0x9054);
    b->AddChar(0x9055);
    b->AddChar(0x9060);
    b->AddChar(0x9063);
    b->AddChar(0x9069);
    b->AddChar(0x906d);
    b->AddChar(0x906e);
    b->AddChar(0x9075);
    b->AddChar(0x9077);
    b->AddChar(0x9078);
    b->AddChar(0x907a);
    b->AddChar(0x907f);
    b->AddChar(0x9084);
    b->AddChar(0x90a6);
    b->AddChar(0x90aa);
    b->AddChar(0x90b8);
    b->AddChar(0x90ca);
    b->AddChar(0x90ce);
    b->AddChar(0x90e1);
    b->AddChar(0x90e8);
    b->AddChar(0x90ed);
    b->AddChar(0x90f5);
    b->AddChar(0x90f7);
    b->AddChar(0x90fd);
    b->AddChar(0x9149);
    b->AddChar(0x914c);
    b->AddChar(0x914d);
    b->AddChar(0x9152);
    b->AddChar(0x9154);
    b->AddChar(0x9162);
    b->AddChar(0x916a);
    b->AddChar(0x916c);
    b->AddChar(0x9175);
    b->AddChar(0x9177);
    b->AddChar(0x9178);
    b->AddChar(0x919c);
    b->AddChar(0x91b8);
    b->AddChar(0x91c8);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x91cc + i);
    }
    b->AddChar(0x91d1);
    b->AddChar(0x91dd);
    b->AddChar(0x91e3);
    b->AddChar(0x920d);
    b->AddChar(0x9234);
    b->AddChar(0x9244);
    b->AddChar(0x925b);
    b->AddChar(0x9262);
    b->AddChar(0x9271);
    b->AddChar(0x9280);
    b->AddChar(0x9283);
    b->AddChar(0x9285);
    b->AddChar(0x9298);
    b->AddChar(0x92ad);
    b->AddChar(0x92ed);
    b->AddChar(0x92f3);
    b->AddChar(0x92fc);
    b->AddChar(0x9304);
    b->AddChar(0x9320);
    b->AddChar(0x932c);
    b->AddChar(0x932f);
    b->AddChar(0x9332);
    b->AddChar(0x935b);
    b->AddChar(0x9396);
    b->AddChar(0x93ae);
    b->AddChar(0x93e1);
    b->AddChar(0x9418);
    b->AddChar(0x9451);
    b->AddChar(0x9577);
    b->AddChar(0x9580);
    b->AddChar(0x9589);
    b->AddChar(0x958b);
    b->AddChar(0x958f);
    b->AddChar(0x9591);
    b->AddChar(0x9593);
    b->AddChar(0x95a2);
    b->AddChar(0x95a3);
    b->AddChar(0x95a5);
    b->AddChar(0x95b2);
    b->AddChar(0x95d8);
    b->AddChar(0x962a);
    b->AddChar(0x9632);
    b->AddChar(0x963b);
    b->AddChar(0x9644);
    b->AddChar(0x964d);
    b->AddChar(0x9650);
    b->AddChar(0x965b);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x9662 + i);
    }
    b->AddChar(0x966a);
    b->AddChar(0x9670);
    b->AddChar(0x9673);
    b->AddChar(0x9675);
    b->AddChar(0x9676);
    b->AddChar(0x9678);
    b->AddChar(0x967a);
    b->AddChar(0x967d);
    b->AddChar(0x9685);
    b->AddChar(0x9686);
    b->AddChar(0x968a);
    b->AddChar(0x968e);
    b->AddChar(0x968f);
    b->AddChar(0x9694);
    b->AddChar(0x969b);
    b->AddChar(0x969c);
    b->AddChar(0x96a0);
    b->AddChar(0x96a3);
    b->AddChar(0x96b7);
    b->AddChar(0x96bb);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x96c4 + i);
    }
    b->AddChar(0x96c9);
    b->AddChar(0x96cc);
    b->AddChar(0x96d1);
    b->AddChar(0x96e2);
    b->AddChar(0x96e3);
    b->AddChar(0x96e8);
    b->AddChar(0x96ea);
    b->AddChar(0x96f0);
    b->AddChar(0x96f2);
    b->AddChar(0x96f6);
    b->AddChar(0x96f7);
    b->AddChar(0x96fb);
    b->AddChar(0x9700);
    b->AddChar(0x9707);
    b->AddChar(0x970a);
    b->AddChar(0x971c);
    b->AddChar(0x9727);
    b->AddChar(0x9732);
    b->AddChar(0x9752);
    b->AddChar(0x9759);
    b->AddChar(0x975e);
    b->AddChar(0x9762);
    b->AddChar(0x9769);
    b->AddChar(0x9774);
    b->AddChar(0x97d3);
    b->AddChar(0x97f3);
    b->AddChar(0x97fb);
    b->AddChar(0x97ff);
    b->AddChar(0x9802);
    b->AddChar(0x9803);
    b->AddChar(0x9805);
    b->AddChar(0x9806);
    b->AddChar(0x9810);
    b->AddChar(0x9811);
    b->AddChar(0x9812);
    b->AddChar(0x9818);
    b->AddChar(0x982c);
    b->AddChar(0x982d);
    b->AddChar(0x983b);
    b->AddChar(0x983c);
    b->AddChar(0x984c);
    b->AddChar(0x984d);
    b->AddChar(0x9854);
    b->AddChar(0x9855);
    b->AddChar(0x9858);
    b->AddChar(0x985e);
    b->AddChar(0x9867);
    b->AddChar(0x98a8);
    b->AddChar(0x98db);
    b->AddChar(0x98df);
    b->AddChar(0x98e2);
    b->AddChar(0x98ef);
    b->AddChar(0x98f2);
    b->AddChar(0x98fc);
    b->AddChar(0x98fd);
    b->AddChar(0x98fe);
    b->AddChar(0x990a);
    b->AddChar(0x9913);
    b->AddChar(0x9928);
    b->AddChar(0x9996);
    b->AddChar(0x9999);
    b->AddChar(0x99ac);
    b->AddChar(0x99c4);
    b->AddChar(0x99c5);
    b->AddChar(0x99c6);
    b->AddChar(0x99d0);
    b->AddChar(0x9a0e);
    b->AddChar(0x9a12);
    b->AddChar(0x9a13);
    b->AddChar(0x9a30);
    b->AddChar(0x9a5a);
    b->AddChar(0x9aa8);
    b->AddChar(0x9ac4);
    b->AddChar(0x9ad8);
    b->AddChar(0x9aea);
    b->AddChar(0x9b3c);
    b->AddChar(0x9b42);
    b->AddChar(0x9b45);
    b->AddChar(0x9b54);
    b->AddChar(0x9b5a);
    b->AddChar(0x9bae);
    b->AddChar(0x9be8);
    b->AddChar(0x9ce5);
    b->AddChar(0x9cf3);
    b->AddChar(0x9cf4);
    b->AddChar(0x9d8f);
    b->AddChar(0x9e7f);
    b->AddChar(0x9e97);
    b->AddChar(0x9ea6);
    b->AddChar(0x9ebb);
    b->AddChar(0x9ec4);
    b->AddChar(0x9ed2);
    b->AddChar(0x9ed9);
    b->AddChar(0x9f13);
    b->AddChar(0x9f20);
    b->AddChar(0x9f3b);
    b->AddChar(0x9f62);
    b->AddChar(0xff01);
    b->AddChar(0xff02);
    b->AddChar(0xff03);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0xff05 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xff0c + i);
    }
    b->AddChar(0xff1a);
    b->AddChar(0xff1b);
    b->AddChar(0xff1f);
    b->AddChar(0xff20);
    b->AddChar(0xff3b);
    b->AddChar(0xff3c);
    b->AddChar(0xff3d);
    b->AddChar(0xff3f);
    b->AddChar(0xff5b);
    b->AddChar(0xff5d);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xff61 + i);
    }
}

static void AddGlyphRangesFromCLDRForKO(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    b->AddChar(0x25);
    b->AddChar(0x26);
    for(int i = 0; i < 20; ++i) {
        b->AddChar(0x28 + i);
    }
    b->AddChar(0x3f);
    b->AddChar(0x40);
    b->AddChar(0x5b);
    b->AddChar(0x5c);
    b->AddChar(0x5d);
    b->AddChar(0x5f);
    b->AddChar(0x7b);
    b->AddChar(0x7d);
    b->AddChar(0xa1);
    b->AddChar(0xa7);
    b->AddChar(0xb6);
    b->AddChar(0xb7);
    b->AddChar(0xbf);
    for(int i = 0; i < 19; ++i) {
        b->AddChar(0x1100 + i);
    }
    for(int i = 0; i < 21; ++i) {
        b->AddChar(0x1161 + i);
    }
    for(int i = 0; i < 27; ++i) {
        b->AddChar(0x11a8 + i);
    }
    b->AddChar(0x2010);
    b->AddChar(0x2014);
    b->AddChar(0x2015);
    b->AddChar(0x2018);
    b->AddChar(0x2019);
    b->AddChar(0x201c);
    b->AddChar(0x201d);
    b->AddChar(0x2020);
    b->AddChar(0x2021);
    b->AddChar(0x2025);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
    b->AddChar(0x2032);
    b->AddChar(0x2033);
    b->AddChar(0x203b);
    b->AddChar(0x203e);
    b->AddChar(0x3001);
    b->AddChar(0x3002);
    b->AddChar(0x3003);
    for(int i = 0; i < 10; ++i) {
        b->AddChar(0x3008 + i);
    }
    b->AddChar(0x3014);
    b->AddChar(0x3015);
    b->AddChar(0x301c);
    b->AddChar(0x30fb);
    b->AddChar(0x4e18);
    b->AddChar(0x4e32);
    b->AddChar(0x4e43);
    b->AddChar(0x4e45);
    b->AddChar(0x4e56);
    b->AddChar(0x4e5d);
    b->AddChar(0x4e5e);
    b->AddChar(0x4e6b);
    b->AddChar(0x4e7e);
    b->AddChar(0x4e82);
    b->AddChar(0x4e98);
    b->AddChar(0x4ea4);
    b->AddChar(0x4eac);
    b->AddChar(0x4ec7);
    b->AddChar(0x4eca);
    b->AddChar(0x4ecb);
    b->AddChar(0x4ef6);
    b->AddChar(0x4ef7);
    b->AddChar(0x4f01);
    b->AddChar(0x4f0b);
    b->AddChar(0x4f0e);
    b->AddChar(0x4f3d);
    b->AddChar(0x4f73);
    b->AddChar(0x4f76);
    b->AddChar(0x4f83);
    b->AddChar(0x4f86);
    b->AddChar(0x4f8a);
    b->AddChar(0x4f9b);
    b->AddChar(0x4fc2);
    b->AddChar(0x4fd3);
    b->AddChar(0x4ff1);
    b->AddChar(0x500b);
    b->AddChar(0x501e);
    b->AddChar(0x5026);
    b->AddChar(0x5028);
    b->AddChar(0x5047);
    b->AddChar(0x5048);
    b->AddChar(0x5065);
    b->AddChar(0x5080);
    b->AddChar(0x5091);
    b->AddChar(0x50be);
    b->AddChar(0x50c5);
    b->AddChar(0x50d1);
    b->AddChar(0x50f9);
    b->AddChar(0x5106);
    b->AddChar(0x5109);
    b->AddChar(0x513a);
    b->AddChar(0x5149);
    b->AddChar(0x514b);
    b->AddChar(0x5162);
    b->AddChar(0x5167);
    b->AddChar(0x516c);
    b->AddChar(0x5171);
    b->AddChar(0x5176);
    b->AddChar(0x5177);
    b->AddChar(0x517c);
    b->AddChar(0x5180);
    b->AddChar(0x51a0);
    b->AddChar(0x51f1);
    b->AddChar(0x520a);
    b->AddChar(0x522e);
    b->AddChar(0x5238);
    b->AddChar(0x523b);
    b->AddChar(0x524b);
    b->AddChar(0x525b);
    b->AddChar(0x5287);
    b->AddChar(0x528d);
    b->AddChar(0x5292);
    b->AddChar(0x529f);
    b->AddChar(0x52a0);
    b->AddChar(0x52a4);
    b->AddChar(0x52ab);
    b->AddChar(0x52c1);
    b->AddChar(0x52cd);
    b->AddChar(0x52d8);
    b->AddChar(0x52e4);
    b->AddChar(0x52f8);
    b->AddChar(0x52fb);
    b->AddChar(0x52fe);
    b->AddChar(0x5321);
    b->AddChar(0x5323);
    b->AddChar(0x5340);
    b->AddChar(0x5357);
    b->AddChar(0x5366);
    b->AddChar(0x5374);
    b->AddChar(0x5375);
    b->AddChar(0x5377);
    b->AddChar(0x537f);
    b->AddChar(0x53a5);
    b->AddChar(0x53bb);
    b->AddChar(0x53ca);
    b->AddChar(0x53e3);
    b->AddChar(0x53e5);
    b->AddChar(0x53e9);
    b->AddChar(0x53eb);
    b->AddChar(0x53ef);
    b->AddChar(0x5404);
    b->AddChar(0x5409);
    b->AddChar(0x541b);
    b->AddChar(0x544a);
    b->AddChar(0x5471);
    b->AddChar(0x5475);
    b->AddChar(0x548e);
    b->AddChar(0x54ac);
    b->AddChar(0x54e5);
    b->AddChar(0x54ed);
    b->AddChar(0x5553);
    b->AddChar(0x5580);
    b->AddChar(0x5587);
    b->AddChar(0x559d);
    b->AddChar(0x55ab);
    b->AddChar(0x55ac);
    b->AddChar(0x55dc);
    b->AddChar(0x5609);
    b->AddChar(0x5614);
    b->AddChar(0x5668);
    b->AddChar(0x56ca);
    b->AddChar(0x56f0);
    b->AddChar(0x56fa);
    b->AddChar(0x5708);
    b->AddChar(0x570b);
    b->AddChar(0x572d);
    b->AddChar(0x573b);
    b->AddChar(0x5747);
    b->AddChar(0x574e);
    b->AddChar(0x5751);
    b->AddChar(0x5764);
    b->AddChar(0x5770);
    b->AddChar(0x5775);
    b->AddChar(0x57a2);
    b->AddChar(0x57fa);
    b->AddChar(0x57fc);
    b->AddChar(0x5800);
    b->AddChar(0x5805);
    b->AddChar(0x5808);
    b->AddChar(0x582a);
    b->AddChar(0x583a);
    b->AddChar(0x584a);
    b->AddChar(0x584f);
    b->AddChar(0x5883);
    b->AddChar(0x58be);
    b->AddChar(0x58d9);
    b->AddChar(0x58de);
    b->AddChar(0x5914);
    b->AddChar(0x5947);
    b->AddChar(0x5948);
    b->AddChar(0x594e);
    b->AddChar(0x5951);
    b->AddChar(0x5978);
    b->AddChar(0x5993);
    b->AddChar(0x5997);
    b->AddChar(0x59d1);
    b->AddChar(0x59dc);
    b->AddChar(0x59e6);
    b->AddChar(0x5a18);
    b->AddChar(0x5a1c);
    b->AddChar(0x5ac1);
    b->AddChar(0x5b0c);
    b->AddChar(0x5b54);
    b->AddChar(0x5b63);
    b->AddChar(0x5b64);
    b->AddChar(0x5b8f);
    b->AddChar(0x5b98);
    b->AddChar(0x5ba2);
    b->AddChar(0x5bae);
    b->AddChar(0x5bb6);
    b->AddChar(0x5bc4);
    b->AddChar(0x5bc7);
    b->AddChar(0x5be1);
    b->AddChar(0x5bec);
    b->AddChar(0x5c3b);
    b->AddChar(0x5c40);
    b->AddChar(0x5c45);
    b->AddChar(0x5c46);
    b->AddChar(0x5c48);
    b->AddChar(0x5c90);
    b->AddChar(0x5ca1);
    b->AddChar(0x5cac);
    b->AddChar(0x5d0e);
    b->AddChar(0x5d11);
    b->AddChar(0x5d17);
    b->AddChar(0x5d4c);
    b->AddChar(0x5d50);
    b->AddChar(0x5d87);
    b->AddChar(0x5da0);
    b->AddChar(0x5de5);
    b->AddChar(0x5de7);
    b->AddChar(0x5de8);
    b->AddChar(0x5df1);
    b->AddChar(0x5dfe);
    b->AddChar(0x5e72);
    b->AddChar(0x5e79);
    b->AddChar(0x5e7e);
    b->AddChar(0x5e9a);
    b->AddChar(0x5eab);
    b->AddChar(0x5eb7);
    b->AddChar(0x5eca);
    b->AddChar(0x5ed0);
    b->AddChar(0x5ed3);
    b->AddChar(0x5ee3);
    b->AddChar(0x5efa);
    b->AddChar(0x5f13);
    b->AddChar(0x5f3a);
    b->AddChar(0x5f4a);
    b->AddChar(0x5f91);
    b->AddChar(0x5fcc);
    b->AddChar(0x6025);
    b->AddChar(0x602a);
    b->AddChar(0x602f);
    b->AddChar(0x6050);
    b->AddChar(0x605d);
    b->AddChar(0x606a);
    b->AddChar(0x606d);
    b->AddChar(0x60b8);
    b->AddChar(0x6106);
    b->AddChar(0x611f);
    b->AddChar(0x6127);
    b->AddChar(0x6137);
    b->AddChar(0x613e);
    b->AddChar(0x614a);
    b->AddChar(0x6163);
    b->AddChar(0x6164);
    b->AddChar(0x6168);
    b->AddChar(0x6176);
    b->AddChar(0x6177);
    b->AddChar(0x61a9);
    b->AddChar(0x61ac);
    b->AddChar(0x61be);
    b->AddChar(0x61c3);
    b->AddChar(0x61c7);
    b->AddChar(0x61e6);
    b->AddChar(0x61f6);
    b->AddChar(0x61fc);
    b->AddChar(0x6208);
    b->AddChar(0x6212);
    b->AddChar(0x621f);
    b->AddChar(0x6221);
    b->AddChar(0x6271);
    b->AddChar(0x6280);
    b->AddChar(0x6289);
    b->AddChar(0x62c9);
    b->AddChar(0x62cf);
    b->AddChar(0x62d0);
    b->AddChar(0x62d2);
    b->AddChar(0x62d8);
    b->AddChar(0x62ec);
    b->AddChar(0x62ee);
    b->AddChar(0x62f1);
    b->AddChar(0x62f3);
    b->AddChar(0x62f7);
    b->AddChar(0x62ff);
    b->AddChar(0x634f);
    b->AddChar(0x636e);
    b->AddChar(0x6372);
    b->AddChar(0x637a);
    b->AddChar(0x6398);
    b->AddChar(0x639b);
    b->AddChar(0x63a7);
    b->AddChar(0x63c0);
    b->AddChar(0x63c6);
    b->AddChar(0x63ed);
    b->AddChar(0x64ca);
    b->AddChar(0x64ce);
    b->AddChar(0x64d2);
    b->AddChar(0x64da);
    b->AddChar(0x64e7);
    b->AddChar(0x652a);
    b->AddChar(0x6537);
    b->AddChar(0x6539);
    b->AddChar(0x653b);
    b->AddChar(0x6545);
    b->AddChar(0x654e);
    b->AddChar(0x6551);
    b->AddChar(0x6562);
    b->AddChar(0x656c);
    b->AddChar(0x6572);
    b->AddChar(0x659b);
    b->AddChar(0x65a4);
    b->AddChar(0x65d7);
    b->AddChar(0x65e3);
    b->AddChar(0x6606);
    b->AddChar(0x6611);
    b->AddChar(0x666f);
    b->AddChar(0x6677);
    b->AddChar(0x6687);
    b->AddChar(0x6696);
    b->AddChar(0x66a0);
    b->AddChar(0x66bb);
    b->AddChar(0x66e0);
    b->AddChar(0x66f2);
    b->AddChar(0x66f4);
    b->AddChar(0x66f7);
    b->AddChar(0x6717);
    b->AddChar(0x671e);
    b->AddChar(0x671f);
    b->AddChar(0x673a);
    b->AddChar(0x6746);
    b->AddChar(0x675e);
    b->AddChar(0x6770);
    b->AddChar(0x678f);
    b->AddChar(0x679c);
    b->AddChar(0x67af);
    b->AddChar(0x67b6);
    b->AddChar(0x67b8);
    b->AddChar(0x67d1);
    b->AddChar(0x67e9);
    b->AddChar(0x67ec);
    b->AddChar(0x67ef);
    b->AddChar(0x6821);
    b->AddChar(0x6839);
    b->AddChar(0x683c);
    b->AddChar(0x6840);
    b->AddChar(0x6842);
    b->AddChar(0x6854);
    b->AddChar(0x687f);
    b->AddChar(0x688f);
    b->AddChar(0x6897);
    b->AddChar(0x68b0);
    b->AddChar(0x68b1);
    b->AddChar(0x68c4);
    b->AddChar(0x68cb);
    b->AddChar(0x68cd);
    b->AddChar(0x68d8);
    b->AddChar(0x68e8);
    b->AddChar(0x68fa);
    b->AddChar(0x6957);
    b->AddChar(0x6960);
    b->AddChar(0x6975);
    b->AddChar(0x69c1);
    b->AddChar(0x69cb);
    b->AddChar(0x69d0);
    b->AddChar(0x69e8);
    b->AddChar(0x69ea);
    b->AddChar(0x69fb);
    b->AddChar(0x69ff);
    b->AddChar(0x6a02);
    b->AddChar(0x6a44);
    b->AddChar(0x6a4b);
    b->AddChar(0x6a58);
    b->AddChar(0x6a5f);
    b->AddChar(0x6a84);
    b->AddChar(0x6a8e);
    b->AddChar(0x6aa2);
    b->AddChar(0x6ac3);
    b->AddChar(0x6b04);
    b->AddChar(0x6b0a);
    b->AddChar(0x6b3a);
    b->AddChar(0x6b3e);
    b->AddChar(0x6b4c);
    b->AddChar(0x6b50);
    b->AddChar(0x6b78);
    b->AddChar(0x6bbc);
    b->AddChar(0x6bc6);
    b->AddChar(0x6bec);
    b->AddChar(0x6c23);
    b->AddChar(0x6c42);
    b->AddChar(0x6c5f);
    b->AddChar(0x6c68);
    b->AddChar(0x6c72);
    b->AddChar(0x6c7a);
    b->AddChar(0x6c7d);
    b->AddChar(0x6c82);
    b->AddChar(0x6cbd);
    b->AddChar(0x6d1b);
    b->AddChar(0x6d38);
    b->AddChar(0x6d6a);
    b->AddChar(0x6d87);
    b->AddChar(0x6dc3);
    b->AddChar(0x6dc7);
    b->AddChar(0x6e1b);
    b->AddChar(0x6e20);
    b->AddChar(0x6e34);
    b->AddChar(0x6e73);
    b->AddChar(0x6e9d);
    b->AddChar(0x6eaa);
    b->AddChar(0x6ed1);
    b->AddChar(0x6efe);
    b->AddChar(0x6f11);
    b->AddChar(0x6f54);
    b->AddChar(0x6f70);
    b->AddChar(0x6f97);
    b->AddChar(0x6fc0);
    b->AddChar(0x6feb);
    b->AddChar(0x704c);
    b->AddChar(0x7078);
    b->AddChar(0x7085);
    b->AddChar(0x709a);
    b->AddChar(0x70ac);
    b->AddChar(0x70d9);
    b->AddChar(0x70f1);
    b->AddChar(0x7156);
    b->AddChar(0x721b);
    b->AddChar(0x727d);
    b->AddChar(0x72ac);
    b->AddChar(0x72c2);
    b->AddChar(0x72d7);
    b->AddChar(0x72e1);
    b->AddChar(0x72fc);
    b->AddChar(0x7357);
    b->AddChar(0x7396);
    b->AddChar(0x7398);
    b->AddChar(0x73c2);
    b->AddChar(0x73cf);
    b->AddChar(0x73d6);
    b->AddChar(0x73d9);
    b->AddChar(0x73de);
    b->AddChar(0x73ea);
    b->AddChar(0x7403);
    b->AddChar(0x7426);
    b->AddChar(0x7428);
    b->AddChar(0x742a);
    b->AddChar(0x742f);
    b->AddChar(0x7434);
    b->AddChar(0x747e);
    b->AddChar(0x7482);
    b->AddChar(0x749f);
    b->AddChar(0x74a3);
    b->AddChar(0x74a5);
    b->AddChar(0x74ca);
    b->AddChar(0x74d8);
    b->AddChar(0x74dc);
    b->AddChar(0x7504);
    b->AddChar(0x7518);
    b->AddChar(0x7532);
    b->AddChar(0x7537);
    b->AddChar(0x7547);
    b->AddChar(0x754c);
    b->AddChar(0x7578);
    b->AddChar(0x757a);
    b->AddChar(0x757f);
    b->AddChar(0x7586);
    b->AddChar(0x75a5);
    b->AddChar(0x75b3);
    b->AddChar(0x75c2);
    b->AddChar(0x75d9);
    b->AddChar(0x75fc);
    b->AddChar(0x764e);
    b->AddChar(0x7669);
    b->AddChar(0x7678);
    b->AddChar(0x7686);
    b->AddChar(0x768e);
    b->AddChar(0x7690);
    b->AddChar(0x76d6);
    b->AddChar(0x76e3);
    b->AddChar(0x770b);
    b->AddChar(0x7737);
    b->AddChar(0x777e);
    b->AddChar(0x77b0);
    b->AddChar(0x77bc);
    b->AddChar(0x77bf);
    b->AddChar(0x77dc);
    b->AddChar(0x77e9);
    b->AddChar(0x77ef);
    b->AddChar(0x7845);
    b->AddChar(0x786c);
    b->AddChar(0x7881);
    b->AddChar(0x78a3);
    b->AddChar(0x78ce);
    b->AddChar(0x78ec);
    b->AddChar(0x78ef);
    b->AddChar(0x78f5);
    b->AddChar(0x7941);
    b->AddChar(0x7947);
    b->AddChar(0x7948);
    b->AddChar(0x795b);
    b->AddChar(0x797a);
    b->AddChar(0x7981);
    b->AddChar(0x79bd);
    b->AddChar(0x79d1);
    b->AddChar(0x7a08);
    b->AddChar(0x7a3c);
    b->AddChar(0x7a3d);
    b->AddChar(0x7a3f);
    b->AddChar(0x7a40);
    b->AddChar(0x7a76);
    b->AddChar(0x7a79);
    b->AddChar(0x7a7a);
    b->AddChar(0x7a98);
    b->AddChar(0x7a9f);
    b->AddChar(0x7aae);
    b->AddChar(0x7aba);
    b->AddChar(0x7ac5);
    b->AddChar(0x7adf);
    b->AddChar(0x7aed);
    b->AddChar(0x7af6);
    b->AddChar(0x7aff);
    b->AddChar(0x7b4b);
    b->AddChar(0x7b50);
    b->AddChar(0x7b60);
    b->AddChar(0x7b87);
    b->AddChar(0x7b95);
    b->AddChar(0x7b9d);
    b->AddChar(0x7ba1);
    b->AddChar(0x7c21);
    b->AddChar(0x7cb3);
    b->AddChar(0x7ce0);
    b->AddChar(0x7cfb);
    b->AddChar(0x7cfe);
    b->AddChar(0x7d00);
    b->AddChar(0x7d0d);
    b->AddChar(0x7d18);
    b->AddChar(0x7d1a);
    b->AddChar(0x7d3a);
    b->AddChar(0x7d45);
    b->AddChar(0x7d50);
    b->AddChar(0x7d5e);
    b->AddChar(0x7d66);
    b->AddChar(0x7d73);
    b->AddChar(0x7d79);
    b->AddChar(0x7d7f);
    b->AddChar(0x7d93);
    b->AddChar(0x7db1);
    b->AddChar(0x7dba);
    b->AddChar(0x7dca);
    b->AddChar(0x7e6b);
    b->AddChar(0x7e6d);
    b->AddChar(0x7e7c);
    b->AddChar(0x7f3a);
    b->AddChar(0x7f50);
    b->AddChar(0x7f6b);
    b->AddChar(0x7f85);
    b->AddChar(0x7f88);
    b->AddChar(0x7f8c);
    b->AddChar(0x7f94);
    b->AddChar(0x7fa4);
    b->AddChar(0x7fb9);
    b->AddChar(0x7ff9);
    b->AddChar(0x8003);
    b->AddChar(0x8006);
    b->AddChar(0x8009);
    b->AddChar(0x8015);
    b->AddChar(0x802d);
    b->AddChar(0x803f);
    b->AddChar(0x808c);
    b->AddChar(0x809d);
    b->AddChar(0x80a1);
    b->AddChar(0x80a9);
    b->AddChar(0x80af);
    b->AddChar(0x80b1);
    b->AddChar(0x80db);
    b->AddChar(0x80f1);
    b->AddChar(0x811a);
    b->AddChar(0x811b);
    b->AddChar(0x8154);
    b->AddChar(0x8171);
    b->AddChar(0x8188);
    b->AddChar(0x818f);
    b->AddChar(0x81a0);
    b->AddChar(0x81d8);
    b->AddChar(0x81fc);
    b->AddChar(0x8205);
    b->AddChar(0x820a);
    b->AddChar(0x8221);
    b->AddChar(0x826e);
    b->AddChar(0x8271);
    b->AddChar(0x828e);
    b->AddChar(0x82a5);
    b->AddChar(0x82a9);
    b->AddChar(0x82b9);
    b->AddChar(0x82db);
    b->AddChar(0x82df);
    b->AddChar(0x82e6);
    b->AddChar(0x82fd);
    b->AddChar(0x8304);
    b->AddChar(0x8396);
    b->AddChar(0x83c5);
    b->AddChar(0x83ca);
    b->AddChar(0x83cc);
    b->AddChar(0x83d3);
    b->AddChar(0x83eb);
    b->AddChar(0x83f0);
    b->AddChar(0x843d);
    b->AddChar(0x845b);
    b->AddChar(0x8475);
    b->AddChar(0x84cb);
    b->AddChar(0x854e);
    b->AddChar(0x8568);
    b->AddChar(0x8591);
    b->AddChar(0x85c1);
    b->AddChar(0x85cd);
    b->AddChar(0x85ff);
    b->AddChar(0x862d);
    b->AddChar(0x863f);
    b->AddChar(0x8654);
    b->AddChar(0x86a3);
    b->AddChar(0x86df);
    b->AddChar(0x874e);
    b->AddChar(0x87ba);
    b->AddChar(0x881f);
    b->AddChar(0x8831);
    b->AddChar(0x8857);
    b->AddChar(0x8862);
    b->AddChar(0x8872);
    b->AddChar(0x887e);
    b->AddChar(0x887f);
    b->AddChar(0x8888);
    b->AddChar(0x889e);
    b->AddChar(0x88b4);
    b->AddChar(0x88d9);
    b->AddChar(0x88f8);
    b->AddChar(0x8910);
    b->AddChar(0x8941);
    b->AddChar(0x895f);
    b->AddChar(0x8964);
    b->AddChar(0x898b);
    b->AddChar(0x898f);
    b->AddChar(0x89a1);
    b->AddChar(0x89b2);
    b->AddChar(0x89ba);
    b->AddChar(0x89c0);
    b->AddChar(0x89d2);
    b->AddChar(0x8a08);
    b->AddChar(0x8a18);
    b->AddChar(0x8a23);
    b->AddChar(0x8a36);
    b->AddChar(0x8a6d);
    b->AddChar(0x8a87);
    b->AddChar(0x8aa1);
    b->AddChar(0x8aa5);
    b->AddChar(0x8ab2);
    b->AddChar(0x8aeb);
    b->AddChar(0x8afe);
    b->AddChar(0x8b19);
    b->AddChar(0x8b1b);
    b->AddChar(0x8b33);
    b->AddChar(0x8b39);
    b->AddChar(0x8b4f);
    b->AddChar(0x8b66);
    b->AddChar(0x8b74);
    b->AddChar(0x8c37);
    b->AddChar(0x8c3f);
    b->AddChar(0x8c48);
    b->AddChar(0x8ca2);
    b->AddChar(0x8cab);
    b->AddChar(0x8cb4);
    b->AddChar(0x8cc8);
    b->AddChar(0x8cfc);
    b->AddChar(0x8d73);
    b->AddChar(0x8d77);
    b->AddChar(0x8dcf);
    b->AddChar(0x8ddd);
    b->AddChar(0x8de8);
    b->AddChar(0x8e1e);
    b->AddChar(0x8e47);
    b->AddChar(0x8e76);
    b->AddChar(0x8eac);
    b->AddChar(0x8ec0);
    b->AddChar(0x8eca);
    b->AddChar(0x8ecc);
    b->AddChar(0x8ecd);
    b->AddChar(0x8efb);
    b->AddChar(0x8f03);
    b->AddChar(0x8f15);
    b->AddChar(0x8f4e);
    b->AddChar(0x8f5f);
    b->AddChar(0x8f9c);
    b->AddChar(0x8fd1);
    b->AddChar(0x8fe6);
    b->AddChar(0x8ff2);
    b->AddChar(0x9002);
    b->AddChar(0x9011);
    b->AddChar(0x9015);
    b->AddChar(0x9035);
    b->AddChar(0x904e);
    b->AddChar(0x9063);
    b->AddChar(0x907d);
    b->AddChar(0x908f);
    b->AddChar(0x90a3);
    b->AddChar(0x90af);
    b->AddChar(0x90b1);
    b->AddChar(0x90ca);
    b->AddChar(0x90ce);
    b->AddChar(0x90e1);
    b->AddChar(0x90ed);
    b->AddChar(0x916a);
    b->AddChar(0x91b5);
    b->AddChar(0x91d1);
    b->AddChar(0x9210);
    b->AddChar(0x921e);
    b->AddChar(0x9240);
    b->AddChar(0x9245);
    b->AddChar(0x9257);
    b->AddChar(0x9264);
    b->AddChar(0x92b6);
    b->AddChar(0x92f8);
    b->AddChar(0x92fc);
    b->AddChar(0x9321);
    b->AddChar(0x9324);
    b->AddChar(0x9326);
    b->AddChar(0x932e);
    b->AddChar(0x934b);
    b->AddChar(0x9375);
    b->AddChar(0x938c);
    b->AddChar(0x93a7);
    b->AddChar(0x93e1);
    b->AddChar(0x9451);
    b->AddChar(0x9452);
    b->AddChar(0x945b);
    b->AddChar(0x958b);
    b->AddChar(0x9593);
    b->AddChar(0x9598);
    b->AddChar(0x95a3);
    b->AddChar(0x95a8);
    b->AddChar(0x95d5);
    b->AddChar(0x95dc);
    b->AddChar(0x964d);
    b->AddChar(0x968e);
    b->AddChar(0x9694);
    b->AddChar(0x9699);
    b->AddChar(0x96c7);
    b->AddChar(0x96e3);
    b->AddChar(0x978f);
    b->AddChar(0x97a0);
    b->AddChar(0x97a8);
    b->AddChar(0x97ab);
    b->AddChar(0x9803);
    b->AddChar(0x9838);
    b->AddChar(0x9846);
    b->AddChar(0x9867);
    b->AddChar(0x98e2);
    b->AddChar(0x9903);
    b->AddChar(0x9928);
    b->AddChar(0x9949);
    b->AddChar(0x994b);
    b->AddChar(0x9951);
    b->AddChar(0x99d2);
    b->AddChar(0x99d5);
    b->AddChar(0x99f1);
    b->AddChar(0x9a0e);
    b->AddChar(0x9a0f);
    b->AddChar(0x9a2b);
    b->AddChar(0x9a45);
    b->AddChar(0x9a55);
    b->AddChar(0x9a5a);
    b->AddChar(0x9a65);
    b->AddChar(0x9aa8);
    b->AddChar(0x9ad8);
    b->AddChar(0x9b3c);
    b->AddChar(0x9b41);
    b->AddChar(0x9bab);
    b->AddChar(0x9be4);
    b->AddChar(0x9be8);
    b->AddChar(0x9c47);
    b->AddChar(0x9ce9);
    b->AddChar(0x9d51);
    b->AddChar(0x9d60);
    b->AddChar(0x9dc4);
    b->AddChar(0x9dd7);
    b->AddChar(0x9e1e);
    b->AddChar(0x9e92);
    b->AddChar(0x9eb4);
    b->AddChar(0x9ed4);
    b->AddChar(0x9f13);
    b->AddChar(0x9f95);
    b->AddChar(0x9f9c);
    for(int i = 0; i < 11172; ++i) {
        b->AddChar(0xac00 + i);
    }
    b->AddChar(0xff01);
    b->AddChar(0xff02);
    b->AddChar(0xff03);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0xff05 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xff0c + i);
    }
    b->AddChar(0xff1a);
    b->AddChar(0xff1b);
    b->AddChar(0xff1f);
    b->AddChar(0xff20);
    b->AddChar(0xff3b);
    b->AddChar(0xff3c);
    b->AddChar(0xff3d);
    b->AddChar(0xff3f);
    b->AddChar(0xff5b);
    b->AddChar(0xff5d);
}

static void AddGlyphRangesFromCLDRForNB(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x25);
    for(int i = 0; i < 21; ++i) {
        b->AddChar(0x27 + i);
    }
    for(int i = 0; i < 29; ++i) {
        b->AddChar(0x3f + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 27; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0x7d);
    b->AddChar(0xa0);
    b->AddChar(0xa7);
    b->AddChar(0xab);
    b->AddChar(0xbb);
    b->AddChar(0xc0);
    b->AddChar(0xc1);
    for(int i = 0; i < 8; ++i) {
        b->AddChar(0xc3 + i);
    }
    b->AddChar(0xcd);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xd1 + i);
    }
    b->AddChar(0xd6);
    b->AddChar(0xd8);
    b->AddChar(0xda);
    b->AddChar(0xdc);
    b->AddChar(0xe0);
    b->AddChar(0xe1);
    for(int i = 0; i < 8; ++i) {
        b->AddChar(0xe3 + i);
    }
    b->AddChar(0xed);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xf1 + i);
    }
    b->AddChar(0xf6);
    b->AddChar(0xf8);
    b->AddChar(0xfa);
    b->AddChar(0xfc);
    b->AddChar(0x10c);
    b->AddChar(0x10d);
    b->AddChar(0x110);
    b->AddChar(0x111);
    b->AddChar(0x143);
    b->AddChar(0x144);
    b->AddChar(0x14a);
    b->AddChar(0x14b);
    b->AddChar(0x160);
    b->AddChar(0x161);
    b->AddChar(0x166);
    b->AddChar(0x167);
    b->AddChar(0x17d);
    b->AddChar(0x17e);
    b->AddChar(0x1cd);
    b->AddChar(0x1ce);
    b->AddChar(0x2013);
    b->AddChar(0x2030);
    b->AddChar(0x2212);
}

static void AddGlyphRangesFromCLDRForNL(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    for(int i = 0; i < 23; ++i) {
        b->AddChar(0x25 + i);
    }
    for(int i = 0; i < 29; ++i) {
        b->AddChar(0x3f + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 26; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0xa7);
    for(int i = 0; i < 12; ++i) {
        b->AddChar(0xc0 + i);
    }
    b->AddChar(0xcd);
    b->AddChar(0xce);
    b->AddChar(0xcf);
    b->AddChar(0xd1);
    b->AddChar(0xd3);
    b->AddChar(0xd4);
    b->AddChar(0xd6);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xd8 + i);
    }
    for(int i = 0; i < 12; ++i) {
        b->AddChar(0xe0 + i);
    }
    b->AddChar(0xed);
    b->AddChar(0xee);
    b->AddChar(0xef);
    b->AddChar(0xf1);
    b->AddChar(0xf3);
    b->AddChar(0xf4);
    b->AddChar(0xf6);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xf8 + i);
    }
    b->AddChar(0xff);
    b->AddChar(0x152);
    b->AddChar(0x153);
    b->AddChar(0x178);
    b->AddChar(0x301);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2014);
    b->AddChar(0x2018);
    b->AddChar(0x2019);
    b->AddChar(0x201c);
    b->AddChar(0x201d);
    b->AddChar(0x2020);
    b->AddChar(0x2021);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
    b->AddChar(0x2032);
    b->AddChar(0x2033);
}

static void AddGlyphRangesFromCLDRForPL(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    for(int i = 0; i < 23; ++i) {
        b->AddChar(0x25 + i);
    }
    for(int i = 0; i < 29; ++i) {
        b->AddChar(0x3f + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 27; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0x7d);
    b->AddChar(0x7e);
    b->AddChar(0xa0);
    b->AddChar(0xa7);
    b->AddChar(0xab);
    b->AddChar(0xb0);
    b->AddChar(0xbb);
    b->AddChar(0xc0);
    b->AddChar(0xc2);
    for(int i = 0; i < 8; ++i) {
        b->AddChar(0xc4 + i);
    }
    b->AddChar(0xce);
    b->AddChar(0xcf);
    b->AddChar(0xd3);
    b->AddChar(0xd4);
    b->AddChar(0xd6);
    b->AddChar(0xd9);
    b->AddChar(0xdb);
    b->AddChar(0xdc);
    b->AddChar(0xdf);
    b->AddChar(0xe0);
    b->AddChar(0xe2);
    for(int i = 0; i < 8; ++i) {
        b->AddChar(0xe4 + i);
    }
    b->AddChar(0xee);
    b->AddChar(0xef);
    b->AddChar(0xf3);
    b->AddChar(0xf4);
    b->AddChar(0xf6);
    b->AddChar(0xf9);
    b->AddChar(0xfb);
    b->AddChar(0xfc);
    b->AddChar(0xff);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x104 + i);
    }
    b->AddChar(0x118);
    b->AddChar(0x119);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x141 + i);
    }
    b->AddChar(0x152);
    b->AddChar(0x153);
    b->AddChar(0x15a);
    b->AddChar(0x15b);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x178 + i);
    }
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2014);
    b->AddChar(0x201d);
    b->AddChar(0x201e);
    b->AddChar(0x2020);
    b->AddChar(0x2021);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
    b->AddChar(0x2032);
    b->AddChar(0x2033);
}

static void AddGlyphRangesFromCLDRForPT(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    for(int i = 0; i < 23; ++i) {
        b->AddChar(0x25 + i);
    }
    for(int i = 0; i < 29; ++i) {
        b->AddChar(0x3f + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 26; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0xa7);
    b->AddChar(0xaa);
    b->AddChar(0xba);
    for(int i = 0; i < 16; ++i) {
        b->AddChar(0xc0 + i);
    }
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0xd1 + i);
    }
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xd8 + i);
    }
    for(int i = 0; i < 16; ++i) {
        b->AddChar(0xe0 + i);
    }
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0xf1 + i);
    }
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xf8 + i);
    }
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xff + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x112 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x12a + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x14c + i);
    }
    b->AddChar(0x152);
    b->AddChar(0x153);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x16a + i);
    }
    b->AddChar(0x178);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2014);
    b->AddChar(0x2018);
    b->AddChar(0x2019);
    b->AddChar(0x201c);
    b->AddChar(0x201d);
    b->AddChar(0x2020);
    b->AddChar(0x2021);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
    b->AddChar(0x2032);
    b->AddChar(0x2033);
}

static void AddGlyphRangesFromCLDRForRU(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    for(int i = 0; i < 23; ++i) {
        b->AddChar(0x25 + i);
    }
    b->AddChar(0x3f);
    b->AddChar(0x40);
    b->AddChar(0x5b);
    b->AddChar(0x5d);
    b->AddChar(0x7b);
    b->AddChar(0x7d);
    b->AddChar(0xa0);
    b->AddChar(0xa7);
    b->AddChar(0xab);
    b->AddChar(0xbb);
    b->AddChar(0x301);
    b->AddChar(0x401);
    for(int i = 0; i < 64; ++i) {
        b->AddChar(0x410 + i);
    }
    b->AddChar(0x451);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2014);
    b->AddChar(0x2018);
    b->AddChar(0x201a);
    b->AddChar(0x201c);
    b->AddChar(0x201e);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
}

static void AddGlyphRangesFromCLDRForSR(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x23);
    b->AddChar(0x25);
    for(int i = 0; i < 7; ++i) {
        b->AddChar(0x28 + i);
    }
    for(int i = 0; i < 12; ++i) {
        b->AddChar(0x30 + i);
    }
    b->AddChar(0x3f);
    b->AddChar(0x5b);
    b->AddChar(0x5d);
    b->AddChar(0x7b);
    b->AddChar(0x7d);
    b->AddChar(0x401);
    b->AddChar(0x402);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x408 + i);
    }
    for(int i = 0; i < 65; ++i) {
        b->AddChar(0x40f + i);
    }
    b->AddChar(0x451);
    b->AddChar(0x452);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x458 + i);
    }
    b->AddChar(0x45f);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2018);
    b->AddChar(0x201a);
    b->AddChar(0x201c);
    b->AddChar(0x201e);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
}

static void AddGlyphRangesFromCLDRForTR(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    for(int i = 0; i < 23; ++i) {
        b->AddChar(0x25 + i);
    }
    for(int i = 0; i < 29; ++i) {
        b->AddChar(0x3f + i);
    }
    b->AddChar(0x5d);
    for(int i = 0; i < 26; ++i) {
        b->AddChar(0x61 + i);
    }
    b->AddChar(0xa7);
    for(int i = 0; i < 16; ++i) {
        b->AddChar(0xc0 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xd1 + i);
    }
    b->AddChar(0xd6);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xd8 + i);
    }
    for(int i = 0; i < 17; ++i) {
        b->AddChar(0xdf + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xf1 + i);
    }
    b->AddChar(0xf6);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xf8 + i);
    }
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0xff + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x112 + i);
    }
    b->AddChar(0x11e);
    b->AddChar(0x11f);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x12a + i);
    }
    b->AddChar(0x130);
    b->AddChar(0x131);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x14c + i);
    }
    b->AddChar(0x152);
    b->AddChar(0x153);
    b->AddChar(0x15e);
    b->AddChar(0x15f);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x16a + i);
    }
    b->AddChar(0x178);
    b->AddChar(0x2010);
    b->AddChar(0x2013);
    b->AddChar(0x2014);
    b->AddChar(0x2018);
    b->AddChar(0x2019);
    b->AddChar(0x201c);
    b->AddChar(0x201d);
    b->AddChar(0x2020);
    b->AddChar(0x2021);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
    b->AddChar(0x2032);
    b->AddChar(0x2033);
}

static void AddGlyphRangesFromCLDRForUK_UA(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x25);
    for(int i = 0; i < 21; ++i) {
        b->AddChar(0x27 + i);
    }
    b->AddChar(0x3f);
    b->AddChar(0x40);
    b->AddChar(0x5b);
    b->AddChar(0x5c);
    b->AddChar(0x5d);
    b->AddChar(0x7b);
    b->AddChar(0x7d);
    b->AddChar(0xa0);
    b->AddChar(0xa7);
    b->AddChar(0xab);
    b->AddChar(0xbb);
    b->AddChar(0x2bc);
    b->AddChar(0x301);
    b->AddChar(0x401);
    b->AddChar(0x404);
    b->AddChar(0x406);
    b->AddChar(0x407);
    for(int i = 0; i < 64; ++i) {
        b->AddChar(0x410 + i);
    }
    b->AddChar(0x451);
    b->AddChar(0x454);
    b->AddChar(0x456);
    b->AddChar(0x457);
    b->AddChar(0x490);
    b->AddChar(0x491);
    b->AddChar(0x2013);
    b->AddChar(0x2019);
    b->AddChar(0x201c);
    b->AddChar(0x201e);
    b->AddChar(0x2030);
    b->AddChar(0x2116);
}

static void AddGlyphRangesFromCLDRForZH_HANS(ImFontGlyphRangesBuilder *b) {{
    b->AddChar(0x21);
    b->AddChar(0x22);
    b->AddChar(0x23);
    b->AddChar(0x25);
    b->AddChar(0x26);
    for(int i = 0; i < 20; ++i) {
        b->AddChar(0x28 + i);
    }
    b->AddChar(0x3f);
    b->AddChar(0x40);
    b->AddChar(0x5b);
    b->AddChar(0x5c);
    b->AddChar(0x5d);
    b->AddChar(0x5f);
    b->AddChar(0x7b);
    b->AddChar(0x7d);
    b->AddChar(0xa7);
    b->AddChar(0xb7);
    b->AddChar(0x2010);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x2013 + i);
    }
    b->AddChar(0x2018);
    b->AddChar(0x2019);
    b->AddChar(0x201c);
    b->AddChar(0x201d);
    b->AddChar(0x2025);
    b->AddChar(0x2026);
    b->AddChar(0x2030);
    b->AddChar(0x2032);
    b->AddChar(0x2033);
    b->AddChar(0x2035);
    b->AddChar(0x203b);
    b->AddChar(0x3001);
    b->AddChar(0x3002);
    b->AddChar(0x3003);
    for(int i = 0; i < 11; ++i) {
        b->AddChar(0x3007 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x3014 + i);
    }
    b->AddChar(0x301d);
    b->AddChar(0x301e);
    b->AddChar(0x4e00);
    b->AddChar(0x4e01);
    b->AddChar(0x4e03);
    for(int i = 0; i < 8; ++i) {
        b->AddChar(0x4e07 + i);
    }
    b->AddChar(0x4e11);
    b->AddChar(0x4e13);
    b->AddChar(0x4e14);
    b->AddChar(0x4e16);
    b->AddChar(0x4e18);
    b->AddChar(0x4e19);
    b->AddChar(0x4e1a);
    b->AddChar(0x4e1c);
    b->AddChar(0x4e1d);
    b->AddChar(0x4e22);
    b->AddChar(0x4e24);
    b->AddChar(0x4e25);
    b->AddChar(0x4e27);
    b->AddChar(0x4e2a);
    b->AddChar(0x4e2d);
    b->AddChar(0x4e30);
    b->AddChar(0x4e32);
    b->AddChar(0x4e34);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x4e38 + i);
    }
    b->AddChar(0x4e3d);
    b->AddChar(0x4e3e);
    b->AddChar(0x4e43);
    b->AddChar(0x4e45);
    b->AddChar(0x4e48);
    b->AddChar(0x4e49);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0x4e4b + i);
    }
    b->AddChar(0x4e52);
    b->AddChar(0x4e53);
    b->AddChar(0x4e54);
    b->AddChar(0x4e56);
    b->AddChar(0x4e58);
    b->AddChar(0x4e59);
    b->AddChar(0x4e5d);
    b->AddChar(0x4e5f);
    b->AddChar(0x4e60);
    b->AddChar(0x4e61);
    b->AddChar(0x4e66);
    b->AddChar(0x4e70);
    b->AddChar(0x4e71);
    b->AddChar(0x4e7e);
    b->AddChar(0x4e86);
    b->AddChar(0x4e88);
    b->AddChar(0x4e89);
    b->AddChar(0x4e8b);
    b->AddChar(0x4e8c);
    b->AddChar(0x4e8e);
    b->AddChar(0x4e8f);
    b->AddChar(0x4e91);
    b->AddChar(0x4e92);
    b->AddChar(0x4e94);
    b->AddChar(0x4e95);
    b->AddChar(0x4e9a);
    b->AddChar(0x4e9b);
    b->AddChar(0x4ea1);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x4ea4 + i);
    }
    b->AddChar(0x4eab);
    b->AddChar(0x4eac);
    b->AddChar(0x4eae);
    b->AddChar(0x4eb2);
    b->AddChar(0x4eba);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x4ebf + i);
    }
    b->AddChar(0x4ec5);
    b->AddChar(0x4ec7);
    b->AddChar(0x4eca);
    b->AddChar(0x4ecb);
    b->AddChar(0x4ecd);
    b->AddChar(0x4ece);
    b->AddChar(0x4ed3);
    b->AddChar(0x4ed4);
    b->AddChar(0x4ed6);
    b->AddChar(0x4ed8);
    b->AddChar(0x4ed9);
    b->AddChar(0x4ee3);
    b->AddChar(0x4ee4);
    b->AddChar(0x4ee5);
    b->AddChar(0x4eea);
    b->AddChar(0x4eec);
    b->AddChar(0x4ef0);
    b->AddChar(0x4ef2);
    b->AddChar(0x4ef6);
    b->AddChar(0x4ef7);
    b->AddChar(0x4efb);
    b->AddChar(0x4efd);
    b->AddChar(0x4eff);
    b->AddChar(0x4f01);
    b->AddChar(0x4f0a);
    b->AddChar(0x4f0d);
    b->AddChar(0x4f0f);
    b->AddChar(0x4f10);
    b->AddChar(0x4f11);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x4f17 + i);
    }
    b->AddChar(0x4f1e);
    b->AddChar(0x4f1f);
    b->AddChar(0x4f20);
    b->AddChar(0x4f24);
    b->AddChar(0x4f26);
    b->AddChar(0x4f2f);
    b->AddChar(0x4f30);
    b->AddChar(0x4f34);
    b->AddChar(0x4f38);
    b->AddChar(0x4f3c);
    b->AddChar(0x4f3d);
    b->AddChar(0x4f46);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x4f4d + i);
    }
    b->AddChar(0x4f53);
    b->AddChar(0x4f55);
    b->AddChar(0x4f59);
    b->AddChar(0x4f5b);
    b->AddChar(0x4f5c);
    b->AddChar(0x4f60);
    b->AddChar(0x4f64);
    b->AddChar(0x4f69);
    b->AddChar(0x4f73);
    b->AddChar(0x4f7f);
    b->AddChar(0x4f8b);
    b->AddChar(0x4f9b);
    b->AddChar(0x4f9d);
    b->AddChar(0x4fa0);
    b->AddChar(0x4fa3);
    b->AddChar(0x4fa6);
    b->AddChar(0x4fa7);
    b->AddChar(0x4fa8);
    b->AddChar(0x4fac);
    b->AddChar(0x4faf);
    b->AddChar(0x4fb5);
    b->AddChar(0x4fbf);
    b->AddChar(0x4fc3);
    b->AddChar(0x4fc4);
    b->AddChar(0x4fca);
    b->AddChar(0x4fd7);
    b->AddChar(0x4fdd);
    b->AddChar(0x4fe1);
    b->AddChar(0x4fe9);
    b->AddChar(0x4fee);
    b->AddChar(0x4ff1);
    b->AddChar(0x4ffe);
    b->AddChar(0x500d);
    b->AddChar(0x5012);
    b->AddChar(0x5019);
    b->AddChar(0x501a);
    b->AddChar(0x501f);
    b->AddChar(0x5026);
    b->AddChar(0x503c);
    b->AddChar(0x503e);
    b->AddChar(0x5047);
    b->AddChar(0x504c);
    b->AddChar(0x504f);
    b->AddChar(0x505a);
    b->AddChar(0x505c);
    b->AddChar(0x5065);
    b->AddChar(0x5076);
    b->AddChar(0x5077);
    b->AddChar(0x5088);
    b->AddChar(0x50a3);
    b->AddChar(0x50a8);
    b->AddChar(0x50ac);
    b->AddChar(0x50b2);
    b->AddChar(0x50bb);
    b->AddChar(0x50cf);
    b->AddChar(0x50e7);
    b->AddChar(0x50f3);
    b->AddChar(0x5112);
    b->AddChar(0x513f);
    b->AddChar(0x5141);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x5143 + i);
    }
    b->AddChar(0x5148);
    b->AddChar(0x5149);
    b->AddChar(0x514b);
    b->AddChar(0x514d);
    b->AddChar(0x5151);
    b->AddChar(0x5154);
    b->AddChar(0x515a);
    b->AddChar(0x5165);
    b->AddChar(0x5168);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x516b + i);
    }
    b->AddChar(0x5170);
    b->AddChar(0x5171);
    for(int i = 0; i < 7; ++i) {
        b->AddChar(0x5173 + i);
    }
    b->AddChar(0x517b);
    b->AddChar(0x517c);
    b->AddChar(0x517d);
    b->AddChar(0x5185);
    b->AddChar(0x5188);
    b->AddChar(0x518c);
    b->AddChar(0x518d);
    b->AddChar(0x5192);
    b->AddChar(0x5199);
    b->AddChar(0x519b);
    b->AddChar(0x519c);
    b->AddChar(0x51a0);
    b->AddChar(0x51a5);
    b->AddChar(0x51ac);
    b->AddChar(0x51b0);
    b->AddChar(0x51b2);
    b->AddChar(0x51b3);
    b->AddChar(0x51b5);
    b->AddChar(0x51b7);
    b->AddChar(0x51c6);
    b->AddChar(0x51c9);
    b->AddChar(0x51cc);
    b->AddChar(0x51cf);
    b->AddChar(0x51dd);
    b->AddChar(0x51e0);
    b->AddChar(0x51e1);
    b->AddChar(0x51e4);
    b->AddChar(0x51ed);
    b->AddChar(0x51ef);
    b->AddChar(0x51f0);
    b->AddChar(0x51fa);
    b->AddChar(0x51fb);
    b->AddChar(0x51fd);
    b->AddChar(0x5200);
    b->AddChar(0x5206);
    b->AddChar(0x5207);
    b->AddChar(0x520a);
    b->AddChar(0x5211);
    b->AddChar(0x5212);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x5217 + i);
    }
    b->AddChar(0x521d);
    b->AddChar(0x5224);
    b->AddChar(0x5228);
    b->AddChar(0x5229);
    b->AddChar(0x522b);
    b->AddChar(0x5230);
    b->AddChar(0x5236);
    b->AddChar(0x5237);
    b->AddChar(0x5238);
    b->AddChar(0x523a);
    b->AddChar(0x523b);
    b->AddChar(0x5242);
    b->AddChar(0x524d);
    b->AddChar(0x5251);
    b->AddChar(0x5267);
    b->AddChar(0x5269);
    b->AddChar(0x526a);
    b->AddChar(0x526f);
    b->AddChar(0x5272);
    b->AddChar(0x529b);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x529d + i);
    }
    b->AddChar(0x52a3);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x52a8 + i);
    }
    b->AddChar(0x52b1);
    b->AddChar(0x52b2);
    b->AddChar(0x52b3);
    b->AddChar(0x52bf);
    b->AddChar(0x52c7);
    b->AddChar(0x52c9);
    b->AddChar(0x52cb);
    b->AddChar(0x52d2);
    b->AddChar(0x52e4);
    b->AddChar(0x52fe);
    b->AddChar(0x52ff);
    b->AddChar(0x5305);
    b->AddChar(0x5306);
    b->AddChar(0x5308);
    b->AddChar(0x5315);
    b->AddChar(0x5316);
    b->AddChar(0x5317);
    b->AddChar(0x5319);
    b->AddChar(0x5339);
    b->AddChar(0x533a);
    b->AddChar(0x533b);
    b->AddChar(0x5341);
    b->AddChar(0x5343);
    b->AddChar(0x5347);
    b->AddChar(0x5348);
    b->AddChar(0x534a);
    b->AddChar(0x534e);
    b->AddChar(0x534f);
    b->AddChar(0x5351);
    b->AddChar(0x5352);
    b->AddChar(0x5353);
    b->AddChar(0x5355);
    b->AddChar(0x5356);
    b->AddChar(0x5357);
    b->AddChar(0x535a);
    b->AddChar(0x535e);
    b->AddChar(0x5360);
    b->AddChar(0x5361);
    b->AddChar(0x5362);
    b->AddChar(0x536b);
    b->AddChar(0x536f);
    b->AddChar(0x5370);
    b->AddChar(0x5371);
    b->AddChar(0x5373);
    b->AddChar(0x5374);
    b->AddChar(0x5377);
    b->AddChar(0x5382);
    b->AddChar(0x5384);
    b->AddChar(0x5385);
    b->AddChar(0x5386);
    b->AddChar(0x5389);
    b->AddChar(0x538b);
    b->AddChar(0x538c);
    b->AddChar(0x538d);
    b->AddChar(0x5398);
    b->AddChar(0x539a);
    b->AddChar(0x539f);
    b->AddChar(0x53a6);
    b->AddChar(0x53a8);
    b->AddChar(0x53bb);
    b->AddChar(0x53bf);
    b->AddChar(0x53c2);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0x53c8 + i);
    }
    b->AddChar(0x53d1);
    b->AddChar(0x53d4);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x53d6 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x53e3 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x53ea + i);
    }
    b->AddChar(0x53ef);
    b->AddChar(0x53f0);
    b->AddChar(0x53f2);
    b->AddChar(0x53f3);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x53f6 + i);
    }
    b->AddChar(0x5403);
    b->AddChar(0x5404);
    b->AddChar(0x5408);
    b->AddChar(0x5409);
    b->AddChar(0x540a);
    b->AddChar(0x540c);
    b->AddChar(0x540d);
    b->AddChar(0x540e);
    b->AddChar(0x5410);
    b->AddChar(0x5411);
    b->AddChar(0x5413);
    b->AddChar(0x5415);
    b->AddChar(0x5417);
    b->AddChar(0x541b);
    b->AddChar(0x541d);
    b->AddChar(0x541f);
    b->AddChar(0x5426);
    b->AddChar(0x5427);
    b->AddChar(0x542b);
    b->AddChar(0x542c);
    b->AddChar(0x542f);
    b->AddChar(0x5435);
    b->AddChar(0x5438);
    b->AddChar(0x5439);
    b->AddChar(0x543b);
    b->AddChar(0x543e);
    b->AddChar(0x5440);
    b->AddChar(0x5446);
    b->AddChar(0x5448);
    b->AddChar(0x544a);
    b->AddChar(0x5450);
    b->AddChar(0x5458);
    b->AddChar(0x545c);
    b->AddChar(0x5462);
    b->AddChar(0x5463);
    b->AddChar(0x5466);
    b->AddChar(0x5468);
    b->AddChar(0x5473);
    b->AddChar(0x5475);
    b->AddChar(0x547c);
    b->AddChar(0x547d);
    b->AddChar(0x548c);
    b->AddChar(0x5496);
    b->AddChar(0x54a6);
    b->AddChar(0x54a7);
    b->AddChar(0x54a8);
    b->AddChar(0x54aa);
    b->AddChar(0x54ac);
    b->AddChar(0x54af);
    b->AddChar(0x54b1);
    b->AddChar(0x54c0);
    b->AddChar(0x54c1);
    b->AddChar(0x54c7);
    b->AddChar(0x54c8);
    b->AddChar(0x54c9);
    b->AddChar(0x54cd);
    b->AddChar(0x54ce);
    b->AddChar(0x54df);
    b->AddChar(0x54e5);
    b->AddChar(0x54e6);
    b->AddChar(0x54e9);
    b->AddChar(0x54ea);
    b->AddChar(0x54ed);
    b->AddChar(0x54f2);
    b->AddChar(0x5507);
    b->AddChar(0x5509);
    b->AddChar(0x5510);
    b->AddChar(0x5524);
    b->AddChar(0x552c);
    b->AddChar(0x552e);
    b->AddChar(0x552f);
    b->AddChar(0x5531);
    b->AddChar(0x5537);
    b->AddChar(0x5546);
    b->AddChar(0x554a);
    b->AddChar(0x5561);
    b->AddChar(0x5564);
    b->AddChar(0x5565);
    b->AddChar(0x5566);
    b->AddChar(0x556a);
    b->AddChar(0x556e);
    b->AddChar(0x5580);
    b->AddChar(0x5582);
    b->AddChar(0x5584);
    b->AddChar(0x5587);
    b->AddChar(0x558a);
    b->AddChar(0x558f);
    b->AddChar(0x5594);
    b->AddChar(0x559c);
    b->AddChar(0x559d);
    b->AddChar(0x55b1);
    b->AddChar(0x55b5);
    b->AddChar(0x55b7);
    b->AddChar(0x55bb);
    b->AddChar(0x55c5);
    b->AddChar(0x55d2);
    b->AddChar(0x55e8);
    b->AddChar(0x55ef);
    b->AddChar(0x5609);
    b->AddChar(0x561b);
    b->AddChar(0x5634);
    b->AddChar(0x563b);
    b->AddChar(0x563f);
    b->AddChar(0x5658);
    b->AddChar(0x5662);
    b->AddChar(0x5668);
    b->AddChar(0x56db);
    b->AddChar(0x56de);
    b->AddChar(0x56e0);
    b->AddChar(0x56e2);
    b->AddChar(0x56ed);
    b->AddChar(0x56f0);
    b->AddChar(0x56f4);
    b->AddChar(0x56fa);
    b->AddChar(0x56fd);
    b->AddChar(0x56fe);
    b->AddChar(0x5706);
    b->AddChar(0x5708);
    b->AddChar(0x571f);
    b->AddChar(0x5723);
    b->AddChar(0x5728);
    b->AddChar(0x572d);
    b->AddChar(0x5730);
    b->AddChar(0x5733);
    b->AddChar(0x573a);
    b->AddChar(0x573e);
    b->AddChar(0x5740);
    b->AddChar(0x5747);
    b->AddChar(0x574e);
    b->AddChar(0x5750);
    b->AddChar(0x5751);
    b->AddChar(0x5757);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x575a + i);
    }
    b->AddChar(0x5761);
    b->AddChar(0x5764);
    b->AddChar(0x5766);
    b->AddChar(0x576a);
    b->AddChar(0x5782);
    b->AddChar(0x5783);
    b->AddChar(0x578b);
    b->AddChar(0x5792);
    b->AddChar(0x57c3);
    b->AddChar(0x57cb);
    b->AddChar(0x57ce);
    b->AddChar(0x57d4);
    b->AddChar(0x57df);
    b->AddChar(0x57f9);
    b->AddChar(0x57fa);
    b->AddChar(0x5802);
    b->AddChar(0x5806);
    b->AddChar(0x5815);
    b->AddChar(0x5821);
    b->AddChar(0x5824);
    b->AddChar(0x582a);
    b->AddChar(0x5851);
    b->AddChar(0x5854);
    b->AddChar(0x585e);
    b->AddChar(0x586b);
    b->AddChar(0x5883);
    b->AddChar(0x589e);
    b->AddChar(0x589f);
    b->AddChar(0x58a8);
    b->AddChar(0x58c1);
    b->AddChar(0x58e4);
    b->AddChar(0x58eb);
    b->AddChar(0x58ec);
    b->AddChar(0x58ee);
    b->AddChar(0x58f0);
    b->AddChar(0x5904);
    b->AddChar(0x5907);
    b->AddChar(0x590d);
    b->AddChar(0x590f);
    b->AddChar(0x5915);
    b->AddChar(0x5916);
    b->AddChar(0x591a);
    b->AddChar(0x591c);
    b->AddChar(0x591f);
    b->AddChar(0x5925);
    b->AddChar(0x5927);
    b->AddChar(0x5929);
    b->AddChar(0x592a);
    b->AddChar(0x592b);
    b->AddChar(0x592e);
    b->AddChar(0x5931);
    b->AddChar(0x5934);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x5937 + i);
    }
    b->AddChar(0x5947);
    b->AddChar(0x5948);
    b->AddChar(0x5949);
    b->AddChar(0x594b);
    b->AddChar(0x594e);
    b->AddChar(0x594f);
    b->AddChar(0x5951);
    b->AddChar(0x5954);
    b->AddChar(0x5956);
    b->AddChar(0x5957);
    b->AddChar(0x5965);
    b->AddChar(0x5973);
    b->AddChar(0x5974);
    b->AddChar(0x5976);
    b->AddChar(0x5979);
    b->AddChar(0x597d);
    b->AddChar(0x5982);
    b->AddChar(0x5986);
    b->AddChar(0x5987);
    b->AddChar(0x5988);
    b->AddChar(0x5996);
    b->AddChar(0x5999);
    b->AddChar(0x59a5);
    b->AddChar(0x59a8);
    b->AddChar(0x59ae);
    b->AddChar(0x59b9);
    b->AddChar(0x59bb);
    b->AddChar(0x59c6);
    b->AddChar(0x59ca);
    b->AddChar(0x59cb);
    b->AddChar(0x59d0);
    b->AddChar(0x59d1);
    b->AddChar(0x59d3);
    b->AddChar(0x59d4);
    b->AddChar(0x59ff);
    b->AddChar(0x5a01);
    b->AddChar(0x5a03);
    b->AddChar(0x5a04);
    b->AddChar(0x5a18);
    b->AddChar(0x5a1c);
    b->AddChar(0x5a1f);
    b->AddChar(0x5a31);
    b->AddChar(0x5a46);
    b->AddChar(0x5a5a);
    b->AddChar(0x5a74);
    b->AddChar(0x5a92);
    b->AddChar(0x5a9a);
    b->AddChar(0x5ac1);
    b->AddChar(0x5acc);
    b->AddChar(0x5ae9);
    b->AddChar(0x5b50);
    b->AddChar(0x5b54);
    b->AddChar(0x5b55);
    b->AddChar(0x5b57);
    b->AddChar(0x5b58);
    b->AddChar(0x5b59);
    b->AddChar(0x5b5c);
    b->AddChar(0x5b5d);
    b->AddChar(0x5b5f);
    b->AddChar(0x5b63);
    b->AddChar(0x5b64);
    b->AddChar(0x5b66);
    b->AddChar(0x5b69);
    b->AddChar(0x5b81);
    b->AddChar(0x5b83);
    b->AddChar(0x5b85);
    b->AddChar(0x5b87);
    b->AddChar(0x5b88);
    b->AddChar(0x5b89);
    b->AddChar(0x5b8b);
    b->AddChar(0x5b8c);
    b->AddChar(0x5b8f);
    for(int i = 0; i < 8; ++i) {
        b->AddChar(0x5b97 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x5ba1 + i);
    }
    b->AddChar(0x5baa);
    b->AddChar(0x5bb3);
    b->AddChar(0x5bb4);
    b->AddChar(0x5bb6);
    b->AddChar(0x5bb9);
    b->AddChar(0x5bbd);
    b->AddChar(0x5bbe);
    b->AddChar(0x5bbf);
    b->AddChar(0x5bc2);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x5bc4 + i);
    }
    b->AddChar(0x5bcc);
    b->AddChar(0x5bd2);
    b->AddChar(0x5bdd);
    b->AddChar(0x5bde);
    b->AddChar(0x5bdf);
    b->AddChar(0x5be1);
    b->AddChar(0x5be8);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x5bf8 + i);
    }
    b->AddChar(0x5bff);
    b->AddChar(0x5c01);
    b->AddChar(0x5c04);
    b->AddChar(0x5c06);
    b->AddChar(0x5c0a);
    b->AddChar(0x5c0f);
    b->AddChar(0x5c11);
    b->AddChar(0x5c14);
    b->AddChar(0x5c16);
    b->AddChar(0x5c18);
    b->AddChar(0x5c1a);
    b->AddChar(0x5c1d);
    b->AddChar(0x5c24);
    b->AddChar(0x5c2c);
    b->AddChar(0x5c31);
    b->AddChar(0x5c34);
    b->AddChar(0x5c3a);
    b->AddChar(0x5c3c);
    b->AddChar(0x5c3d);
    b->AddChar(0x5c3e);
    b->AddChar(0x5c40);
    b->AddChar(0x5c41);
    b->AddChar(0x5c42);
    b->AddChar(0x5c45);
    b->AddChar(0x5c4b);
    b->AddChar(0x5c4f);
    b->AddChar(0x5c51);
    b->AddChar(0x5c55);
    b->AddChar(0x5c5e);
    b->AddChar(0x5c60);
    b->AddChar(0x5c71);
    b->AddChar(0x5c7f);
    b->AddChar(0x5c81);
    b->AddChar(0x5c82);
    b->AddChar(0x5c97);
    b->AddChar(0x5c98);
    b->AddChar(0x5c9a);
    b->AddChar(0x5c9b);
    b->AddChar(0x5cb3);
    b->AddChar(0x5cb8);
    b->AddChar(0x5ce1);
    b->AddChar(0x5cf0);
    b->AddChar(0x5d07);
    b->AddChar(0x5d29);
    b->AddChar(0x5d34);
    b->AddChar(0x5ddd);
    b->AddChar(0x5dde);
    b->AddChar(0x5de1);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x5de5 + i);
    }
    b->AddChar(0x5deb);
    b->AddChar(0x5dee);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x5df1 + i);
    }
    b->AddChar(0x5df7);
    b->AddChar(0x5dfd);
    b->AddChar(0x5dfe);
    b->AddChar(0x5e01);
    b->AddChar(0x5e02);
    b->AddChar(0x5e03);
    b->AddChar(0x5e05);
    b->AddChar(0x5e08);
    b->AddChar(0x5e0c);
    b->AddChar(0x5e10);
    b->AddChar(0x5e15);
    b->AddChar(0x5e16);
    b->AddChar(0x5e1d);
    b->AddChar(0x5e26);
    b->AddChar(0x5e2d);
    b->AddChar(0x5e2e);
    b->AddChar(0x5e38);
    b->AddChar(0x5e3d);
    b->AddChar(0x5e45);
    b->AddChar(0x5e55);
    b->AddChar(0x5e72);
    b->AddChar(0x5e73);
    b->AddChar(0x5e74);
    b->AddChar(0x5e76);
    b->AddChar(0x5e78);
    b->AddChar(0x5e7b);
    b->AddChar(0x5e7c);
    b->AddChar(0x5e7d);
    b->AddChar(0x5e7f);
    b->AddChar(0x5e86);
    b->AddChar(0x5e8a);
    b->AddChar(0x5e8f);
    b->AddChar(0x5e93);
    b->AddChar(0x5e94);
    b->AddChar(0x5e95);
    b->AddChar(0x5e97);
    b->AddChar(0x5e99);
    b->AddChar(0x5e9a);
    b->AddChar(0x5e9c);
    b->AddChar(0x5e9e);
    b->AddChar(0x5e9f);
    b->AddChar(0x5ea6);
    b->AddChar(0x5ea7);
    b->AddChar(0x5ead);
    b->AddChar(0x5eb7);
    b->AddChar(0x5eb8);
    b->AddChar(0x5ec9);
    b->AddChar(0x5ed6);
    b->AddChar(0x5ef6);
    b->AddChar(0x5ef7);
    b->AddChar(0x5efa);
    b->AddChar(0x5f00);
    b->AddChar(0x5f02);
    b->AddChar(0x5f03);
    b->AddChar(0x5f04);
    b->AddChar(0x5f0a);
    b->AddChar(0x5f0f);
    b->AddChar(0x5f13);
    b->AddChar(0x5f15);
    b->AddChar(0x5f17);
    b->AddChar(0x5f18);
    b->AddChar(0x5f1f);
    b->AddChar(0x5f20);
    b->AddChar(0x5f25);
    b->AddChar(0x5f26);
    b->AddChar(0x5f2f);
    b->AddChar(0x5f31);
    b->AddChar(0x5f39);
    b->AddChar(0x5f3a);
    b->AddChar(0x5f52);
    b->AddChar(0x5f53);
    b->AddChar(0x5f55);
    b->AddChar(0x5f57);
    b->AddChar(0x5f5d);
    b->AddChar(0x5f62);
    b->AddChar(0x5f69);
    b->AddChar(0x5f6c);
    b->AddChar(0x5f6d);
    b->AddChar(0x5f70);
    b->AddChar(0x5f71);
    b->AddChar(0x5f77);
    b->AddChar(0x5f79);
    b->AddChar(0x5f7b);
    b->AddChar(0x5f7c);
    b->AddChar(0x5f80);
    b->AddChar(0x5f81);
    b->AddChar(0x5f84);
    b->AddChar(0x5f85);
    b->AddChar(0x5f88);
    b->AddChar(0x5f8b);
    b->AddChar(0x5f8c);
    b->AddChar(0x5f90);
    b->AddChar(0x5f92);
    b->AddChar(0x5f97);
    b->AddChar(0x5faa);
    b->AddChar(0x5fae);
    b->AddChar(0x5fb5);
    b->AddChar(0x5fb7);
    b->AddChar(0x5fc3);
    b->AddChar(0x5fc5);
    b->AddChar(0x5fc6);
    b->AddChar(0x5fcc);
    b->AddChar(0x5fcd);
    b->AddChar(0x5fd7);
    b->AddChar(0x5fd8);
    b->AddChar(0x5fd9);
    b->AddChar(0x5fe0);
    b->AddChar(0x5fe7);
    b->AddChar(0x5feb);
    b->AddChar(0x5ff5);
    b->AddChar(0x5ffd);
    b->AddChar(0x6000);
    b->AddChar(0x6001);
    b->AddChar(0x600e);
    b->AddChar(0x6012);
    b->AddChar(0x6015);
    b->AddChar(0x6016);
    b->AddChar(0x601d);
    b->AddChar(0x6021);
    b->AddChar(0x6025);
    b->AddChar(0x6027);
    b->AddChar(0x6028);
    b->AddChar(0x602a);
    b->AddChar(0x603b);
    b->AddChar(0x604b);
    b->AddChar(0x6050);
    b->AddChar(0x6062);
    b->AddChar(0x6068);
    b->AddChar(0x6069);
    b->AddChar(0x606d);
    b->AddChar(0x606f);
    b->AddChar(0x6070);
    b->AddChar(0x6076);
    b->AddChar(0x607c);
    b->AddChar(0x6084);
    b->AddChar(0x6089);
    b->AddChar(0x6094);
    b->AddChar(0x609f);
    b->AddChar(0x60a0);
    b->AddChar(0x60a3);
    b->AddChar(0x60a8);
    b->AddChar(0x60b2);
    b->AddChar(0x60c5);
    b->AddChar(0x60ca);
    b->AddChar(0x60d1);
    b->AddChar(0x60dc);
    b->AddChar(0x60e0);
    b->AddChar(0x60e7);
    b->AddChar(0x60e8);
    b->AddChar(0x60ef);
    b->AddChar(0x60f3);
    b->AddChar(0x60f9);
    b->AddChar(0x6101);
    b->AddChar(0x6108);
    b->AddChar(0x6109);
    b->AddChar(0x610f);
    b->AddChar(0x611a);
    b->AddChar(0x611f);
    b->AddChar(0x6127);
    b->AddChar(0x6148);
    b->AddChar(0x614e);
    b->AddChar(0x6155);
    b->AddChar(0x6162);
    b->AddChar(0x6167);
    b->AddChar(0x6170);
    b->AddChar(0x61be);
    b->AddChar(0x61c2);
    b->AddChar(0x61d2);
    b->AddChar(0x6208);
    b->AddChar(0x620a);
    b->AddChar(0x620c);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x620f + i);
    }
    b->AddChar(0x6216);
    b->AddChar(0x6218);
    b->AddChar(0x621f);
    b->AddChar(0x622a);
    b->AddChar(0x6234);
    b->AddChar(0x6237);
    b->AddChar(0x623f);
    b->AddChar(0x6240);
    b->AddChar(0x6241);
    b->AddChar(0x6247);
    b->AddChar(0x624b);
    b->AddChar(0x624d);
    b->AddChar(0x624e);
    b->AddChar(0x6251);
    b->AddChar(0x6253);
    b->AddChar(0x6254);
    b->AddChar(0x6258);
    b->AddChar(0x6263);
    b->AddChar(0x6267);
    b->AddChar(0x6269);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0x626b + i);
    }
    b->AddChar(0x6273);
    b->AddChar(0x6279);
    b->AddChar(0x627e);
    b->AddChar(0x627f);
    b->AddChar(0x6280);
    b->AddChar(0x6284);
    b->AddChar(0x628a);
    b->AddChar(0x6291);
    b->AddChar(0x6293);
    b->AddChar(0x6295);
    b->AddChar(0x6297);
    b->AddChar(0x6298);
    b->AddChar(0x629b);
    b->AddChar(0x62a2);
    b->AddChar(0x62a4);
    b->AddChar(0x62a5);
    b->AddChar(0x62ab);
    b->AddChar(0x62ac);
    b->AddChar(0x62b1);
    b->AddChar(0x62b5);
    b->AddChar(0x62b9);
    b->AddChar(0x62bd);
    b->AddChar(0x62c5);
    b->AddChar(0x62c6);
    b->AddChar(0x62c9);
    b->AddChar(0x62cd);
    b->AddChar(0x62d2);
    b->AddChar(0x62d4);
    b->AddChar(0x62d6);
    b->AddChar(0x62d8);
    b->AddChar(0x62db);
    b->AddChar(0x62dc);
    b->AddChar(0x62df);
    b->AddChar(0x62e5);
    b->AddChar(0x62e6);
    b->AddChar(0x62e8);
    b->AddChar(0x62e9);
    b->AddChar(0x62ec);
    b->AddChar(0x62f3);
    b->AddChar(0x62f7);
    b->AddChar(0x62fc);
    b->AddChar(0x62fe);
    b->AddChar(0x62ff);
    b->AddChar(0x6301);
    b->AddChar(0x6302);
    b->AddChar(0x6307);
    b->AddChar(0x6309);
    b->AddChar(0x6311);
    b->AddChar(0x6316);
    b->AddChar(0x631d);
    b->AddChar(0x6321);
    b->AddChar(0x6324);
    b->AddChar(0x6325);
    b->AddChar(0x632a);
    b->AddChar(0x632f);
    b->AddChar(0x633a);
    b->AddChar(0x6342);
    b->AddChar(0x6349);
    b->AddChar(0x6350);
    b->AddChar(0x6355);
    b->AddChar(0x635f);
    b->AddChar(0x6361);
    b->AddChar(0x6362);
    b->AddChar(0x636e);
    b->AddChar(0x6377);
    b->AddChar(0x6388);
    b->AddChar(0x6389);
    b->AddChar(0x638c);
    b->AddChar(0x6392);
    b->AddChar(0x63a2);
    b->AddChar(0x63a5);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x63a7 + i);
    }
    b->AddChar(0x63b8);
    b->AddChar(0x63cf);
    b->AddChar(0x63d0);
    b->AddChar(0x63d2);
    b->AddChar(0x63e1);
    b->AddChar(0x63f4);
    b->AddChar(0x641c);
    b->AddChar(0x641e);
    b->AddChar(0x642c);
    b->AddChar(0x642d);
    b->AddChar(0x6444);
    b->AddChar(0x6446);
    b->AddChar(0x6447);
    b->AddChar(0x644a);
    b->AddChar(0x6454);
    b->AddChar(0x6458);
    b->AddChar(0x6469);
    b->AddChar(0x6478);
    b->AddChar(0x6485);
    b->AddChar(0x6492);
    b->AddChar(0x649e);
    b->AddChar(0x64a4);
    b->AddChar(0x64ad);
    b->AddChar(0x64cd);
    b->AddChar(0x64ce);
    b->AddChar(0x64e6);
    b->AddChar(0x652f);
    b->AddChar(0x6536);
    b->AddChar(0x6539);
    b->AddChar(0x653b);
    b->AddChar(0x653e);
    b->AddChar(0x653f);
    b->AddChar(0x6545);
    b->AddChar(0x6548);
    b->AddChar(0x654c);
    b->AddChar(0x654f);
    b->AddChar(0x6551);
    b->AddChar(0x6559);
    b->AddChar(0x655d);
    b->AddChar(0x6562);
    b->AddChar(0x6563);
    b->AddChar(0x6566);
    b->AddChar(0x656c);
    b->AddChar(0x6570);
    b->AddChar(0x6572);
    b->AddChar(0x6574);
    b->AddChar(0x6587);
    b->AddChar(0x658b);
    b->AddChar(0x6590);
    b->AddChar(0x6597);
    b->AddChar(0x6599);
    b->AddChar(0x659c);
    b->AddChar(0x65a5);
    b->AddChar(0x65ad);
    b->AddChar(0x65af);
    b->AddChar(0x65b0);
    b->AddChar(0x65b9);
    b->AddChar(0x65bc);
    b->AddChar(0x65bd);
    b->AddChar(0x65c1);
    b->AddChar(0x65c5);
    b->AddChar(0x65cb);
    b->AddChar(0x65cf);
    b->AddChar(0x65d7);
    b->AddChar(0x65e0);
    b->AddChar(0x65e2);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x65e5 + i);
    }
    b->AddChar(0x65ed);
    b->AddChar(0x65f6);
    b->AddChar(0x65fa);
    b->AddChar(0x6602);
    b->AddChar(0x6606);
    b->AddChar(0x660c);
    b->AddChar(0x660e);
    b->AddChar(0x660f);
    b->AddChar(0x6613);
    b->AddChar(0x661f);
    b->AddChar(0x6620);
    b->AddChar(0x6625);
    b->AddChar(0x6628);
    b->AddChar(0x662d);
    b->AddChar(0x662f);
    b->AddChar(0x663e);
    b->AddChar(0x6643);
    b->AddChar(0x664b);
    b->AddChar(0x6652);
    b->AddChar(0x6653);
    b->AddChar(0x665a);
    b->AddChar(0x6668);
    b->AddChar(0x666e);
    b->AddChar(0x666f);
    b->AddChar(0x6674);
    b->AddChar(0x6676);
    b->AddChar(0x667a);
    b->AddChar(0x6682);
    b->AddChar(0x6691);
    b->AddChar(0x6696);
    b->AddChar(0x6697);
    b->AddChar(0x66ae);
    b->AddChar(0x66b4);
    b->AddChar(0x66f0);
    b->AddChar(0x66f2);
    b->AddChar(0x66f4);
    b->AddChar(0x66f9);
    b->AddChar(0x66fc);
    b->AddChar(0x66fe);
    b->AddChar(0x66ff);
    b->AddChar(0x6700);
    b->AddChar(0x6708);
    b->AddChar(0x6709);
    b->AddChar(0x670b);
    b->AddChar(0x670d);
    b->AddChar(0x6717);
    b->AddChar(0x671b);
    b->AddChar(0x671d);
    b->AddChar(0x671f);
    b->AddChar(0x6728);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x672a + i);
    }
    b->AddChar(0x672f);
    b->AddChar(0x6731);
    b->AddChar(0x6735);
    b->AddChar(0x673a);
    b->AddChar(0x6740);
    b->AddChar(0x6742);
    b->AddChar(0x6743);
    b->AddChar(0x6746);
    b->AddChar(0x6749);
    b->AddChar(0x674e);
    b->AddChar(0x6750);
    b->AddChar(0x6751);
    b->AddChar(0x6756);
    b->AddChar(0x675c);
    b->AddChar(0x675f);
    b->AddChar(0x6761);
    b->AddChar(0x6765);
    b->AddChar(0x6768);
    b->AddChar(0x676f);
    b->AddChar(0x6770);
    b->AddChar(0x677e);
    b->AddChar(0x677f);
    b->AddChar(0x6781);
    b->AddChar(0x6784);
    b->AddChar(0x6790);
    b->AddChar(0x6797);
    b->AddChar(0x679c);
    b->AddChar(0x679d);
    b->AddChar(0x67a2);
    b->AddChar(0x67aa);
    b->AddChar(0x67ab);
    b->AddChar(0x67b6);
    b->AddChar(0x67cf);
    b->AddChar(0x67d0);
    b->AddChar(0x67d3);
    b->AddChar(0x67d4);
    b->AddChar(0x67dc);
    b->AddChar(0x67e5);
    b->AddChar(0x67ec);
    b->AddChar(0x67ef);
    b->AddChar(0x67f1);
    b->AddChar(0x67f3);
    b->AddChar(0x67f4);
    b->AddChar(0x6807);
    b->AddChar(0x680b);
    b->AddChar(0x680f);
    b->AddChar(0x6811);
    b->AddChar(0x6817);
    b->AddChar(0x6821);
    b->AddChar(0x6837);
    b->AddChar(0x6838);
    b->AddChar(0x6839);
    b->AddChar(0x683c);
    b->AddChar(0x683d);
    b->AddChar(0x6843);
    b->AddChar(0x6846);
    b->AddChar(0x6848);
    b->AddChar(0x684c);
    b->AddChar(0x6851);
    b->AddChar(0x6863);
    b->AddChar(0x6865);
    b->AddChar(0x6876);
    b->AddChar(0x6881);
    b->AddChar(0x6885);
    b->AddChar(0x68a6);
    b->AddChar(0x68af);
    b->AddChar(0x68b0);
    b->AddChar(0x68b5);
    b->AddChar(0x68c0);
    b->AddChar(0x68c9);
    b->AddChar(0x68cb);
    b->AddChar(0x68cd);
    b->AddChar(0x68d2);
    b->AddChar(0x68d5);
    b->AddChar(0x68da);
    b->AddChar(0x68ee);
    b->AddChar(0x68fa);
    b->AddChar(0x6905);
    b->AddChar(0x690d);
    b->AddChar(0x6930);
    b->AddChar(0x6954);
    b->AddChar(0x695a);
    b->AddChar(0x6960);
    b->AddChar(0x697c);
    b->AddChar(0x6982);
    b->AddChar(0x6988);
    b->AddChar(0x699c);
    b->AddChar(0x69df);
    b->AddChar(0x6a21);
    b->AddChar(0x6a31);
    b->AddChar(0x6a59);
    b->AddChar(0x6a80);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x6b20 + i);
    }
    b->AddChar(0x6b27);
    b->AddChar(0x6b32);
    b->AddChar(0x6b3a);
    b->AddChar(0x6b3e);
    b->AddChar(0x6b49);
    b->AddChar(0x6b4c);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x6b62 + i);
    }
    b->AddChar(0x6b6a);
    b->AddChar(0x6b7b);
    b->AddChar(0x6b8a);
    b->AddChar(0x6b8b);
    b->AddChar(0x6bb5);
    b->AddChar(0x6bc5);
    b->AddChar(0x6bcd);
    b->AddChar(0x6bcf);
    b->AddChar(0x6bd2);
    b->AddChar(0x6bd4);
    b->AddChar(0x6bd5);
    b->AddChar(0x6bdb);
    b->AddChar(0x6beb);
    b->AddChar(0x6c0f);
    b->AddChar(0x6c11);
    b->AddChar(0x6c14);
    b->AddChar(0x6c1b);
    b->AddChar(0x6c34);
    b->AddChar(0x6c38);
    b->AddChar(0x6c42);
    b->AddChar(0x6c47);
    b->AddChar(0x6c49);
    b->AddChar(0x6c57);
    b->AddChar(0x6c5d);
    b->AddChar(0x6c5f);
    b->AddChar(0x6c60);
    b->AddChar(0x6c61);
    b->AddChar(0x6c64);
    b->AddChar(0x6c6a);
    b->AddChar(0x6c76);
    b->AddChar(0x6c7d);
    b->AddChar(0x6c83);
    b->AddChar(0x6c88);
    b->AddChar(0x6c89);
    b->AddChar(0x6c99);
    b->AddChar(0x6c9f);
    b->AddChar(0x6ca1);
    b->AddChar(0x6ca7);
    b->AddChar(0x6cb3);
    b->AddChar(0x6cb9);
    b->AddChar(0x6cbb);
    b->AddChar(0x6cbf);
    b->AddChar(0x6cc9);
    b->AddChar(0x6cca);
    b->AddChar(0x6cd5);
    b->AddChar(0x6cdb);
    b->AddChar(0x6ce1);
    b->AddChar(0x6ce2);
    b->AddChar(0x6ce3);
    b->AddChar(0x6ce5);
    b->AddChar(0x6ce8);
    b->AddChar(0x6cf0);
    b->AddChar(0x6cf3);
    b->AddChar(0x6cfd);
    b->AddChar(0x6d0b);
    b->AddChar(0x6d12);
    b->AddChar(0x6d17);
    b->AddChar(0x6d1b);
    b->AddChar(0x6d1e);
    b->AddChar(0x6d25);
    b->AddChar(0x6d2a);
    b->AddChar(0x6d32);
    b->AddChar(0x6d3b);
    b->AddChar(0x6d3d);
    b->AddChar(0x6d3e);
    b->AddChar(0x6d41);
    b->AddChar(0x6d45);
    b->AddChar(0x6d46);
    b->AddChar(0x6d4b);
    b->AddChar(0x6d4e);
    b->AddChar(0x6d4f);
    b->AddChar(0x6d51);
    b->AddChar(0x6d53);
    b->AddChar(0x6d59);
    b->AddChar(0x6d66);
    b->AddChar(0x6d69);
    b->AddChar(0x6d6a);
    b->AddChar(0x6d6e);
    b->AddChar(0x6d74);
    b->AddChar(0x6d77);
    b->AddChar(0x6d85);
    b->AddChar(0x6d88);
    b->AddChar(0x6d89);
    b->AddChar(0x6d8c);
    b->AddChar(0x6d9b);
    b->AddChar(0x6da8);
    b->AddChar(0x6daf);
    b->AddChar(0x6db2);
    b->AddChar(0x6db5);
    b->AddChar(0x6dc7);
    b->AddChar(0x6dcb);
    b->AddChar(0x6dd1);
    b->AddChar(0x6dd8);
    b->AddChar(0x6de1);
    b->AddChar(0x6df1);
    b->AddChar(0x6df7);
    b->AddChar(0x6dfb);
    b->AddChar(0x6e05);
    b->AddChar(0x6e10);
    b->AddChar(0x6e21);
    b->AddChar(0x6e23);
    b->AddChar(0x6e29);
    b->AddChar(0x6e2f);
    b->AddChar(0x6e34);
    b->AddChar(0x6e38);
    b->AddChar(0x6e56);
    b->AddChar(0x6e7e);
    b->AddChar(0x6e90);
    b->AddChar(0x6e9c);
    b->AddChar(0x6eaa);
    b->AddChar(0x6ecb);
    b->AddChar(0x6ed1);
    b->AddChar(0x6ed5);
    b->AddChar(0x6eda);
    b->AddChar(0x6ee1);
    b->AddChar(0x6ee5);
    b->AddChar(0x6ee8);
    b->AddChar(0x6ee9);
    b->AddChar(0x6ef4);
    b->AddChar(0x6f02);
    b->AddChar(0x6f0f);
    b->AddChar(0x6f14);
    b->AddChar(0x6f20);
    b->AddChar(0x6f2b);
    b->AddChar(0x6f58);
    b->AddChar(0x6f5c);
    b->AddChar(0x6f6e);
    b->AddChar(0x6f8e);
    b->AddChar(0x6fb3);
    b->AddChar(0x6fc0);
    b->AddChar(0x704c);
    b->AddChar(0x706b);
    b->AddChar(0x706d);
    b->AddChar(0x706f);
    b->AddChar(0x7070);
    b->AddChar(0x7075);
    b->AddChar(0x707e);
    b->AddChar(0x707f);
    b->AddChar(0x7089);
    b->AddChar(0x708e);
    b->AddChar(0x70ae);
    b->AddChar(0x70b8);
    b->AddChar(0x70b9);
    b->AddChar(0x70c2);
    b->AddChar(0x70c8);
    b->AddChar(0x70db);
    b->AddChar(0x70df);
    b->AddChar(0x70e4);
    b->AddChar(0x70e6);
    b->AddChar(0x70e7);
    b->AddChar(0x70ed);
    b->AddChar(0x7126);
    b->AddChar(0x7130);
    b->AddChar(0x7136);
    b->AddChar(0x714c);
    b->AddChar(0x714e);
    b->AddChar(0x715e);
    b->AddChar(0x7167);
    b->AddChar(0x716e);
    b->AddChar(0x718a);
    b->AddChar(0x719f);
    b->AddChar(0x71c3);
    b->AddChar(0x71d5);
    b->AddChar(0x7206);
    b->AddChar(0x722a);
    b->AddChar(0x722c);
    b->AddChar(0x7231);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x7235 + i);
    }
    b->AddChar(0x723d);
    b->AddChar(0x7247);
    b->AddChar(0x7248);
    b->AddChar(0x724c);
    b->AddChar(0x7259);
    b->AddChar(0x725b);
    b->AddChar(0x7261);
    b->AddChar(0x7262);
    b->AddChar(0x7267);
    b->AddChar(0x7269);
    b->AddChar(0x7272);
    b->AddChar(0x7275);
    b->AddChar(0x7279);
    b->AddChar(0x727a);
    b->AddChar(0x72ac);
    b->AddChar(0x72af);
    b->AddChar(0x72b6);
    b->AddChar(0x72b9);
    b->AddChar(0x72c2);
    b->AddChar(0x72d0);
    b->AddChar(0x72d7);
    b->AddChar(0x72e0);
    b->AddChar(0x72ec);
    b->AddChar(0x72ee);
    b->AddChar(0x72f1);
    b->AddChar(0x72fc);
    b->AddChar(0x731b);
    b->AddChar(0x731c);
    b->AddChar(0x732a);
    b->AddChar(0x732b);
    b->AddChar(0x732e);
    b->AddChar(0x7334);
    b->AddChar(0x7384);
    b->AddChar(0x7387);
    b->AddChar(0x7389);
    b->AddChar(0x738b);
    b->AddChar(0x739b);
    b->AddChar(0x73a9);
    b->AddChar(0x73ab);
    b->AddChar(0x73af);
    b->AddChar(0x73b0);
    b->AddChar(0x73b2);
    b->AddChar(0x73bb);
    b->AddChar(0x73c0);
    b->AddChar(0x73ca);
    b->AddChar(0x73cd);
    b->AddChar(0x73e0);
    b->AddChar(0x73ed);
    b->AddChar(0x7403);
    b->AddChar(0x7406);
    b->AddChar(0x740a);
    b->AddChar(0x742a);
    b->AddChar(0x7433);
    b->AddChar(0x7434);
    b->AddChar(0x743c);
    b->AddChar(0x7459);
    b->AddChar(0x745a);
    b->AddChar(0x745c);
    b->AddChar(0x745e);
    b->AddChar(0x745f);
    b->AddChar(0x7470);
    b->AddChar(0x7476);
    b->AddChar(0x7483);
    b->AddChar(0x74dc);
    b->AddChar(0x74e2);
    b->AddChar(0x74e6);
    b->AddChar(0x74f6);
    b->AddChar(0x7518);
    b->AddChar(0x751a);
    b->AddChar(0x751c);
    b->AddChar(0x751f);
    b->AddChar(0x7528);
    b->AddChar(0x752b);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x7530 + i);
    }
    b->AddChar(0x7535);
    b->AddChar(0x7537);
    b->AddChar(0x7538);
    b->AddChar(0x753b);
    b->AddChar(0x7545);
    b->AddChar(0x754c);
    b->AddChar(0x7559);
    b->AddChar(0x7565);
    b->AddChar(0x756a);
    b->AddChar(0x7586);
    b->AddChar(0x758f);
    b->AddChar(0x7591);
    b->AddChar(0x7597);
    b->AddChar(0x75af);
    b->AddChar(0x75b2);
    b->AddChar(0x75bc);
    b->AddChar(0x75be);
    b->AddChar(0x75c5);
    b->AddChar(0x75d5);
    b->AddChar(0x75db);
    b->AddChar(0x75f4);
    b->AddChar(0x7678);
    b->AddChar(0x767b);
    b->AddChar(0x767d);
    b->AddChar(0x767e);
    b->AddChar(0x7684);
    b->AddChar(0x7686);
    b->AddChar(0x7687);
    b->AddChar(0x76ae);
    b->AddChar(0x76b1);
    b->AddChar(0x76c6);
    b->AddChar(0x76c8);
    b->AddChar(0x76ca);
    b->AddChar(0x76d1);
    b->AddChar(0x76d2);
    b->AddChar(0x76d4);
    b->AddChar(0x76d6);
    b->AddChar(0x76d8);
    b->AddChar(0x76db);
    b->AddChar(0x76df);
    b->AddChar(0x76ee);
    b->AddChar(0x76f2);
    b->AddChar(0x76f4);
    b->AddChar(0x76f8);
    b->AddChar(0x76fc);
    b->AddChar(0x76fe);
    b->AddChar(0x7701);
    b->AddChar(0x7709);
    b->AddChar(0x770b);
    b->AddChar(0x771f);
    b->AddChar(0x7720);
    b->AddChar(0x7728);
    b->AddChar(0x772f);
    b->AddChar(0x773c);
    b->AddChar(0x7740);
    b->AddChar(0x775b);
    b->AddChar(0x7761);
    b->AddChar(0x7763);
    b->AddChar(0x778c);
    b->AddChar(0x77a7);
    b->AddChar(0x77db);
    b->AddChar(0x77e3);
    b->AddChar(0x77e5);
    b->AddChar(0x77ed);
    b->AddChar(0x77f3);
    b->AddChar(0x77f6);
    b->AddChar(0x77ff);
    b->AddChar(0x7801);
    b->AddChar(0x7802);
    b->AddChar(0x780d);
    b->AddChar(0x7814);
    b->AddChar(0x7834);
    b->AddChar(0x7840);
    b->AddChar(0x7855);
    b->AddChar(0x786c);
    b->AddChar(0x786e);
    b->AddChar(0x788d);
    b->AddChar(0x788e);
    b->AddChar(0x7891);
    b->AddChar(0x7897);
    b->AddChar(0x789f);
    b->AddChar(0x78a7);
    b->AddChar(0x78b0);
    b->AddChar(0x78c1);
    b->AddChar(0x78c5);
    b->AddChar(0x78e8);
    b->AddChar(0x793a);
    b->AddChar(0x793c);
    b->AddChar(0x793e);
    b->AddChar(0x7948);
    b->AddChar(0x7956);
    b->AddChar(0x795a);
    b->AddChar(0x795d);
    b->AddChar(0x795e);
    b->AddChar(0x7965);
    b->AddChar(0x7968);
    b->AddChar(0x796d);
    b->AddChar(0x796f);
    b->AddChar(0x7977);
    b->AddChar(0x7978);
    b->AddChar(0x7981);
    b->AddChar(0x7984);
    b->AddChar(0x7985);
    b->AddChar(0x798f);
    b->AddChar(0x79bb);
    b->AddChar(0x79c0);
    b->AddChar(0x79c1);
    b->AddChar(0x79cb);
    b->AddChar(0x79cd);
    b->AddChar(0x79d1);
    b->AddChar(0x79d2);
    b->AddChar(0x79d8);
    b->AddChar(0x79df);
    b->AddChar(0x79e4);
    b->AddChar(0x79e6);
    b->AddChar(0x79e9);
    b->AddChar(0x79ef);
    b->AddChar(0x79f0);
    b->AddChar(0x79fb);
    b->AddChar(0x7a00);
    b->AddChar(0x7a0b);
    b->AddChar(0x7a0d);
    b->AddChar(0x7a0e);
    b->AddChar(0x7a23);
    b->AddChar(0x7a33);
    b->AddChar(0x7a3b);
    b->AddChar(0x7a3f);
    b->AddChar(0x7a46);
    b->AddChar(0x7a76);
    b->AddChar(0x7a77);
    b->AddChar(0x7a79);
    b->AddChar(0x7a7a);
    b->AddChar(0x7a7f);
    b->AddChar(0x7a81);
    b->AddChar(0x7a97);
    b->AddChar(0x7a9d);
    b->AddChar(0x7acb);
    b->AddChar(0x7ad9);
    b->AddChar(0x7ade);
    b->AddChar(0x7adf);
    b->AddChar(0x7ae0);
    b->AddChar(0x7ae5);
    b->AddChar(0x7aef);
    b->AddChar(0x7af9);
    b->AddChar(0x7aff);
    b->AddChar(0x7b11);
    b->AddChar(0x7b14);
    b->AddChar(0x7b1b);
    b->AddChar(0x7b26);
    b->AddChar(0x7b28);
    b->AddChar(0x7b2c);
    b->AddChar(0x7b3c);
    b->AddChar(0x7b49);
    b->AddChar(0x7b4b);
    b->AddChar(0x7b51);
    b->AddChar(0x7b52);
    b->AddChar(0x7b54);
    b->AddChar(0x7b56);
    b->AddChar(0x7b79);
    b->AddChar(0x7b7e);
    b->AddChar(0x7b80);
    b->AddChar(0x7b97);
    b->AddChar(0x7ba1);
    b->AddChar(0x7bad);
    b->AddChar(0x7bb1);
    b->AddChar(0x7bc7);
    b->AddChar(0x7bee);
    b->AddChar(0x7bf7);
    b->AddChar(0x7c3f);
    b->AddChar(0x7c4d);
    b->AddChar(0x7c73);
    b->AddChar(0x7c7b);
    b->AddChar(0x7c89);
    b->AddChar(0x7c92);
    b->AddChar(0x7c97);
    b->AddChar(0x7c9f);
    b->AddChar(0x7ca4);
    b->AddChar(0x7cae);
    b->AddChar(0x7cb9);
    b->AddChar(0x7cbe);
    b->AddChar(0x7cca);
    b->AddChar(0x7cd5);
    b->AddChar(0x7cd6);
    b->AddChar(0x7cdf);
    b->AddChar(0x7cfb);
    b->AddChar(0x7d20);
    b->AddChar(0x7d22);
    b->AddChar(0x7d27);
    b->AddChar(0x7d2b);
    b->AddChar(0x7d2f);
    b->AddChar(0x7e41);
    b->AddChar(0x7ea0);
    b->AddChar(0x7ea2);
    b->AddChar(0x7ea6);
    b->AddChar(0x7ea7);
    b->AddChar(0x7eaa);
    b->AddChar(0x7eac);
    b->AddChar(0x7eaf);
    b->AddChar(0x7eb2);
    b->AddChar(0x7eb3);
    b->AddChar(0x7eb5);
    b->AddChar(0x7eb7);
    b->AddChar(0x7eb8);
    b->AddChar(0x7ebd);
    b->AddChar(0x7ebf);
    b->AddChar(0x7ec3);
    b->AddChar(0x7ec4);
    b->AddChar(0x7ec6);
    b->AddChar(0x7ec7);
    b->AddChar(0x7ec8);
    b->AddChar(0x7ecd);
    b->AddChar(0x7ecf);
    b->AddChar(0x7ed3);
    b->AddChar(0x7ed5);
    b->AddChar(0x7ed8);
    b->AddChar(0x7ed9);
    b->AddChar(0x7edc);
    b->AddChar(0x7edd);
    b->AddChar(0x7edf);
    b->AddChar(0x7ee7);
    b->AddChar(0x7ee9);
    b->AddChar(0x7eea);
    b->AddChar(0x7eed);
    b->AddChar(0x7ef4);
    b->AddChar(0x7ef5);
    b->AddChar(0x7efc);
    b->AddChar(0x7eff);
    b->AddChar(0x7f05);
    b->AddChar(0x7f06);
    b->AddChar(0x7f0e);
    b->AddChar(0x7f13);
    b->AddChar(0x7f16);
    b->AddChar(0x7f18);
    b->AddChar(0x7f20);
    b->AddChar(0x7f29);
    b->AddChar(0x7f34);
    b->AddChar(0x7f36);
    b->AddChar(0x7f38);
    b->AddChar(0x7f3a);
    b->AddChar(0x7f50);
    b->AddChar(0x7f51);
    b->AddChar(0x7f55);
    b->AddChar(0x7f57);
    b->AddChar(0x7f5a);
    b->AddChar(0x7f62);
    b->AddChar(0x7f6a);
    b->AddChar(0x7f6e);
    b->AddChar(0x7f72);
    b->AddChar(0x7f8a);
    b->AddChar(0x7f8e);
    b->AddChar(0x7f9e);
    b->AddChar(0x7fa4);
    b->AddChar(0x7faf);
    b->AddChar(0x7fbd);
    b->AddChar(0x7fc1);
    b->AddChar(0x7fc5);
    b->AddChar(0x7fd4);
    b->AddChar(0x7fd8);
    b->AddChar(0x7fe0);
    b->AddChar(0x7ff0);
    b->AddChar(0x7ffb);
    b->AddChar(0x7ffc);
    b->AddChar(0x8000);
    b->AddChar(0x8001);
    b->AddChar(0x8003);
    b->AddChar(0x8005);
    b->AddChar(0x800c);
    b->AddChar(0x800d);
    b->AddChar(0x8010);
    b->AddChar(0x8017);
    b->AddChar(0x8033);
    b->AddChar(0x8036);
    b->AddChar(0x8038);
    b->AddChar(0x804a);
    b->AddChar(0x804c);
    b->AddChar(0x8054);
    b->AddChar(0x8058);
    b->AddChar(0x805a);
    b->AddChar(0x806a);
    b->AddChar(0x8089);
    b->AddChar(0x8096);
    b->AddChar(0x809a);
    b->AddChar(0x80a1);
    b->AddChar(0x80a4);
    b->AddChar(0x80a5);
    b->AddChar(0x80a9);
    b->AddChar(0x80af);
    b->AddChar(0x80b2);
    b->AddChar(0x80c1);
    b->AddChar(0x80c6);
    b->AddChar(0x80cc);
    b->AddChar(0x80ce);
    b->AddChar(0x80d6);
    b->AddChar(0x80dc);
    b->AddChar(0x80de);
    b->AddChar(0x80e1);
    b->AddChar(0x80f6);
    b->AddChar(0x80f8);
    b->AddChar(0x80fd);
    b->AddChar(0x8106);
    b->AddChar(0x8111);
    b->AddChar(0x811a);
    b->AddChar(0x8131);
    b->AddChar(0x8138);
    b->AddChar(0x814a);
    b->AddChar(0x8150);
    b->AddChar(0x8153);
    b->AddChar(0x8170);
    b->AddChar(0x8179);
    b->AddChar(0x817e);
    b->AddChar(0x817f);
    b->AddChar(0x81c2);
    b->AddChar(0x81e3);
    b->AddChar(0x81ea);
    b->AddChar(0x81ed);
    b->AddChar(0x81f3);
    b->AddChar(0x81f4);
    b->AddChar(0x820c);
    b->AddChar(0x820d);
    b->AddChar(0x8212);
    b->AddChar(0x8214);
    b->AddChar(0x821e);
    b->AddChar(0x821f);
    b->AddChar(0x822a);
    b->AddChar(0x822c);
    b->AddChar(0x8230);
    b->AddChar(0x8235);
    b->AddChar(0x8239);
    b->AddChar(0x8247);
    b->AddChar(0x826e);
    b->AddChar(0x826f);
    b->AddChar(0x8272);
    b->AddChar(0x827a);
    b->AddChar(0x827e);
    b->AddChar(0x8282);
    b->AddChar(0x8292);
    b->AddChar(0x829d);
    b->AddChar(0x82a6);
    b->AddChar(0x82ac);
    b->AddChar(0x82ad);
    b->AddChar(0x82b1);
    b->AddChar(0x82b3);
    b->AddChar(0x82bd);
    b->AddChar(0x82cd);
    b->AddChar(0x82cf);
    b->AddChar(0x82d7);
    b->AddChar(0x82dc);
    b->AddChar(0x82de);
    b->AddChar(0x82e5);
    b->AddChar(0x82e6);
    b->AddChar(0x82f1);
    b->AddChar(0x8302);
    b->AddChar(0x8303);
    b->AddChar(0x8328);
    b->AddChar(0x832b);
    b->AddChar(0x8336);
    b->AddChar(0x8349);
    b->AddChar(0x8350);
    b->AddChar(0x8352);
    b->AddChar(0x8363);
    b->AddChar(0x836f);
    b->AddChar(0x8377);
    b->AddChar(0x8389);
    b->AddChar(0x838e);
    b->AddChar(0x83aa);
    b->AddChar(0x83ab);
    b->AddChar(0x83b1);
    b->AddChar(0x83b2);
    b->AddChar(0x83b7);
    b->AddChar(0x83c7);
    b->AddChar(0x83dc);
    b->AddChar(0x83e9);
    b->AddChar(0x83f1);
    b->AddChar(0x83f2);
    b->AddChar(0x8404);
    b->AddChar(0x840d);
    b->AddChar(0x8424);
    b->AddChar(0x8425);
    b->AddChar(0x8427);
    b->AddChar(0x8428);
    b->AddChar(0x843d);
    b->AddChar(0x8457);
    b->AddChar(0x845b);
    b->AddChar(0x8461);
    b->AddChar(0x846b);
    b->AddChar(0x8475);
    b->AddChar(0x8482);
    b->AddChar(0x848b);
    b->AddChar(0x8499);
    b->AddChar(0x84b8);
    b->AddChar(0x84c9);
    b->AddChar(0x84dd);
    b->AddChar(0x84ec);
    b->AddChar(0x84ff);
    b->AddChar(0x8511);
    b->AddChar(0x8521);
    b->AddChar(0x853d);
    b->AddChar(0x8584);
    b->AddChar(0x85aa);
    b->AddChar(0x85af);
    b->AddChar(0x85c9);
    b->AddChar(0x85cf);
    b->AddChar(0x85e4);
    b->AddChar(0x8611);
    b->AddChar(0x864e);
    b->AddChar(0x8651);
    b->AddChar(0x866b);
    b->AddChar(0x8679);
    b->AddChar(0x867d);
    b->AddChar(0x867e);
    b->AddChar(0x8681);
    b->AddChar(0x8682);
    b->AddChar(0x86c7);
    b->AddChar(0x86cb);
    b->AddChar(0x86d9);
    b->AddChar(0x86db);
    b->AddChar(0x86ee);
    b->AddChar(0x8702);
    b->AddChar(0x8717);
    b->AddChar(0x8718);
    b->AddChar(0x871c);
    b->AddChar(0x8721);
    b->AddChar(0x874e);
    b->AddChar(0x8774);
    b->AddChar(0x8776);
    b->AddChar(0x8783);
    b->AddChar(0x878d);
    b->AddChar(0x87f9);
    b->AddChar(0x8822);
    b->AddChar(0x8840);
    b->AddChar(0x884c);
    b->AddChar(0x8857);
    b->AddChar(0x8861);
    b->AddChar(0x8863);
    b->AddChar(0x8865);
    b->AddChar(0x8868);
    b->AddChar(0x888b);
    b->AddChar(0x88ab);
    b->AddChar(0x88ad);
    b->AddChar(0x88c1);
    b->AddChar(0x88c2);
    b->AddChar(0x88c5);
    b->AddChar(0x88d5);
    b->AddChar(0x88e4);
    b->AddChar(0x88f9);
    b->AddChar(0x897f);
    b->AddChar(0x8981);
    b->AddChar(0x8986);
    b->AddChar(0x89c1);
    b->AddChar(0x89c2);
    b->AddChar(0x89c4);
    b->AddChar(0x89c6);
    b->AddChar(0x89c8);
    b->AddChar(0x89c9);
    b->AddChar(0x89d2);
    b->AddChar(0x89e3);
    b->AddChar(0x8a00);
    b->AddChar(0x8a89);
    b->AddChar(0x8a93);
    b->AddChar(0x8b66);
    b->AddChar(0x8ba1);
    b->AddChar(0x8ba2);
    b->AddChar(0x8ba4);
    b->AddChar(0x8ba8);
    b->AddChar(0x8ba9);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x8bad + i);
    }
    b->AddChar(0x8bb2);
    b->AddChar(0x8bb7);
    b->AddChar(0x8bb8);
    b->AddChar(0x8bba);
    b->AddChar(0x8bbe);
    b->AddChar(0x8bbf);
    b->AddChar(0x8bc1);
    b->AddChar(0x8bc4);
    b->AddChar(0x8bc6);
    b->AddChar(0x8bc9);
    b->AddChar(0x8bcd);
    b->AddChar(0x8bd1);
    b->AddChar(0x8bd5);
    b->AddChar(0x8bd7);
    b->AddChar(0x8bda);
    b->AddChar(0x8bdd);
    b->AddChar(0x8bde);
    b->AddChar(0x8be2);
    b->AddChar(0x8be5);
    b->AddChar(0x8be6);
    b->AddChar(0x8bed);
    b->AddChar(0x8bef);
    b->AddChar(0x8bf4);
    b->AddChar(0x8bf7);
    b->AddChar(0x8bf8);
    b->AddChar(0x8bfa);
    b->AddChar(0x8bfb);
    b->AddChar(0x8bfe);
    b->AddChar(0x8c01);
    b->AddChar(0x8c03);
    b->AddChar(0x8c05);
    b->AddChar(0x8c08);
    b->AddChar(0x8c0a);
    b->AddChar(0x8c0b);
    b->AddChar(0x8c0d);
    b->AddChar(0x8c13);
    b->AddChar(0x8c1c);
    b->AddChar(0x8c22);
    b->AddChar(0x8c28);
    b->AddChar(0x8c2c);
    b->AddChar(0x8c31);
    b->AddChar(0x8c37);
    b->AddChar(0x8c46);
    b->AddChar(0x8c5a);
    b->AddChar(0x8c61);
    b->AddChar(0x8c6a);
    b->AddChar(0x8c8c);
    b->AddChar(0x8d1d);
    b->AddChar(0x8d1e);
    b->AddChar(0x8d1f);
    for(int i = 0; i < 10; ++i) {
        b->AddChar(0x8d21 + i);
    }
    b->AddChar(0x8d2d);
    b->AddChar(0x8d2f);
    b->AddChar(0x8d31);
    b->AddChar(0x8d34);
    b->AddChar(0x8d35);
    b->AddChar(0x8d38);
    b->AddChar(0x8d39);
    b->AddChar(0x8d3a);
    b->AddChar(0x8d3c);
    b->AddChar(0x8d3e);
    b->AddChar(0x8d44);
    b->AddChar(0x8d4b);
    b->AddChar(0x8d4c);
    b->AddChar(0x8d4f);
    b->AddChar(0x8d50);
    b->AddChar(0x8d54);
    b->AddChar(0x8d56);
    b->AddChar(0x8d5a);
    b->AddChar(0x8d5b);
    b->AddChar(0x8d5e);
    b->AddChar(0x8d60);
    b->AddChar(0x8d62);
    b->AddChar(0x8d64);
    b->AddChar(0x8d6b);
    b->AddChar(0x8d70);
    b->AddChar(0x8d75);
    b->AddChar(0x8d77);
    b->AddChar(0x8d81);
    b->AddChar(0x8d85);
    b->AddChar(0x8d8a);
    b->AddChar(0x8d8b);
    b->AddChar(0x8da3);
    b->AddChar(0x8db3);
    b->AddChar(0x8dc3);
    b->AddChar(0x8dcc);
    b->AddChar(0x8dd1);
    b->AddChar(0x8ddd);
    b->AddChar(0x8ddf);
    b->AddChar(0x8de4);
    b->AddChar(0x8def);
    b->AddChar(0x8df3);
    b->AddChar(0x8e0f);
    b->AddChar(0x8e22);
    b->AddChar(0x8e29);
    b->AddChar(0x8e2a);
    b->AddChar(0x8eab);
    b->AddChar(0x8eac);
    b->AddChar(0x8eb2);
    b->AddChar(0x8f66);
    b->AddChar(0x8f68);
    b->AddChar(0x8f69);
    b->AddChar(0x8f6c);
    b->AddChar(0x8f6e);
    b->AddChar(0x8f6f);
    b->AddChar(0x8f70);
    b->AddChar(0x8f74);
    b->AddChar(0x8f7b);
    b->AddChar(0x8f7d);
    b->AddChar(0x8f83);
    b->AddChar(0x8f85);
    b->AddChar(0x8f86);
    b->AddChar(0x8f88);
    b->AddChar(0x8f89);
    b->AddChar(0x8f90);
    b->AddChar(0x8f91);
    b->AddChar(0x8f93);
    b->AddChar(0x8f9b);
    b->AddChar(0x8f9e);
    b->AddChar(0x8fa8);
    b->AddChar(0x8fa9);
    b->AddChar(0x8fb0);
    b->AddChar(0x8fb1);
    b->AddChar(0x8fb9);
    b->AddChar(0x8fbe);
    b->AddChar(0x8fc1);
    b->AddChar(0x8fc5);
    b->AddChar(0x8fc7);
    b->AddChar(0x8fc8);
    b->AddChar(0x8fce);
    b->AddChar(0x8fd0);
    b->AddChar(0x8fd1);
    b->AddChar(0x8fd4);
    b->AddChar(0x8fd8);
    b->AddChar(0x8fd9);
    for(int i = 0; i < 5; ++i) {
        b->AddChar(0x8fdb + i);
    }
    b->AddChar(0x8fe6);
    b->AddChar(0x8fea);
    b->AddChar(0x8feb);
    b->AddChar(0x8ff0);
    b->AddChar(0x8ff7);
    b->AddChar(0x8ff9);
    b->AddChar(0x8ffd);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x9000 + i);
    }
    b->AddChar(0x9006);
    b->AddChar(0x9009);
    b->AddChar(0x900a);
    b->AddChar(0x900f);
    b->AddChar(0x9010);
    b->AddChar(0x9012);
    b->AddChar(0x9014);
    b->AddChar(0x901a);
    b->AddChar(0x901b);
    b->AddChar(0x901d);
    b->AddChar(0x901f);
    b->AddChar(0x9020);
    b->AddChar(0x9022);
    b->AddChar(0x9038);
    b->AddChar(0x903b);
    b->AddChar(0x903c);
    b->AddChar(0x9047);
    b->AddChar(0x904d);
    b->AddChar(0x9053);
    b->AddChar(0x9057);
    b->AddChar(0x906d);
    b->AddChar(0x906e);
    b->AddChar(0x9075);
    b->AddChar(0x907f);
    b->AddChar(0x9080);
    b->AddChar(0x9093);
    b->AddChar(0x90a3);
    b->AddChar(0x90a6);
    b->AddChar(0x90aa);
    b->AddChar(0x90ae);
    b->AddChar(0x90b1);
    b->AddChar(0x90bb);
    b->AddChar(0x90c1);
    b->AddChar(0x90ce);
    b->AddChar(0x90d1);
    b->AddChar(0x90e8);
    b->AddChar(0x90ed);
    b->AddChar(0x90fd);
    b->AddChar(0x9102);
    b->AddChar(0x9119);
    b->AddChar(0x9149);
    b->AddChar(0x914b);
    b->AddChar(0x914d);
    b->AddChar(0x9152);
    b->AddChar(0x9162);
    b->AddChar(0x9177);
    b->AddChar(0x9178);
    b->AddChar(0x9189);
    b->AddChar(0x9192);
    b->AddChar(0x91c7);
    b->AddChar(0x91ca);
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0x91cc + i);
    }
    b->AddChar(0x91d1);
    b->AddChar(0x9488);
    b->AddChar(0x9489);
    b->AddChar(0x9493);
    b->AddChar(0x949f);
    b->AddChar(0x94a2);
    b->AddChar(0x94a5);
    b->AddChar(0x94a6);
    b->AddChar(0x94ae);
    b->AddChar(0x94af);
    b->AddChar(0x94b1);
    b->AddChar(0x94bb);
    b->AddChar(0x94c1);
    b->AddChar(0x94c2);
    b->AddChar(0x94c3);
    b->AddChar(0x94c5);
    b->AddChar(0x94db);
    b->AddChar(0x94dc);
    b->AddChar(0x94e2);
    b->AddChar(0x94ed);
    b->AddChar(0x94f6);
    b->AddChar(0x94fa);
    b->AddChar(0x94fe);
    b->AddChar(0x9500);
    b->AddChar(0x9501);
    b->AddChar(0x9504);
    b->AddChar(0x9505);
    b->AddChar(0x950b);
    b->AddChar(0x9511);
    b->AddChar(0x9519);
    b->AddChar(0x951a);
    b->AddChar(0x9521);
    b->AddChar(0x9524);
    b->AddChar(0x9526);
    b->AddChar(0x952e);
    b->AddChar(0x953a);
    b->AddChar(0x9547);
    b->AddChar(0x9551);
    b->AddChar(0x955c);
    b->AddChar(0x956d);
    b->AddChar(0x957f);
    b->AddChar(0x95e8);
    b->AddChar(0x95ea);
    b->AddChar(0x95ed);
    b->AddChar(0x95ee);
    b->AddChar(0x95f0);
    b->AddChar(0x95f2);
    b->AddChar(0x95f4);
    b->AddChar(0x95f7);
    b->AddChar(0x95f9);
    b->AddChar(0x95fa);
    b->AddChar(0x95fb);
    b->AddChar(0x9601);
    b->AddChar(0x9605);
    b->AddChar(0x9610);
    b->AddChar(0x9614);
    b->AddChar(0x961f);
    b->AddChar(0x962e);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0x9631 + i);
    }
    b->AddChar(0x963b);
    b->AddChar(0x963f);
    b->AddChar(0x9640);
    b->AddChar(0x9644);
    b->AddChar(0x9645);
    b->AddChar(0x9646);
    b->AddChar(0x9648);
    b->AddChar(0x964d);
    b->AddChar(0x9650);
    b->AddChar(0x9662);
    b->AddChar(0x9664);
    b->AddChar(0x9669);
    b->AddChar(0x966a);
    b->AddChar(0x9675);
    b->AddChar(0x9676);
    b->AddChar(0x9677);
    b->AddChar(0x9686);
    b->AddChar(0x968f);
    b->AddChar(0x9690);
    b->AddChar(0x9694);
    b->AddChar(0x969c);
    b->AddChar(0x96a7);
    b->AddChar(0x96be);
    b->AddChar(0x96c4);
    b->AddChar(0x96c5);
    b->AddChar(0x96c6);
    b->AddChar(0x96c9);
    b->AddChar(0x96d5);
    b->AddChar(0x96e8);
    b->AddChar(0x96ea);
    b->AddChar(0x96ef);
    b->AddChar(0x96f3);
    b->AddChar(0x96f6);
    b->AddChar(0x96f7);
    b->AddChar(0x96fe);
    b->AddChar(0x9700);
    b->AddChar(0x9707);
    b->AddChar(0x970d);
    b->AddChar(0x9716);
    b->AddChar(0x9732);
    b->AddChar(0x9738);
    b->AddChar(0x9739);
    b->AddChar(0x973e);
    b->AddChar(0x9752);
    b->AddChar(0x9756);
    b->AddChar(0x9759);
    b->AddChar(0x975e);
    b->AddChar(0x9760);
    b->AddChar(0x9762);
    b->AddChar(0x9769);
    b->AddChar(0x9774);
    b->AddChar(0x9776);
    b->AddChar(0x977c);
    b->AddChar(0x978b);
    b->AddChar(0x9791);
    b->AddChar(0x97a0);
    b->AddChar(0x97e6);
    b->AddChar(0x97e9);
    b->AddChar(0x97f3);
    b->AddChar(0x9875);
    b->AddChar(0x9876);
    b->AddChar(0x9879);
    b->AddChar(0x987a);
    b->AddChar(0x987b);
    b->AddChar(0x987d);
    b->AddChar(0x987e);
    b->AddChar(0x987f);
    b->AddChar(0x9884);
    b->AddChar(0x9886);
    b->AddChar(0x9887);
    b->AddChar(0x9891);
    b->AddChar(0x9897);
    b->AddChar(0x9898);
    b->AddChar(0x989d);
    b->AddChar(0x98a0);
    b->AddChar(0x98ce);
    b->AddChar(0x98d8);
    b->AddChar(0x98d9);
    b->AddChar(0x98de);
    b->AddChar(0x98df);
    b->AddChar(0x9910);
    b->AddChar(0x996d);
    b->AddChar(0x996e);
    b->AddChar(0x9970);
    b->AddChar(0x9971);
    b->AddChar(0x997c);
    b->AddChar(0x9986);
    b->AddChar(0x998f);
    b->AddChar(0x9996);
    b->AddChar(0x9999);
    b->AddChar(0x99a8);
    b->AddChar(0x9a6c);
    b->AddChar(0x9a71);
    b->AddChar(0x9a76);
    b->AddChar(0x9a7b);
    b->AddChar(0x9a7c);
    b->AddChar(0x9a7e);
    b->AddChar(0x9a86);
    b->AddChar(0x9a8c);
    b->AddChar(0x9a91);
    b->AddChar(0x9a97);
    b->AddChar(0x9a9a);
    b->AddChar(0x9aa4);
    b->AddChar(0x9aa8);
    b->AddChar(0x9ad8);
    b->AddChar(0x9ae6);
    b->AddChar(0x9b3c);
    b->AddChar(0x9b41);
    b->AddChar(0x9b42);
    b->AddChar(0x9b45);
    b->AddChar(0x9b54);
    b->AddChar(0x9c7c);
    b->AddChar(0x9c81);
    b->AddChar(0x9c9c);
    b->AddChar(0x9ca4);
    b->AddChar(0x9cb8);
    b->AddChar(0x9cc4);
    b->AddChar(0x9e1f);
    b->AddChar(0x9e21);
    b->AddChar(0x9e23);
    b->AddChar(0x9e2d);
    b->AddChar(0x9e3d);
    b->AddChar(0x9e3f);
    b->AddChar(0x9e45);
    b->AddChar(0x9e64);
    b->AddChar(0x9e70);
    b->AddChar(0x9e7f);
    b->AddChar(0x9ea6);
    b->AddChar(0x9ebb);
    b->AddChar(0x9ec4);
    b->AddChar(0x9ece);
    b->AddChar(0x9ed1);
    b->AddChar(0x9ed8);
    b->AddChar(0x9f13);
    b->AddChar(0x9f20);
    b->AddChar(0x9f3b);
    b->AddChar(0x9f50);
    b->AddChar(0x9f7f);
    b->AddChar(0x9f84);
    b->AddChar(0x9f99);
    b->AddChar(0x9f9f);
    b->AddChar(0xfe30);
    b->AddChar(0xfe31);
    for(int i = 0; i < 18; ++i) {
        b->AddChar(0xfe33 + i);
    }
    for(int i = 0; i < 10; ++i) {
        b->AddChar(0xfe49 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xfe54 + i);
    }
    for(int i = 0; i < 9; ++i) {
        b->AddChar(0xfe59 + i);
    }
    b->AddChar(0xfe63);
    b->AddChar(0xfe68);
    b->AddChar(0xfe6a);
    b->AddChar(0xfe6b);
    b->AddChar(0xff01);
    b->AddChar(0xff02);
    b->AddChar(0xff03);
    for(int i = 0; i < 6; ++i) {
        b->AddChar(0xff05 + i);
    }
    for(int i = 0; i < 4; ++i) {
        b->AddChar(0xff0c + i);
    }
    b->AddChar(0xff1a);
    b->AddChar(0xff1b);
    b->AddChar(0xff1f);
    b->AddChar(0xff20);
    b->AddChar(0xff3b);
    b->AddChar(0xff3c);
    b->AddChar(0xff3d);
    b->AddChar(0xff3f);
    b->AddChar(0xff5b);
    b->AddChar(0xff5d);
}

// NOLINTEND(cata-static-declarations,readability-function-size)
